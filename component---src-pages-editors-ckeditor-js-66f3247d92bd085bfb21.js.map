{"version":3,"sources":["webpack:///./src/pages/editors/ckeditor.js","webpack:///./src/components/SEO.js"],"names":["__webpack_require__","r","__webpack_exports__","d","CKEditor","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","oah_ui__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","_useState","useState","editor","setEditor","useEffect","window","ClassicEditor","require","Editor","a","createElement","title","keywords","SEO","_ref","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,4BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAA,KAIe,SAASI,IAAW,IAAAM,EACLC,mBAAS,IAA9BC,EAD0BF,EAAA,GAClBG,EADkBH,EAAA,GAWjC,OARAI,oBAAU,WACR,GAAIC,OAAQ,CACV,IAAMC,EAAgBC,EAAQ,KACxBC,EAASD,EAAQ,KACvBJ,EAAUP,EAAAa,EAAAC,cAACF,EAAD,CAAQN,OAAQI,OAE3B,IAGDV,EAAAa,EAAAC,cAACZ,EAAA,KAAD,KACEF,EAAAa,EAAAC,cAACX,EAAA,EAAD,CAAKY,MAAM,WAAWC,SAAU,CAAC,MAAO,cAAe,WACvDhB,EAAAa,EAAAC,cAAA,0BACAd,EAAAa,EAAAC,cAACZ,EAAA,SAAD,KAAWI,8GCdjB,SAASW,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAML,EAAmBE,EAAnBF,SAAUD,EAASG,EAATH,MAChD,OACEO,EAAAT,EAAAC,cAACS,EAAA,YAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EACJT,GAAeQ,EAAKE,KAAKC,aAAaX,YACxC,OACEG,EAAAT,EAAAC,cAACiB,EAAAlB,EAAD,CACEmB,eAAgB,CACdZ,QAEFL,MAAOA,EACPkB,cAAa,QAAUN,EAAKE,KAAKC,aAAaf,MAC9CM,KAAM,CACJ,CACEa,KAAM,cACNC,QAASP,GAEX,CACEQ,SAAU,WACVD,QAASpB,GAEX,CACEqB,SAAU,iBACVD,QAASP,GAEX,CACEQ,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAM,gBACNC,QAASpB,GAEX,CACEmB,KAAM,sBACNC,QAASP,IAGVU,OACCtB,EAASuB,OAAS,EACd,CACAL,KAAM,WACNC,QAASnB,EAASwB,KAAK,OAEvB,IAELF,OAAOjB,MAtDlBM,KAAAc,IA8DJxB,EAAIyB,aAAe,CACjBtB,KAAM,KACNC,KAAM,GACNL,SAAU,IAGZC,EAAI0B,UAAY,CACdxB,YAAayB,IAAUC,OACvBzB,KAAMwB,IAAUC,OAChBxB,KAAMuB,IAAUE,MAChB9B,SAAU4B,IAAUG,QAAQH,IAAUC,QACtC9B,MAAO6B,IAAUC,OAAOG,YAGX/B,MAEf,IAAMQ,EAAY","file":"component---src-pages-editors-ckeditor-js-66f3247d92bd085bfb21.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, CardBody } from 'oah-ui';\nimport SEO from '../../components/SEO';\n\nexport default function CKEditor() {\n  const [editor, setEditor] = useState('');\n\n  useEffect(() => {\n    if (window) {\n      const ClassicEditor = require('@ckeditor/ckeditor5-build-classic');\n      const Editor = require('@ckeditor/ckeditor5-react');\n      setEditor(<Editor editor={ClassicEditor} />);\n    }\n  }, []);\n\n  return (\n    <Card>\n      <SEO title=\"CKEditor\" keywords={['OAH', 'application', 'react']} />\n      <header>CKEditor</header>\n      <CardBody>{editor}</CardBody>\n    </Card>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription\n              },\n              {\n                property: 'og:title',\n                content: title\n              },\n              {\n                property: 'og:description',\n                content: metaDescription\n              },\n              {\n                property: 'og:type',\n                content: 'website'\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary'\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: 'twitter:title',\n                content: title\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', ')\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}