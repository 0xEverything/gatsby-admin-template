{"version":3,"sources":["webpack:///./node_modules/tinymce/plugins/table/index.js","webpack:///./node_modules/tinymce/plugins/table/plugin.js","webpack:///./node_modules/tinymce/plugins/link/index.js","webpack:///./node_modules/tinymce/plugins/link/plugin.js","webpack:///./node_modules/tinymce/plugins/image/index.js","webpack:///./node_modules/tinymce/plugins/image/plugin.js","webpack:///./node_modules/tinymce/plugins/code/index.js","webpack:///./node_modules/tinymce/plugins/code/plugin.js","webpack:///./node_modules/@tinymce/tinymce-react/node_modules/prop-types/index.js","webpack:///./node_modules/@tinymce/tinymce-react/node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/@tinymce/tinymce-react/node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/@tinymce/tinymce-react/lib/es2015/TinyMCE.js","webpack:///./node_modules/@tinymce/tinymce-react/lib/es2015/components/Editor.js","webpack:///./node_modules/@tinymce/tinymce-react/lib/es2015/components/EditorPropTypes.js","webpack:///./node_modules/@tinymce/tinymce-react/lib/es2015/Utils.js","webpack:///./node_modules/@tinymce/tinymce-react/lib/es2015/ScriptLoader.js","webpack:///./node_modules/@tinymce/tinymce-react/lib/es2015/index.js"],"names":["__webpack_require__","domGlobals","Cell","initial","value","get","set","v","clone","noop","args","_i","arguments","length","compose","fa","fb","apply","constant","identity","x","curry","fn","initialArgs","restArgs","all","concat","pIndexOf","not","f","never","always","never$1","always$1","none","NONE","eq","o","isNone","call","thunk","id","n","me","fold","s","is","isSome","getOr","getOrThunk","getOrDie","msg","Error","getOrNull","getOrUndefined","or","orThunk","map","ap","each","bind","flatten","exists","forall","filter","equals","equals_","toArray","toString","Object","freeze","some","a","constant_a","self","optfab","fab","elementEq","b","Option","from","global","tinymce","util","Tools","resolve","isType","type","t","Array","prototype","isPrototypeOf","String","typeOf","isString","isArray","isBoolean","isFunction","isNumber","rawIndexOf","undefined","indexOf","xs","slowIndexOf","contains","pred","findIndex","len","r","i","push","foldr","acc","eachr","foldl","find","output","slice","reverse","keys","hasOwnProperty","each$1","obj","props","k","map$1","tupleMap","tuple","key","has","Immutable","fields","values","struct","name","sort","arr","reqMessage","required","join","unsuppMessage","unsupported","validateStrArr","label","array","checkDupes","everything","sorted","d","MixedBag","optional","keys$1","req","opt","COMMENT","Node","ATTRIBUTE_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT","DOCUMENT_NODE","ELEMENT","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","ELEMENT_NODE","TEXT","TEXT_NODE","PROCESSING_INSTRUCTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","NOTATION_NODE","element","dom","nodeName","toLowerCase","nodeType","isType$1","isComment","isElement","isText","isDocument","rawSet","console","error","setAttribute","setAll","attrs","get$1","getAttribute","has$1","hasAttribute","remove","removeAttribute","attributes","attr","checkRange","str","substr","start","contains$1","startsWith","prefix","isSupported","style","cached","called","fromDom","node","Element","fromHtml","html","scope","div","document","createElement","innerHTML","hasChildNodes","childNodes","fromTag","tag","fromText","text","createTextNode","fromPoint","docElm","y","doc","elementFromPoint","inBody","parentNode","ownerDocument","body","getBody","internalSet","property","setProperty","set$1","setAll$1","css","get$2","window","getComputedStyle","getPropertyValue","getUnsafeProperty","getRaw","raw","remove$1","removeProperty","internalRemove","replace","Global","Function","p","parts","path","split","Global$1","actual","unsafe","compareDocumentPosition","match","DOCUMENT_POSITION_CONTAINED_BY","unknown","nu","major","minor","Version","detect","versionRegexes","agent","cleanedAgent","regexes","test","firstMatch","group","Number","find$1","isBrowser","current","nu$1","info","version","isEdge","isChrome","isIE","isOpera","isFirefox","isSafari","Browser","edge","chrome","ie","opera","firefox","safari","isOS","nu$2","isWindows","isiOS","isAndroid","isOSX","isLinux","isSolaris","isFreeBSD","OperatingSystem","windows","ios","android","linux","osx","solaris","freebsd","detect$1","candidates","userAgent","candidate","search","UaString","browsers","browser","oses","os","normalVersionRegex","checkContains","target","uastring","PlatformInfo","PlatformDetection","deviceType","isiPad","isiPhone","isAndroid3","isAndroid4","isTablet","isTouch","isPhone","iOSwebview","isWebView","DeviceType","PlatformDetection$1","navigator","ELEMENT$1","DOCUMENT$1","selector","elem","matches","msMatchesSelector","webkitMatchesSelector","mozMatchesSelector","bypassSelector","childElementCount","e1","e2","contains$2","d1","d2","is$1","owner","parent","parents","isRoot","stop","ret","rawParent","prevSibling","previousSibling","nextSibling","children","child","index","cs","before","marker","insertBefore","after","append","prepend","firstChild","appendChild","wrap","wrapper","after$1","elements","e","append$1","empty","textContent","rogue","remove$2","removeChild","unwrap","children$1","dimensions","grid","address","coords","detail","detailnew","Structs","extended","rowdata","elementnew","rowdatanew","rowcells","rowdetails","bounds","descendants","predicate","result","ancestors$1","ancestors","children$2","descendants$1","base","querySelectorAll","ClosestOrAncestor","ancestor","el","ancestor$1","child$2","child$1","descendant$1","querySelector","one","closest$1","filterFirstLayer","LayerSelector","firstLayer","lookup","tags","_isRoot","elm","neighbours","neighbourCells","neighbourRows","parseInt","TableLookup","cell","firstCell","cells","table","row","rows","notCell","rowProp","colProp","rowsCount","cols","DetailsList","parentSection","parentName","rowspan","colspan","example","section","column","filterItems","warehouse","Warehouse","generate","list","access","maxRows","maxColumns","details","currentRow","c","j","cc","newpos","Math","max","getAt","findItem","item","comparator","filtered","justCells","w","statsStruct","makeCell","seenSelected","rowIndex","td","CopySelected","selectedSelector","isSelected","house","stats","totalColumns","columns","minRow","minCol","maxRow","maxCol","startRow","endRow","startCol","endCol","findSelectedStats","unselectedCells","totalRows","fillInGaps","emptyRows","clean","api","getOptionSafe","nodeValue","getOption","NodeValue","get$3","set$2","getEnd","elementsWithCursorPosition","isCursorPosition","trim","first","descend","res","last$1","descendantRtl","clone$1","original","isDeep","cloneNode","shallow","deep","copy$1","shallowAs","cloneChildren","createCell","replica","pasteReplace","cellContent","newRow","TableFill","mutate","formatsToClone","prev","source","sourceDom","targetDom","docu","formats","lastNode","oldCell","newCell","firstText","formatSelector","last","clonedFormat","cloneFormats","cssText","gap","TagBoundaries","DomUniverse","up","closest","down","styles","copyTo","destination","as","insert","afterAll","appendAll","create","query","comparePosition","other","getText","setText","isBoundary","isEmptyTag","leftRight","bisect","universe","ind","Breaker","prior","second","isTop","breaker","next","splits","fallback","breakage","extra","left","right","nextChild","unsafeOne","look","head","tail","commonElement","end","Shared","all$1","eq$1","ancestors$2","ps1","ps2","prune","pruned1","pruned2","shared","firstpath","secondpath","Subset","ancs","common","finder","ps","topDown","startIndex","endIndex","sIndex","eIndex","min","unsafeSubset","Parent","finish","DomParent","sharedOne","subset","breakToLeft","breakToRight","breakPath","u","isWithin","finishCol","finishRow","CellBounds","leftEdge","rightEdge","topEdge","bottomEdge","isRect","detailIsWithin","getAnyBox","startCell","finishCell","startCoords","finishCoords","sc","fc","detailA","detailB","CellGroup","CellFinder","inside","innerCell","c1","c2","getWarehouse","TablePositions","deltaRow","deltaColumn","firstTable","lastTable","lastCell","lookupTable","container","identified","identify","getIsRoot","rootTable","boxes","startTable","finishTable","ancestorCells","lca","lcaTable","finishAncestorCells","startAncestorCells","CellSelection","retrieve","sels","shiftSelection","firstSelectedSelector","lastSelectedSelector","box","getLast","expandTo","getEdges","tbl","TableSelection","edges","firstAncestor","lastAncestor","fA","lA","selected","Ephemera","attributeSelector","firstSelected","lastSelected","Adt","cases","constructors","adt","acase","count","argLength","branches","branchKeys","reqKey","log","constructor","params","type$1","multiple","single","SelectionTypes","cata","subject","onNone","onMultiple","onSingle","selection","selections","CellOperations","_env","noMenu","mergable","unmergable","paste$1","TableTargets","forMenu","paste","pasteRows","clipboard","generators","Clipboard","registerEvents","editor","actions","cellSelection","on","preventDefault","extractSelected","content","format","innerText","getTextContent","serializer","serialize","serializeElements","getParent","getStart","domCell","getDoc","targets","pasteCells","rng","setRng","focus","clear","Dimension","getOffset","parseFloat","aggregate","properties","val","isNaN","h","getOuter","cumulativeInclusions","api$1","getBoundingClientRect","height","offsetHeight","get$4","api$2","offsetWidth","get$5","getOuter$1","platform","getProp","px","num","toNumber","RuntimeSize","paddingTop","paddingBottom","borderTop","borderBottom","getCalculatedHeight","genericSizeRegex","percentageBasedSizeRegex","pixelBasedSizeRegex","setHeight","amount","normalizePixelSize","getter","setter","suffix","number","newSize","total","floor","convert","getTotalHeight","getHeightValue","getSpan","getRawWidth","width","normalizePercentageWidth","cellWidth","tableSize","pixelWidth","Sizes","setPixelWidth","setPercentageWidth","getPixelWidth","pixelMatch","exec","percentMatch","normalizePixelWidth","choosePixelSize","getPercentageWidth","intWidth","choosePercentageSize","getGenericWidth","unit","setGenericWidth","getHeight","get$6","CellMutations","main","newWidth","top","translate","Position","firstDefinedOrZero","absolute","win","Window","defaultView","parentWindow","windowOf","documentElement","scrollTop","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","viewport","offsetLeft","offsetTop","attached","boxPosition","rowInfo","colInfo","rtlEdge","ltrEdge","getLeftEdge","getRightEdge","getTop","findPositions","getInnerEdge","getOuterEdge","lines","cellOption","lastLine","delta","positions","ltr","BarPositions","rtl","step","_table","ResizeDirection","TableDirection","directionAt","auto","isRtl","merger","TableGridSize","input","hasOwnProperty$1","merge","old","objects","curObject","cat","findMap","setIfNot","ignore","Redraw","newRows","newCells","renderOrRemoveSection","gridSection","sectionName","tb","isNew","tr","renderSection","removeSection","headSection","bodySection","footSection","clonedCell","read","supports","classList","add$1","clazz","add","remove$4","remove$3","add$2","cleanClass","get$7","has$2","Util","repititions","rest","aa","extras","abs","decide","getBlock","isSingle","getFallback","inBlock","Blocks","rowsArr","col","namespace","dashNamespace","Styles","Bar","blocker","position","data-column","role","data-row","resizeBar","resizeRowBar","resizeColBar","wire","previous","drawBar","origin","cpOption","cp","bar","refreshGrid","hdirection","vdirection","rowPositions","tableWidth","rowBar","refreshRow","colPositions","tableHeight","colBar","refreshCol","each$2","bars","Bars","refresh","hide","show","destroy","isRowBar","isColBar","setCells","gridRow","getCell","GridRow","addCell","mutateCell","getCellElement","mapCells","cellLength","findDiff","comp","TableGrid","restOfRow","getRow","endColIndex","restOfColumn","getColumn","endRowIndex","Transitions","seen","ri","ci","updateSeen","rowCells","deriveRows","rendered","findRow","toDetailList","findInWarehouse","RunOperation","operation","extract","adjustment","postAction","genWrappers","direction","model","fromWarehouse","cursor","out","newElements","lc","isValue","isError","_","onValue","mapError","toOption","message","onError","Result","fill","generator","rowFill","_row","colFill","Fitment","startAddress","gridA","gridB","rowRemainder","colRemainder","colRequired","rowRequired","rowDelta","colDelta","colLengthA","colLengthB","fillCols","MergingOperations","substitution","isToReplace","currentCell","uniqueCells","replacement","_loop_1","_loop_2","sub","isSpanning","matching","TableMerge","fittedGrid","mergeTables","fittedNewGrid","secondDelta","fittedOldGrid","ModificationOperations","between","ex","exampleRow","exampleCol","replaceIn","isTarget","notStartRow","colIndex","notStartColumn","TransformOperations","targetRow","folder","ColumnContext","l","m","Deltas","context","neighbours$1","zero","onChange","newNext","minCellWidth","newThis","diffx","onLeft","singleColumnWidth","size","getSpan$1","CellUtils","hasColspan","hasRowspan","minWidth","minHeight","getInt","getRaw$1","getRawW","getRawH","getWidthFrom","getWidth","backups","deduced","getDeduced","getHeightFrom","ColumnSizes","getRawWidths","getPixelWidths","getPercentageWidths","getPixelHeights","getRawHeights","measures","Recalculations","widths","heights","pixelSize","getCellDelta","getWidths","setElementWidth","setTableWidth","newWidths","_delta","chooseSize","floatWidth","_newWidths","percentageSize","fallbackWidth","TableSize","getWarehouse$1","getTableWarehouse","Adjustments","adjustWidth","deltas","dx","newSizes","adjustHeight","newHeights","dy","newCellSizes","newRowSizes","adjustWidthTo","baseWith","handleUnsupported","invalidKeys","validate","incorrect","invalidTypeMessage","handleExact","exactly","elementToData","contract","Generators","_toData","toData","nuFrom","data","recent","getOrInit","makeNew","replaceOrInit","combine","blockList","isBlock","tagName","Structure","universe$1","DomStructure","TableContent","isBr","markCell","rightSiblingIsBlock","rightSibling","contents","advancedBr","outcome","elementFromGrid","findIn","bundle","uniqueRows","currentDetail","uniqueColumns","gridifyRows","pasteDetails","wh","resize","TableOperations","insertRowBefore","targetIndex","newGrid","insertRowsBefore","newG","insertRowAfter","insertRowsAfter","insertColumnBefore","insertColumnsBefore","insertColumnAfter","insertColumnsAfter","splitCellIntoColumns","splitCellIntoRows","eraseColumns","_genWrappers","eraseRows","makeColumnHeader","unmakeColumnHeader","makeRowHeader","unmakeRowHeader","mergeCells","unmergeCells","nuGrid","pasteRowsBefore","mergedGrid","pasteRowsAfter","getBody$1","getPixelWidth$1","getPixelHeight","addSizeSuffix","removeDataStyle","dataStyleCells","ltr$1","rtl$1","Direction","getDirection","defaultStyles","border-collapse","defaultAttributes","border","getDefaultAttributes","getParam","getDefaultStyles","hasTabNavigation","hasAdvancedCellTab","hasAdvancedRowTab","hasAdvancedTableTab","shouldStyleWithCss","getTableClassList","isPixelsForced","fireNewRow","fire","fireNewCell","fireObjectResizeStart","fireObjectResized","TableActions","lazyWire","isTableBody","cloneElements","getCloneElements","execute","guard","createRng","setStart","setEnd","deleteRow","deleteColumn","CopyRows","selectedCells","slicedGrid","slicedDetails","global$1","Styles$1","formatter","firstChildStyle","elms","currentStyle","getStyle","checkChildren","select","__assign","assign","this","extractAdvancedStyles","rgbToHex","toHex","borderstyle","bordercolor","backgroundcolor","getAlignment","alignments","formatName","dataName","alignmentData","matchNode","getHAlignment","getVAlignment","Helpers","inputList","itemCallback","startItems","appendItems","menuItem","title","menu","baseData","comparisonData","items","itemValue","itemKey","comparisonValue","hasAdvTableTab","getAttrib","cellspacing","cellpadding","optBorderWidth","getBorder","caption","class","align","celltype","spacing","padding","borderWidth","advStyle","borderStyle","borderColor","bgColor","extractAdvancedStyleData","children$3","CellDialogGeneralTab","rowClassList","getCellClassList","classes","textStyle","getCssText","block","getClassList","classlist","DomModifiers","normal","setAttrib","setStyle","prop","ifTruthy","updateSimpleProps","modifiers","updateAdvancedProps","applyToSingle","cellElm","rename","halign","valign","applyToMultiple","onSubmitCellForm","getData","close","undoManager","transact","CellDialog","cellsData","dialogTabPanel","tabs","dialogPanel","windowManager","open","buttons","primary","initialData","onSubmit","formChildren","RowDialogGeneralTab","getRowClassList","getClassList$1","onSubmitRowForm","oldData","createModifier","rowElm","toType","tableElm","oldParentElm","parentElm","insertAfter","switchRowType","updateAdvancedProps$1","RowDialog","rowsData","global$2","DefaultRenderOptions","percentages","render$1","rowHeaders","columnHeaders","renderOpts","tbody","trs","placeCaretInCell","collapse","InsertTable","options","get$8","insertContent","fireEvents","selectFirstCellInTable","styleTDTH","onSubmitTableForm","captionElm","border-width","border-color","serializeStyle","setAttribs","applyDataToElement","addVisual","TableDialog","hasClasses","rowColCountItems","appearanceItems","hasAppearanceOptions","classListItem","generalPanel","nonAdvancedForm","advancedForm","dialogBody","getSelectionStartFromSelector","getSelectionStartCell","getSelectionStartCellOrCaption","each$3","Commands","registerCommands","clipboardRows","getTableFromCell","getSize","actOnSelection","beforeSize","oldSize","resizeChange","copyRowSelection","pasteOnSelection","clonedRows","mceTableSplitCells","mceTableMergeCells","mceTableInsertRowBefore","mceTableInsertRowAfter","mceTableInsertColBefore","mceTableInsertColAfter","mceTableDeleteCol","mceTableDeleteRow","mceTableCutRow","mceTableCopyRow","mceTablePasteRowBefore","mceTablePasteRowAfter","mceTableDelete","cellOrCaption","isEmpty","setContent","setCursorLocation","nodeChanged","func","addCommand","mceInsertTable","mceTableProps","mceTableRowProps","mceTableCellProps","ui","ResizeWire","view","editable","Event","handlers","handler","unbind","trigger","event","Events","typeDefs","registry","DragApis","mode","sink","Styles$2","handle","rawEvent","stopPropagation","prevent","kill","evt","mkEvent","clientX","clientY","bind$1","useCapture","wrapped","addEventListener","binder","removeEventListener","filter$1","bind$2","MouseDrag","compare","dragApi","settings","layerClass","Blocker","mdown","forceDrop","mup","drop","mmove","move","mout","delayDrop","mutation","InDrag","events","onEvent","update","reset","Movement","noDragState","inDragState","dragState","off","isOn","Dragging","rate","timer","active","movement","throttledDrop","cancel","clearTimeout","throttle","setTimeout","runIfActive","go","Dragger","transform","closest$2","BarMutation","drag","delegate","Mutation","xDelta","yDelta","resizeBarDragging","TableResize","manager","resizing","hoverTable","getResizer","_dataRow","_dataCol","currentCol","getDelta","dir","startAdjust","mousedown","mouseover","ht","hideBars","showBars","BarManager","beforeResize","afterResize","startDrag","TableWire","inline","margin","createContainer","ResizeHandler","startW","startRawW","selectionRng","isTable","rawWire","objectResizing","hasObjectResizing","hasTableResizeBars","sz","getRng","rawTable","targetElm","percentW","targetPercentW","newCellSizes_1","newCellSize","lazyResize","folder$1","CellLocation","detect$4","CellNavigation","Situ","onBefore","onOn","onAfter","situ","type$2","domRange","relative","exact","range$1","getWin","defView","startContainer","startSitu","finishSitu","soffset","foffset","getStart$1","after$3","createRange","makeRange","same","collapsed","selectNodeContentsUsing","selectNodeContents","relativeToNative","range","setStartBefore","setStartAfter","setEndBefore","setEndAfter","setFinish","exactToNative","toRect","rect","bottom","adt$1","fromRange","startOffset","endContainer","endOffset","diagnose","ranges","rev","doDiagnose","getRanges","asLtrRange","inRect","locateOffset","textnode","rangeForOffset","offset","rectForOffset","maxX","curDeltaX","searchForPoint","locate","selectNode","rects","getClientRects","searchInChildren","nodes","locateNode","getCollapseDirection","createCollapsedNode","collapseDirection","locateInElement","cursorRange","locateInEmpty","searchTextNodes","boundedX","boundedY","locate$1","availableSearch","caretPositionFromPoint","pos","offsetNode","caretRangeFromPoint","beforeSpecial","name$1","preprocessRelative","preprocessExact","doSetNativeRange","getSelection","removeAllRanges","addRange","doSetRange","setRangeFromRelative","setBaseAndExtent","extend","setLegacyRtlRange","setExact","setRelative","toNative","getDomRange","preprocess","doGetExact","anchor","anchorNode","focusNode","anchorOffset","focusOffset","rangeCount","firstRng","getRangeAt","lastRng","readRange","setToElement","get$a","sel","getExact","getFirstRect$1","getFirstRect","getAtPoint","fromPoint$1","clear$1","global$3","forward","backward","getCellFirstCursorPosition","getNewRowCursorPosition","rootElements","TabContext","keyCode","TAB","body_1","isRoot_1","shiftKey","Responses","response","isKey","keycode","isUp","isDown","SelectionKeys","isBackward","isForward","isNavigation","Util$1","convertToRange","makeSitus","get$b","_DOC","by","scrollBy","WindowBridge","getRect","getRangedRect","structRect","exactAdt","fromSitus","situs","relative$1","situsFromPoint","clearSelection","setSelection","setRelativeSelection","selectContents","getInnerHeight","innerHeight","getScrollY","detect$5","selectRange","cellSel","KeySelection","sync","annotations","newSels","nu$3","Carets","moveUp","caret","moveDown","moveBottomTo","moveTopTo","getBottom","toCaret","getElemBox","bridge","Rectangles","getPartialBox","traverse","backtrack","_direction","transition","sidestep","advance","sibling","successors","go$1","rules","succ","rule","Walkers","hone","isLeaf","seekLeft","seekRight","universe$2","before$4","before$3","after$5","after$4","adt$2","retry","inOutsideBlock","isOutside","upMovement","point","adjuster","guessBox","higherCaret","gather","downMovement","lowerCaret","adjustTil","numRetries","isAtTable","adjustForTable","guess","newCaret","moved","adjusted","checkScroll","Retries","tryUp","tryDown","ieTryUp","ieTryDown","getJumpSize","adt$3","success","failedUp","failedDown","isRow","BeforeAfter","verify","beforeOffset","afterOffset","failure","afterCell","beforeCell","beforeBounds","afterBounds","isOverlapping","sharedRow","onSuccess","onFailedUp","onFailedDown","inParent","gatherer","cand","handleParent","findBr","br","adjacent","BrTags","handleBr","tgt","analysis","platform$1","scan","tryCursor","tryAgain","tryAt","otherRetry","ieRetry","TableKeys","brNeighbour","findSpot","spot","detection","inSameTable","simulate","VerticalMovement","precheck","seekLeft$1","lastOffset","seekRight$1","findCell","KeyDirection","rc","InputHandlers","mouse","clearState","mouseup","MouseSelection","keyboard","clearToNavigate","keydown","which","attempts","keyup","remove$7","remove$5","SelectionAnnotation","byClass","ephemera","addSelectionClass","removeSelectionClasses","byAttr","removeSelectionAttributes","addSelectionAttribute","hasInternalTarget","Selections","SelectionTargets","changeHandlers","findTargets","resetTargets","onSetup","isDisabled","setDisabled","onSetupTable","onSetupCellOrRow","onSetupMergeable","onSetupUnmergeable","Buttons","addButtons","selectionTargets","addMenuButton","tooltip","icon","fetch","callback","cmd","command","execCommand","addButton","onAction","addToolbars","toolbar","getToolbar","addContextToolbar","MenuItems","addMenuItems","insertTableAction","_a","numRows","numColumns","tableProperties","deleteTable","getSubmenuItems","hasTableGrid","addMenuItem","addNestedMenuItem","fancytype","addContextMenu","getApi","insertTable","setClipboardRows","sugarRows","getClipboardRows","resizeHandler","handlerStruct","mouseHandlers","keyHandlers","handleResponse","hasShiftKey","ns","wrappedEvent","wrapEvent","isMouseEvent","isLeftMouse","button","mouseDown","mouseOver","mouseUp","CellSelection$1","addTempAttr","getTargetList","editorSettings","target_list","getRelList","rel_list","getLinkClassList","link_class_list","Settings","link_assume_external_targets","link_context_toolbar","link_list","default_link_target","link_title","allow_unsafe_link_target","link_quicklink","OpenUrl","url","link","href","rel","createEvent","initMouseEvent","dispatchEvent","appendClickRemove","opener","write","DOM","encode","global$4","applyRelTargetRules","isUnsafe","rels","removeTargetRules","inArray","newRels","addTargetRules","getAnchorElement","selectedElm","getNode","isImageFigure","isLink","className","getLinkAttrs","unlinkImageFigure","fig","img","getParents","linkImageFigure","Utils","attachState","anchorElm","linkAttrs","newRel","attach","updateLink","createHTML","createLink","grep","trimCaretContainers","getContent","getValue","sanitizeWith","extracter","extractValue","sanitizeList","ListOptions","sanitize","createUi","persistentText","fieldName","catalog","hasPersistentText","findTextByValue","meta","DialogChanges","linkSettings","onCatalogChange","change","catalogs","urlText","onUrlChange","baseFn","callbacks","nCallback","isReady","run","cbs","cb","LazyValue","pure","toLazy","aFutureB","anonBind","futureB","toCached","cache","Future","global$5","tryEmailTransform","tryProtocolTransform","assumeExternalTargets","DialogConfirms","setEditorTimeout","confirm","state","delayedConfirm","AnchorListOptions","anchorNodes","anchors","ClassListOptions","global$6","LinkListOptions","extractor","convertURL","linkList","send","JSON","parse","err","parseJson","RelOptions","initialTarget","isTargetBlank_1","fallbacks","TargetOptions","nonEmptyAttr","DialogInfo","linkNode","links","defaultTarget","linkClass","extractFromAnchor","optNode","flags","titleEnabled","Dialog","collectData","getChangedValue","changedData","pData","handleSubmit","displayText","titleText","dialogDelta","filetype","newData","setData","makeDialog","spec","getLink","getSelectedLink","gotoLink","targetEl","$","scrollIntoView","Actions","metaKeyPressed","altKey","ctrlKey","metaKey","hasOnlyAltModifier","nodeChangeHandler","setActive","readonly","toolbarKey","Keyboard","addShortcut","Controls","addToggleButton","shortcut","addContextForm","launch","initValue","commands","buttonApi","formApi","collapseSelectionToEnd","isObject","bindFuture","resA","bindResult","mapResult","foldResult","whenError","whenValue","withTimeout","timeout","errorThunk","timedOut","worker","FutureResult","baseMerge","deepMerge","URL","blob","createObjectURL","revokeObjectURL","makeItems","imageList","hasDescription","hasImageTitle","hasDimensions","hasImageCaption","MainTab","image_dimensions","image_advtab","image_description","image_title","image_caption","parseIntAndGetMax","val1","val2","done","onload","clientWidth","clientHeight","onerror","visibility","src","splitMargin","imgElm","selectImage","reject","reader","readAsDataURL","getHspace","image","marginLeft","marginRight","getVspace","marginTop","marginBottom","hasCaption","toggleCaption","figureElm","removeFigure","contentEditable","wrapInFigure","normalizeStyle","normalizeCss","attrValue","setSize","setHspace","pxValue","setVspace","setBorder","setBorderStyle","isFigure","getStyleValue","hspace","vspace","getBorderStyle","alt","updateProp","normalized","_name","_value","mergedCss","compressed","getSelectedImage","splitTextBlock","figure","textBlock","schema","getTextBlockElements","insertImageAtCaret","outerHTML","insertedElm","insertOrUpdateImage","syncSrcAttr","writeImageDataToSelection","deleteImage","sanitizer","findEntryDelegate","isGroup","ListUtils","optList","noop$1","pathJoin","path1","path2","Uploader","defaultHandler","blobInfo","progress","xhr","formData","withCredentials","credentials","upload","onprogress","loaded","status","json","responseText","location","basePath","FormData","filename","uploadBlob","AdvTab","collect","urlListSanitizer","futureImageList","completer","hasAdvTab","hasUploadUrl","hasUploadHandler","readImageDataFromSelection","prependURL","preUrl","UploadTab","fromImageData","images","fileinput","toImageData","addPrependUrl","srcURL","prependUrl","substring","addPrependUrl2","formFillFromMeta","dataCopy_1","entry","formFillFromMeta2","changeSrc","helpers","imageSize","calculateImageSize","prevImage","updateImagesDropdown","changeStyle2","parseStyle","dataCopy","calcVSpace","calcHSpace","calcBorderWidth","calcBorderStyle","calcStyle","changeFileInput","unblock","file","blobUri","uploader","finalize","then","dataUrl","createBlobCache","showTab","catch","alertErr","changeHandler","prevAlt","changeImages","changeStyle","changeAStyle","closeHandler","makeDialogBody","createState","onClose","submitHandler","editorUpload","uploadImagesAuto","documentBaseURI","toAbsolute","blobCache","base64","alert","normalizeCss$1","stylesArg","hasImageClass","toggleContentEditableState","toggleContentEditable","getAll","FilterContent","parser","addNodeFilter","nu$4","nu$5","selectorChangedWithUnbind","rootElm","Content","source_view","editorContent","code","module","exports","ReactPropTypesSecret","emptyFunction","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","bool","object","string","symbol","any","arrayOf","instanceOf","objectOf","oneOf","oneOfType","shape","checkPropTypes","PropTypes","__webpack_exports__","getTinymce","getGlobal","extendStatics","eventPropTypes","onActivate","prop_types","onAddUndo","onBeforeAddUndo","onBeforeExecCommand","onBeforeGetContent","onBeforeRenderUI","onBeforeSetContent","onBeforePaste","onBlur","onClearUndos","onClick","onContextMenu","onCopy","onCut","onDblclick","onDeactivate","onDirty","onDrag","onDragDrop","onDragEnd","onDragGesture","onDragOver","onDrop","onExecCommand","onFocus","onFocusIn","onFocusOut","onGetContent","onHide","onInit","onKeyDown","onKeyPress","onKeyUp","onLoadContent","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onNodeChange","onObjectResizeStart","onObjectResized","onObjectSelected","onPaste","onPostProcess","onPostRender","onPreProcess","onProgressState","onRedo","onRemove","onReset","onSaveContent","onSelectionChange","onSetAttrib","onSetContent","onShow","onUndo","onVisualAid","EditorPropTypes","apiKey","init","initialValue","onEditorChange","cloudChannel","plugins","disabled","textareaName","unique","uuid","time","Date","getTime","random","isTextarea","normalizePluginArray","mergePlugins","initPlugins","inputPlugins","__extends","setPrototypeOf","__proto__","__","Editor_assign","scriptState","listeners","scriptId","scriptLoaded","Editor_Editor","_super","Editor","_this","initialise","finalInit","setup","initEditor","TinyMCE","componentWillMount","componentDidMount","channel","getElementById","scriptTag","injectScriptTag","forEach","load","componentWillUnmount","componentWillReceiveProps","nextProps","initialized","currentContent","setMode","render","renderInline","renderIframe","initEvent","bindHandlers","react","ref","propTypes","defaultProps"],"mappings":"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","file":"37-614625e1c41d342c38e4.js","sourcesContent":["// Exports the \"table\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/table')\n//   ES2015:\n//     import 'tinymce/plugins/table'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.0.2 (2019-03-05)\n */\n(function () {\nvar table = (function (domGlobals) {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var noop = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n    };\n    var compose = function (fa, fb) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return fa(fb.apply(null, args));\n      };\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var identity = function (x) {\n      return x;\n    };\n    function curry(fn) {\n      var initialArgs = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        initialArgs[_i - 1] = arguments[_i];\n      }\n      return function () {\n        var restArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          restArgs[_i] = arguments[_i];\n        }\n        var all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    var not = function (f) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return !f.apply(null, args);\n      };\n    };\n    var die = function (msg) {\n      return function () {\n        throw new Error(msg);\n      };\n    };\n    var apply = function (f) {\n      return f();\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var never$1 = never;\n    var always$1 = always;\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var noop = function () {\n      };\n      var nul = function () {\n        return null;\n      };\n      var undef = function () {\n        return undefined;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never$1,\n        isSome: never$1,\n        isNone: always$1,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: nul,\n        getOrUndefined: undef,\n        or: id,\n        orThunk: call,\n        map: none,\n        ap: none,\n        each: noop,\n        bind: none,\n        flatten: none,\n        exists: never$1,\n        forall: always$1,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze)\n        Object.freeze(me);\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = function () {\n        return a;\n      };\n      var self = function () {\n        return me;\n      };\n      var map = function (f) {\n        return some(f(a));\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always$1,\n        isNone: never$1,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: map,\n        ap: function (optfab) {\n          return optfab.fold(none, function (fab) {\n            return some(fab(a));\n          });\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        flatten: constant_a,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never$1, function (b) {\n            return elementEq(a, b);\n          });\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var typeOf = function (x) {\n      if (x === null)\n        return 'null';\n      var t = typeof x;\n      if (t === 'object' && Array.prototype.isPrototypeOf(x))\n        return 'array';\n      if (t === 'object' && String.prototype.isPrototypeOf(x))\n        return 'string';\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isArray = isType('array');\n    var isBoolean = isType('boolean');\n    var isFunction = isType('function');\n    var isNumber = isType('number');\n\n    var rawIndexOf = function () {\n      var pIndexOf = Array.prototype.indexOf;\n      var fastIndex = function (xs, x) {\n        return pIndexOf.call(xs, x);\n      };\n      var slowIndex = function (xs, x) {\n        return slowIndexOf(xs, x);\n      };\n      return pIndexOf === undefined ? slowIndex : fastIndex;\n    }();\n    var contains = function (xs, x) {\n      return rawIndexOf(xs, x) > -1;\n    };\n    var exists = function (xs, pred) {\n      return findIndex(xs, pred).isSome();\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i, xs);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i, xs);\n      }\n    };\n    var eachr = function (xs, f) {\n      for (var i = xs.length - 1; i >= 0; i--) {\n        var x = xs[i];\n        f(x, i, xs);\n      }\n    };\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i, xs)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var foldr = function (xs, f, acc) {\n      eachr(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var find = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i, xs)) {\n          return Option.some(x);\n        }\n      }\n      return Option.none();\n    };\n    var findIndex = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i, xs)) {\n          return Option.some(i);\n        }\n      }\n      return Option.none();\n    };\n    var slowIndexOf = function (xs, x) {\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (xs[i] === x) {\n          return i;\n        }\n      }\n      return -1;\n    };\n    var push = Array.prototype.push;\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!Array.prototype.isPrototypeOf(xs[i]))\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        push.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var bind = function (xs, f) {\n      var output = map(xs, f);\n      return flatten(output);\n    };\n    var forall = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        var x = xs[i];\n        if (pred(x, i, xs) !== true) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var slice = Array.prototype.slice;\n    var reverse = function (xs) {\n      var r = slice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    var last = function (xs) {\n      return xs.length === 0 ? Option.none() : Option.some(xs[xs.length - 1]);\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return slice.call(x);\n    };\n\n    var keys = Object.keys;\n    var hasOwnProperty = Object.hasOwnProperty;\n    var each$1 = function (obj, f) {\n      var props = keys(obj);\n      for (var k = 0, len = props.length; k < len; k++) {\n        var i = props[k];\n        var x = obj[i];\n        f(x, i, obj);\n      }\n    };\n    var map$1 = function (obj, f) {\n      return tupleMap(obj, function (x, i, obj) {\n        return {\n          k: i,\n          v: f(x, i, obj)\n        };\n      });\n    };\n    var tupleMap = function (obj, f) {\n      var r = {};\n      each$1(obj, function (x, i) {\n        var tuple = f(x, i, obj);\n        r[tuple.k] = tuple.v;\n      });\n      return r;\n    };\n    var get = function (obj, key) {\n      return has(obj, key) ? Option.some(obj[key]) : Option.none();\n    };\n    var has = function (obj, key) {\n      return hasOwnProperty.call(obj, key);\n    };\n\n    var Immutable = function () {\n      var fields = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        fields[_i] = arguments[_i];\n      }\n      return function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          values[_i] = arguments[_i];\n        }\n        if (fields.length !== values.length) {\n          throw new Error('Wrong number of arguments to struct. Expected \"[' + fields.length + ']\", got ' + values.length + ' arguments');\n        }\n        var struct = {};\n        each(fields, function (name, i) {\n          struct[name] = constant(values[i]);\n        });\n        return struct;\n      };\n    };\n\n    var sort = function (arr) {\n      return arr.slice(0).sort();\n    };\n    var reqMessage = function (required, keys) {\n      throw new Error('All required keys (' + sort(required).join(', ') + ') were not specified. Specified keys were: ' + sort(keys).join(', ') + '.');\n    };\n    var unsuppMessage = function (unsupported) {\n      throw new Error('Unsupported keys for object: ' + sort(unsupported).join(', '));\n    };\n    var validateStrArr = function (label, array) {\n      if (!isArray(array))\n        throw new Error('The ' + label + ' fields must be an array. Was: ' + array + '.');\n      each(array, function (a) {\n        if (!isString(a))\n          throw new Error('The value ' + a + ' in the ' + label + ' fields was not a string.');\n      });\n    };\n    var invalidTypeMessage = function (incorrect, type) {\n      throw new Error('All values need to be of type: ' + type + '. Keys (' + sort(incorrect).join(', ') + ') were not.');\n    };\n    var checkDupes = function (everything) {\n      var sorted = sort(everything);\n      var dupe = find(sorted, function (s, i) {\n        return i < sorted.length - 1 && s === sorted[i + 1];\n      });\n      dupe.each(function (d) {\n        throw new Error('The field: ' + d + ' occurs more than once in the combined fields: [' + sorted.join(', ') + '].');\n      });\n    };\n\n    var MixedBag = function (required, optional) {\n      var everything = required.concat(optional);\n      if (everything.length === 0)\n        throw new Error('You must specify at least one required or optional field.');\n      validateStrArr('required', required);\n      validateStrArr('optional', optional);\n      checkDupes(everything);\n      return function (obj) {\n        var keys$1 = keys(obj);\n        var allReqd = forall(required, function (req) {\n          return contains(keys$1, req);\n        });\n        if (!allReqd)\n          reqMessage(required, keys$1);\n        var unsupported = filter(keys$1, function (key) {\n          return !contains(everything, key);\n        });\n        if (unsupported.length > 0)\n          unsuppMessage(unsupported);\n        var r = {};\n        each(required, function (req) {\n          r[req] = constant(obj[req]);\n        });\n        each(optional, function (opt) {\n          r[opt] = constant(Object.prototype.hasOwnProperty.call(obj, opt) ? Option.some(obj[opt]) : Option.none());\n        });\n        return r;\n      };\n    };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var name = function (element) {\n      var r = element.dom().nodeName;\n      return r.toLowerCase();\n    };\n    var type = function (element) {\n      return element.dom().nodeType;\n    };\n    var isType$1 = function (t) {\n      return function (element) {\n        return type(element) === t;\n      };\n    };\n    var isComment = function (element) {\n      return type(element) === COMMENT || name(element) === '#comment';\n    };\n    var isElement = isType$1(ELEMENT);\n    var isText = isType$1(TEXT);\n    var isDocument = isType$1(DOCUMENT);\n\n    var rawSet = function (dom, key, value) {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        domGlobals.console.error('Invalid call to Attr.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    var set = function (element, key, value) {\n      rawSet(element.dom(), key, value);\n    };\n    var setAll = function (element, attrs) {\n      var dom = element.dom();\n      each$1(attrs, function (v, k) {\n        rawSet(dom, k, v);\n      });\n    };\n    var get$1 = function (element, key) {\n      var v = element.dom().getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    var has$1 = function (element, key) {\n      var dom = element.dom();\n      return dom && dom.hasAttribute ? dom.hasAttribute(key) : false;\n    };\n    var remove = function (element, key) {\n      element.dom().removeAttribute(key);\n    };\n    var clone = function (element) {\n      return foldl(element.dom().attributes, function (acc, attr) {\n        acc[attr.name] = attr.value;\n        return acc;\n      }, {});\n    };\n\n    var checkRange = function (str, substr, start) {\n      if (substr === '')\n        return true;\n      if (str.length < substr.length)\n        return false;\n      var x = str.substr(start, start + substr.length);\n      return x === substr;\n    };\n    var contains$1 = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n    var startsWith = function (str, prefix) {\n      return checkRange(str, prefix, 0);\n    };\n    var endsWith = function (str, suffix) {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n    var trim = function (str) {\n      return str.replace(/^\\s+|\\s+$/g, '');\n    };\n\n    var isSupported = function (dom) {\n      return dom.style !== undefined;\n    };\n\n    var cached = function (f) {\n      var called = false;\n      var r;\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var inBody = function (element) {\n      var dom = isText(element) ? element.dom().parentNode : element.dom();\n      return dom !== undefined && dom !== null && dom.ownerDocument.body.contains(dom);\n    };\n    var body = cached(function () {\n      return getBody(Element.fromDom(domGlobals.document));\n    });\n    var getBody = function (doc) {\n      var b = doc.dom().body;\n      if (b === null || b === undefined) {\n        throw new Error('Body is not available yet');\n      }\n      return Element.fromDom(b);\n    };\n\n    var internalSet = function (dom, property, value) {\n      if (!isString(value)) {\n        domGlobals.console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    var internalRemove = function (dom, property) {\n      if (isSupported(dom)) {\n        dom.style.removeProperty(property);\n      }\n    };\n    var set$1 = function (element, property, value) {\n      var dom = element.dom();\n      internalSet(dom, property, value);\n    };\n    var setAll$1 = function (element, css) {\n      var dom = element.dom();\n      each$1(css, function (v, k) {\n        internalSet(dom, k, v);\n      });\n    };\n    var get$2 = function (element, property) {\n      var dom = element.dom();\n      var styles = domGlobals.window.getComputedStyle(dom);\n      var r = styles.getPropertyValue(property);\n      var v = r === '' && !inBody(element) ? getUnsafeProperty(dom, property) : r;\n      return v === null ? undefined : v;\n    };\n    var getUnsafeProperty = function (dom, property) {\n      return isSupported(dom) ? dom.style.getPropertyValue(property) : '';\n    };\n    var getRaw = function (element, property) {\n      var dom = element.dom();\n      var raw = getUnsafeProperty(dom, property);\n      return Option.from(raw).filter(function (r) {\n        return r.length > 0;\n      });\n    };\n    var remove$1 = function (element, property) {\n      var dom = element.dom();\n      internalRemove(dom, property);\n      if (has$1(element, 'style') && trim(get$1(element, 'style')) === '') {\n        remove(element, 'style');\n      }\n    };\n    var copy = function (source, target) {\n      var sourceDom = source.dom();\n      var targetDom = target.dom();\n      if (isSupported(sourceDom) && isSupported(targetDom)) {\n        targetDom.style.cssText = sourceDom.style.cssText;\n      }\n    };\n\n    var Global = typeof window !== 'undefined' ? window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i)\n        o = o[parts[i]];\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null)\n        throw name + ' not available on this browser';\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    var node = function () {\n      var f = Global$1.getOrDie('Node');\n      return f;\n    };\n    var compareDocumentPosition = function (a, b, match) {\n      return (a.compareDocumentPosition(b) & match) !== 0;\n    };\n    var documentPositionPreceding = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_PRECEDING);\n    };\n    var documentPositionContainedBy = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_CONTAINED_BY);\n    };\n    var Node = {\n      documentPositionPreceding: documentPositionPreceding,\n      documentPositionContainedBy: documentPositionContainedBy\n    };\n\n    var firstMatch = function (regexes, s) {\n      for (var i = 0; i < regexes.length; i++) {\n        var x = regexes[i];\n        if (x.test(s))\n          return x;\n      }\n      return undefined;\n    };\n    var find$1 = function (regexes, agent) {\n      var r = firstMatch(regexes, agent);\n      if (!r)\n        return {\n          major: 0,\n          minor: 0\n        };\n      var group = function (i) {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu(group(1), group(2));\n    };\n    var detect = function (versionRegexes, agent) {\n      var cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0)\n        return unknown();\n      return find$1(versionRegexes, cleanedAgent);\n    };\n    var unknown = function () {\n      return nu(0, 0);\n    };\n    var nu = function (major, minor) {\n      return {\n        major: major,\n        minor: minor\n      };\n    };\n    var Version = {\n      nu: nu,\n      detect: detect,\n      unknown: unknown\n    };\n\n    var edge = 'Edge';\n    var chrome = 'Chrome';\n    var ie = 'IE';\n    var opera = 'Opera';\n    var firefox = 'Firefox';\n    var safari = 'Safari';\n    var isBrowser = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$1 = function () {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$1 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isEdge: isBrowser(edge, current),\n        isChrome: isBrowser(chrome, current),\n        isIE: isBrowser(ie, current),\n        isOpera: isBrowser(opera, current),\n        isFirefox: isBrowser(firefox, current),\n        isSafari: isBrowser(safari, current)\n      };\n    };\n    var Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chrome: constant(chrome),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    var windows = 'Windows';\n    var ios = 'iOS';\n    var android = 'Android';\n    var linux = 'Linux';\n    var osx = 'OSX';\n    var solaris = 'Solaris';\n    var freebsd = 'FreeBSD';\n    var isOS = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$2 = function () {\n      return nu$2({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$2 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isWindows: isOS(windows, current),\n        isiOS: isOS(ios, current),\n        isAndroid: isOS(android, current),\n        isOSX: isOS(osx, current),\n        isLinux: isOS(linux, current),\n        isSolaris: isOS(solaris, current),\n        isFreeBSD: isOS(freebsd, current)\n      };\n    };\n    var OperatingSystem = {\n      unknown: unknown$2,\n      nu: nu$2,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      osx: constant(osx),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd)\n    };\n\n    var DeviceType = function (os, browser, userAgent) {\n      var isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      var isiPhone = os.isiOS() && !isiPad;\n      var isAndroid3 = os.isAndroid() && os.version.major === 3;\n      var isAndroid4 = os.isAndroid() && os.version.major === 4;\n      var isTablet = isiPad || isAndroid3 || isAndroid4 && /mobile/i.test(userAgent) === true;\n      var isTouch = os.isiOS() || os.isAndroid();\n      var isPhone = isTouch && !isTablet;\n      var iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview)\n      };\n    };\n\n    var detect$1 = function (candidates, userAgent) {\n      var agent = String(userAgent).toLowerCase();\n      return find(candidates, function (candidate) {\n        return candidate.search(agent);\n      });\n    };\n    var detectBrowser = function (browsers, userAgent) {\n      return detect$1(browsers, userAgent).map(function (browser) {\n        var version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version: version\n        };\n      });\n    };\n    var detectOs = function (oses, userAgent) {\n      return detect$1(oses, userAgent).map(function (os) {\n        var version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version: version\n        };\n      });\n    };\n    var UaString = {\n      detectBrowser: detectBrowser,\n      detectOs: detectOs\n    };\n\n    var normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    var checkContains = function (target) {\n      return function (uastring) {\n        return contains$1(uastring, target);\n      };\n    };\n    var browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function (uastring) {\n          var monstrosity = contains$1(uastring, 'edge/') && contains$1(uastring, 'chrome') && contains$1(uastring, 'safari') && contains$1(uastring, 'applewebkit');\n          return monstrosity;\n        }\n      },\n      {\n        name: 'Chrome',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: function (uastring) {\n          return contains$1(uastring, 'chrome') && !contains$1(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return contains$1(uastring, 'msie') || contains$1(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return (contains$1(uastring, 'safari') || contains$1(uastring, 'mobile/')) && contains$1(uastring, 'applewebkit');\n        }\n      }\n    ];\n    var oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: function (uastring) {\n          return contains$1(uastring, 'iphone') || contains$1(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'OSX',\n        search: checkContains('os x'),\n        versionRegexes: [/.*?os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      }\n    ];\n    var PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    var detect$2 = function (userAgent) {\n      var browsers = PlatformInfo.browsers();\n      var oses = PlatformInfo.oses();\n      var browser = UaString.detectBrowser(browsers, userAgent).fold(Browser.unknown, Browser.nu);\n      var os = UaString.detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      var deviceType = DeviceType(os, browser, userAgent);\n      return {\n        browser: browser,\n        os: os,\n        deviceType: deviceType\n      };\n    };\n    var PlatformDetection = { detect: detect$2 };\n\n    var detect$3 = cached(function () {\n      var userAgent = domGlobals.navigator.userAgent;\n      return PlatformDetection.detect(userAgent);\n    });\n    var PlatformDetection$1 = { detect: detect$3 };\n\n    var ELEMENT$1 = ELEMENT;\n    var DOCUMENT$1 = DOCUMENT;\n    var is = function (element, selector) {\n      var elem = element.dom();\n      if (elem.nodeType !== ELEMENT$1) {\n        return false;\n      } else if (elem.matches !== undefined) {\n        return elem.matches(selector);\n      } else if (elem.msMatchesSelector !== undefined) {\n        return elem.msMatchesSelector(selector);\n      } else if (elem.webkitMatchesSelector !== undefined) {\n        return elem.webkitMatchesSelector(selector);\n      } else if (elem.mozMatchesSelector !== undefined) {\n        return elem.mozMatchesSelector(selector);\n      } else {\n        throw new Error('Browser lacks native selectors');\n      }\n    };\n    var bypassSelector = function (dom) {\n      return dom.nodeType !== ELEMENT$1 && dom.nodeType !== DOCUMENT$1 || dom.childElementCount === 0;\n    };\n    var all = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? [] : map(base.querySelectorAll(selector), Element.fromDom);\n    };\n    var one = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? Option.none() : Option.from(base.querySelector(selector)).map(Element.fromDom);\n    };\n\n    var eq = function (e1, e2) {\n      return e1.dom() === e2.dom();\n    };\n    var regularContains = function (e1, e2) {\n      var d1 = e1.dom();\n      var d2 = e2.dom();\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    var ieContains = function (e1, e2) {\n      return Node.documentPositionContainedBy(e1.dom(), e2.dom());\n    };\n    var browser = PlatformDetection$1.detect().browser;\n    var contains$2 = browser.isIE() ? ieContains : regularContains;\n    var is$1 = is;\n\n    var owner = function (element) {\n      return Element.fromDom(element.dom().ownerDocument);\n    };\n    var defaultView = function (element) {\n      var el = element.dom();\n      var defView = el.ownerDocument.defaultView;\n      return Element.fromDom(defView);\n    };\n    var parent = function (element) {\n      var dom = element.dom();\n      return Option.from(dom.parentNode).map(Element.fromDom);\n    };\n    var parents = function (element, isRoot) {\n      var stop = isFunction(isRoot) ? isRoot : constant(false);\n      var dom = element.dom();\n      var ret = [];\n      while (dom.parentNode !== null && dom.parentNode !== undefined) {\n        var rawParent = dom.parentNode;\n        var p = Element.fromDom(rawParent);\n        ret.push(p);\n        if (stop(p) === true) {\n          break;\n        } else {\n          dom = rawParent;\n        }\n      }\n      return ret;\n    };\n    var prevSibling = function (element) {\n      var dom = element.dom();\n      return Option.from(dom.previousSibling).map(Element.fromDom);\n    };\n    var nextSibling = function (element) {\n      var dom = element.dom();\n      return Option.from(dom.nextSibling).map(Element.fromDom);\n    };\n    var children = function (element) {\n      var dom = element.dom();\n      return map(dom.childNodes, Element.fromDom);\n    };\n    var child = function (element, index) {\n      var cs = element.dom().childNodes;\n      return Option.from(cs[index]).map(Element.fromDom);\n    };\n    var firstChild = function (element) {\n      return child(element, 0);\n    };\n    var spot = Immutable('element', 'offset');\n\n    var before = function (marker, element) {\n      var parent$1 = parent(marker);\n      parent$1.each(function (v) {\n        v.dom().insertBefore(element.dom(), marker.dom());\n      });\n    };\n    var after = function (marker, element) {\n      var sibling = nextSibling(marker);\n      sibling.fold(function () {\n        var parent$1 = parent(marker);\n        parent$1.each(function (v) {\n          append(v, element);\n        });\n      }, function (v) {\n        before(v, element);\n      });\n    };\n    var prepend = function (parent, element) {\n      var firstChild$1 = firstChild(parent);\n      firstChild$1.fold(function () {\n        append(parent, element);\n      }, function (v) {\n        parent.dom().insertBefore(element.dom(), v.dom());\n      });\n    };\n    var append = function (parent, element) {\n      parent.dom().appendChild(element.dom());\n    };\n    var wrap = function (element, wrapper) {\n      before(element, wrapper);\n      append(wrapper, element);\n    };\n\n    var before$1 = function (marker, elements) {\n      each(elements, function (x) {\n        before(marker, x);\n      });\n    };\n    var after$1 = function (marker, elements) {\n      each(elements, function (x, i) {\n        var e = i === 0 ? marker : elements[i - 1];\n        after(e, x);\n      });\n    };\n    var append$1 = function (parent, elements) {\n      each(elements, function (x) {\n        append(parent, x);\n      });\n    };\n\n    var empty = function (element) {\n      element.dom().textContent = '';\n      each(children(element), function (rogue) {\n        remove$2(rogue);\n      });\n    };\n    var remove$2 = function (element) {\n      var dom = element.dom();\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n    var unwrap = function (wrapper) {\n      var children$1 = children(wrapper);\n      if (children$1.length > 0) {\n        before$1(wrapper, children$1);\n      }\n      remove$2(wrapper);\n    };\n\n    var dimensions = Immutable('width', 'height');\n    var grid = Immutable('rows', 'columns');\n    var address = Immutable('row', 'column');\n    var coords = Immutable('x', 'y');\n    var detail = Immutable('element', 'rowspan', 'colspan');\n    var detailnew = Immutable('element', 'rowspan', 'colspan', 'isNew');\n    var extended = Immutable('element', 'rowspan', 'colspan', 'row', 'column');\n    var rowdata = Immutable('element', 'cells', 'section');\n    var elementnew = Immutable('element', 'isNew');\n    var rowdatanew = Immutable('element', 'cells', 'section', 'isNew');\n    var rowcells = Immutable('cells', 'section');\n    var rowdetails = Immutable('details', 'section');\n    var bounds = Immutable('startRow', 'startCol', 'finishRow', 'finishCol');\n    var Structs = {\n      dimensions: dimensions,\n      grid: grid,\n      address: address,\n      coords: coords,\n      extended: extended,\n      detail: detail,\n      detailnew: detailnew,\n      rowdata: rowdata,\n      elementnew: elementnew,\n      rowdatanew: rowdatanew,\n      rowcells: rowcells,\n      rowdetails: rowdetails,\n      bounds: bounds\n    };\n\n    var ancestors = function (scope, predicate, isRoot) {\n      return filter(parents(scope, isRoot), predicate);\n    };\n    var children$1 = function (scope, predicate) {\n      return filter(children(scope), predicate);\n    };\n    var descendants = function (scope, predicate) {\n      var result = [];\n      each(children(scope), function (x) {\n        if (predicate(x)) {\n          result = result.concat([x]);\n        }\n        result = result.concat(descendants(x, predicate));\n      });\n      return result;\n    };\n\n    var ancestors$1 = function (scope, selector, isRoot) {\n      return ancestors(scope, function (e) {\n        return is(e, selector);\n      }, isRoot);\n    };\n    var children$2 = function (scope, selector) {\n      return children$1(scope, function (e) {\n        return is(e, selector);\n      });\n    };\n    var descendants$1 = function (scope, selector) {\n      return all(selector, scope);\n    };\n\n    function ClosestOrAncestor (is, ancestor, scope, a, isRoot) {\n      return is(scope, a) ? Option.some(scope) : isFunction(isRoot) && isRoot(scope) ? Option.none() : ancestor(scope, a, isRoot);\n    }\n\n    var ancestor = function (scope, predicate, isRoot) {\n      var element = scope.dom();\n      var stop = isFunction(isRoot) ? isRoot : constant(false);\n      while (element.parentNode) {\n        element = element.parentNode;\n        var el = Element.fromDom(element);\n        if (predicate(el)) {\n          return Option.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Option.none();\n    };\n    var closest = function (scope, predicate, isRoot) {\n      var is = function (s) {\n        return predicate(s);\n      };\n      return ClosestOrAncestor(is, ancestor, scope, predicate, isRoot);\n    };\n    var child$1 = function (scope, predicate) {\n      var result = find(scope.dom().childNodes, compose(predicate, Element.fromDom));\n      return result.map(Element.fromDom);\n    };\n    var descendant = function (scope, predicate) {\n      var descend = function (node) {\n        for (var i = 0; i < node.childNodes.length; i++) {\n          if (predicate(Element.fromDom(node.childNodes[i]))) {\n            return Option.some(Element.fromDom(node.childNodes[i]));\n          }\n          var res = descend(node.childNodes[i]);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Option.none();\n      };\n      return descend(scope.dom());\n    };\n\n    var ancestor$1 = function (scope, selector, isRoot) {\n      return ancestor(scope, function (e) {\n        return is(e, selector);\n      }, isRoot);\n    };\n    var child$2 = function (scope, selector) {\n      return child$1(scope, function (e) {\n        return is(e, selector);\n      });\n    };\n    var descendant$1 = function (scope, selector) {\n      return one(selector, scope);\n    };\n    var closest$1 = function (scope, selector, isRoot) {\n      return ClosestOrAncestor(is, ancestor$1, scope, selector, isRoot);\n    };\n\n    var firstLayer = function (scope, selector) {\n      return filterFirstLayer(scope, selector, constant(true));\n    };\n    var filterFirstLayer = function (scope, selector, predicate) {\n      return bind(children(scope), function (x) {\n        return is(x, selector) ? predicate(x) ? [x] : [] : filterFirstLayer(x, selector, predicate);\n      });\n    };\n    var LayerSelector = {\n      firstLayer: firstLayer,\n      filterFirstLayer: filterFirstLayer\n    };\n\n    var lookup = function (tags, element, _isRoot) {\n      var isRoot = _isRoot !== undefined ? _isRoot : constant(false);\n      if (isRoot(element)) {\n        return Option.none();\n      }\n      if (contains(tags, name(element))) {\n        return Option.some(element);\n      }\n      var isRootOrUpperTable = function (elm) {\n        return is(elm, 'table') || isRoot(elm);\n      };\n      return ancestor$1(element, tags.join(','), isRootOrUpperTable);\n    };\n    var cell = function (element, isRoot) {\n      return lookup([\n        'td',\n        'th'\n      ], element, isRoot);\n    };\n    var cells = function (ancestor) {\n      return LayerSelector.firstLayer(ancestor, 'th,td');\n    };\n    var notCell = function (element, isRoot) {\n      return lookup([\n        'caption',\n        'tr',\n        'tbody',\n        'tfoot',\n        'thead'\n      ], element, isRoot);\n    };\n    var neighbours = function (selector, element) {\n      return parent(element).map(function (parent) {\n        return children$2(parent, selector);\n      });\n    };\n    var neighbourCells = curry(neighbours, 'th,td');\n    var neighbourRows = curry(neighbours, 'tr');\n    var firstCell = function (ancestor) {\n      return descendant$1(ancestor, 'th,td');\n    };\n    var table = function (element, isRoot) {\n      return closest$1(element, 'table', isRoot);\n    };\n    var row = function (element, isRoot) {\n      return lookup(['tr'], element, isRoot);\n    };\n    var rows = function (ancestor) {\n      return LayerSelector.firstLayer(ancestor, 'tr');\n    };\n    var attr = function (element, property) {\n      return parseInt(get$1(element, property), 10);\n    };\n    var grid$1 = function (element, rowProp, colProp) {\n      var rowsCount = attr(element, rowProp);\n      var cols = attr(element, colProp);\n      return Structs.grid(rowsCount, cols);\n    };\n    var TableLookup = {\n      cell: cell,\n      firstCell: firstCell,\n      cells: cells,\n      neighbourCells: neighbourCells,\n      table: table,\n      row: row,\n      rows: rows,\n      notCell: notCell,\n      neighbourRows: neighbourRows,\n      attr: attr,\n      grid: grid$1\n    };\n\n    var fromTable = function (table) {\n      var rows = TableLookup.rows(table);\n      return map(rows, function (row) {\n        var element = row;\n        var parent$1 = parent(element);\n        var parentSection = parent$1.map(function (p) {\n          var parentName = name(p);\n          return parentName === 'tfoot' || parentName === 'thead' || parentName === 'tbody' ? parentName : 'tbody';\n        }).getOr('tbody');\n        var cells = map(TableLookup.cells(row), function (cell) {\n          var rowspan = has$1(cell, 'rowspan') ? parseInt(get$1(cell, 'rowspan'), 10) : 1;\n          var colspan = has$1(cell, 'colspan') ? parseInt(get$1(cell, 'colspan'), 10) : 1;\n          return Structs.detail(cell, rowspan, colspan);\n        });\n        return Structs.rowdata(element, cells, parentSection);\n      });\n    };\n    var fromPastedRows = function (rows, example) {\n      return map(rows, function (row) {\n        var cells = map(TableLookup.cells(row), function (cell) {\n          var rowspan = has$1(cell, 'rowspan') ? parseInt(get$1(cell, 'rowspan'), 10) : 1;\n          var colspan = has$1(cell, 'colspan') ? parseInt(get$1(cell, 'colspan'), 10) : 1;\n          return Structs.detail(cell, rowspan, colspan);\n        });\n        return Structs.rowdata(row, cells, example.section());\n      });\n    };\n    var DetailsList = {\n      fromTable: fromTable,\n      fromPastedRows: fromPastedRows\n    };\n\n    var key = function (row, column) {\n      return row + ',' + column;\n    };\n    var getAt = function (warehouse, row, column) {\n      var raw = warehouse.access()[key(row, column)];\n      return raw !== undefined ? Option.some(raw) : Option.none();\n    };\n    var findItem = function (warehouse, item, comparator) {\n      var filtered = filterItems(warehouse, function (detail) {\n        return comparator(item, detail.element());\n      });\n      return filtered.length > 0 ? Option.some(filtered[0]) : Option.none();\n    };\n    var filterItems = function (warehouse, predicate) {\n      var all = bind(warehouse.all(), function (r) {\n        return r.cells();\n      });\n      return filter(all, predicate);\n    };\n    var generate = function (list) {\n      var access = {};\n      var cells = [];\n      var maxRows = list.length;\n      var maxColumns = 0;\n      each(list, function (details, r) {\n        var currentRow = [];\n        each(details.cells(), function (detail, c) {\n          var start = 0;\n          while (access[key(r, start)] !== undefined) {\n            start++;\n          }\n          var current = Structs.extended(detail.element(), detail.rowspan(), detail.colspan(), r, start);\n          for (var i = 0; i < detail.colspan(); i++) {\n            for (var j = 0; j < detail.rowspan(); j++) {\n              var cr = r + j;\n              var cc = start + i;\n              var newpos = key(cr, cc);\n              access[newpos] = current;\n              maxColumns = Math.max(maxColumns, cc + 1);\n            }\n          }\n          currentRow.push(current);\n        });\n        cells.push(Structs.rowdata(details.element(), currentRow, details.section()));\n      });\n      var grid = Structs.grid(maxRows, maxColumns);\n      return {\n        grid: constant(grid),\n        access: constant(access),\n        all: constant(cells)\n      };\n    };\n    var justCells = function (warehouse) {\n      var rows = map(warehouse.all(), function (w) {\n        return w.cells();\n      });\n      return flatten(rows);\n    };\n    var Warehouse = {\n      generate: generate,\n      getAt: getAt,\n      findItem: findItem,\n      filterItems: filterItems,\n      justCells: justCells\n    };\n\n    var statsStruct = Immutable('minRow', 'minCol', 'maxRow', 'maxCol');\n    var findSelectedStats = function (house, isSelected) {\n      var totalColumns = house.grid().columns();\n      var totalRows = house.grid().rows();\n      var minRow = totalRows;\n      var minCol = totalColumns;\n      var maxRow = 0;\n      var maxCol = 0;\n      each$1(house.access(), function (detail) {\n        if (isSelected(detail)) {\n          var startRow = detail.row();\n          var endRow = startRow + detail.rowspan() - 1;\n          var startCol = detail.column();\n          var endCol = startCol + detail.colspan() - 1;\n          if (startRow < minRow) {\n            minRow = startRow;\n          } else if (endRow > maxRow) {\n            maxRow = endRow;\n          }\n          if (startCol < minCol) {\n            minCol = startCol;\n          } else if (endCol > maxCol) {\n            maxCol = endCol;\n          }\n        }\n      });\n      return statsStruct(minRow, minCol, maxRow, maxCol);\n    };\n    var makeCell = function (list, seenSelected, rowIndex) {\n      var row = list[rowIndex].element();\n      var td = Element.fromTag('td');\n      append(td, Element.fromTag('br'));\n      var f = seenSelected ? append : prepend;\n      f(row, td);\n    };\n    var fillInGaps = function (list, house, stats, isSelected) {\n      var totalColumns = house.grid().columns();\n      var totalRows = house.grid().rows();\n      for (var i = 0; i < totalRows; i++) {\n        var seenSelected = false;\n        for (var j = 0; j < totalColumns; j++) {\n          if (!(i < stats.minRow() || i > stats.maxRow() || j < stats.minCol() || j > stats.maxCol())) {\n            var needCell = Warehouse.getAt(house, i, j).filter(isSelected).isNone();\n            if (needCell) {\n              makeCell(list, seenSelected, i);\n            } else {\n              seenSelected = true;\n            }\n          }\n        }\n      }\n    };\n    var clean = function (table, stats) {\n      var emptyRows = filter(LayerSelector.firstLayer(table, 'tr'), function (row) {\n        return row.dom().childElementCount === 0;\n      });\n      each(emptyRows, remove$2);\n      if (stats.minCol() === stats.maxCol() || stats.minRow() === stats.maxRow()) {\n        each(LayerSelector.firstLayer(table, 'th,td'), function (cell) {\n          remove(cell, 'rowspan');\n          remove(cell, 'colspan');\n        });\n      }\n      remove(table, 'width');\n      remove(table, 'height');\n      remove$1(table, 'width');\n      remove$1(table, 'height');\n    };\n    var extract = function (table, selectedSelector) {\n      var isSelected = function (detail) {\n        return is(detail.element(), selectedSelector);\n      };\n      var list = DetailsList.fromTable(table);\n      var house = Warehouse.generate(list);\n      var stats = findSelectedStats(house, isSelected);\n      var selector = 'th:not(' + selectedSelector + ')' + ',td:not(' + selectedSelector + ')';\n      var unselectedCells = LayerSelector.filterFirstLayer(table, 'th,td', function (cell) {\n        return is(cell, selector);\n      });\n      each(unselectedCells, remove$2);\n      fillInGaps(list, house, stats, isSelected);\n      clean(table, stats);\n      return table;\n    };\n    var CopySelected = { extract: extract };\n\n    function NodeValue (is, name) {\n      var get = function (element) {\n        if (!is(element)) {\n          throw new Error('Can only get ' + name + ' value of a ' + name + ' node');\n        }\n        return getOption(element).getOr('');\n      };\n      var getOptionIE10 = function (element) {\n        try {\n          return getOptionSafe(element);\n        } catch (e) {\n          return Option.none();\n        }\n      };\n      var getOptionSafe = function (element) {\n        return is(element) ? Option.from(element.dom().nodeValue) : Option.none();\n      };\n      var browser = PlatformDetection$1.detect().browser;\n      var getOption = browser.isIE() && browser.version.major === 10 ? getOptionIE10 : getOptionSafe;\n      var set = function (element, value) {\n        if (!is(element)) {\n          throw new Error('Can only set raw ' + name + ' value of a ' + name + ' node');\n        }\n        element.dom().nodeValue = value;\n      };\n      return {\n        get: get,\n        getOption: getOption,\n        set: set\n      };\n    }\n\n    var api = NodeValue(isText, 'text');\n    var get$3 = function (element) {\n      return api.get(element);\n    };\n    var getOption = function (element) {\n      return api.getOption(element);\n    };\n    var set$2 = function (element, value) {\n      api.set(element, value);\n    };\n\n    var getEnd = function (element) {\n      return name(element) === 'img' ? 1 : getOption(element).fold(function () {\n        return children(element).length;\n      }, function (v) {\n        return v.length;\n      });\n    };\n    var NBSP = '\\xA0';\n    var isTextNodeWithCursorPosition = function (el) {\n      return getOption(el).filter(function (text) {\n        return text.trim().length !== 0 || text.indexOf(NBSP) > -1;\n      }).isSome();\n    };\n    var elementsWithCursorPosition = [\n      'img',\n      'br'\n    ];\n    var isCursorPosition = function (elem) {\n      var hasCursorPosition = isTextNodeWithCursorPosition(elem);\n      return hasCursorPosition || contains(elementsWithCursorPosition, name(elem));\n    };\n\n    var first = function (element) {\n      return descendant(element, isCursorPosition);\n    };\n    var last$1 = function (element) {\n      return descendantRtl(element, isCursorPosition);\n    };\n    var descendantRtl = function (scope, predicate) {\n      var descend = function (element) {\n        var children$1 = children(element);\n        for (var i = children$1.length - 1; i >= 0; i--) {\n          var child = children$1[i];\n          if (predicate(child)) {\n            return Option.some(child);\n          }\n          var res = descend(child);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Option.none();\n      };\n      return descend(scope);\n    };\n\n    var clone$1 = function (original, isDeep) {\n      return Element.fromDom(original.dom().cloneNode(isDeep));\n    };\n    var shallow = function (original) {\n      return clone$1(original, false);\n    };\n    var deep = function (original) {\n      return clone$1(original, true);\n    };\n    var shallowAs = function (original, tag) {\n      var nu = Element.fromTag(tag);\n      var attributes = clone(original);\n      setAll(nu, attributes);\n      return nu;\n    };\n    var copy$1 = function (original, tag) {\n      var nu = shallowAs(original, tag);\n      var cloneChildren = children(deep(original));\n      append$1(nu, cloneChildren);\n      return nu;\n    };\n\n    var createCell = function () {\n      var td = Element.fromTag('td');\n      append(td, Element.fromTag('br'));\n      return td;\n    };\n    var replace = function (cell, tag, attrs) {\n      var replica = copy$1(cell, tag);\n      each$1(attrs, function (v, k) {\n        if (v === null) {\n          remove(replica, k);\n        } else {\n          set(replica, k, v);\n        }\n      });\n      return replica;\n    };\n    var pasteReplace = function (cellContent) {\n      return cellContent;\n    };\n    var newRow = function (doc) {\n      return function () {\n        return Element.fromTag('tr', doc.dom());\n      };\n    };\n    var cloneFormats = function (oldCell, newCell, formats) {\n      var first$1 = first(oldCell);\n      return first$1.map(function (firstText) {\n        var formatSelector = formats.join(',');\n        var parents = ancestors$1(firstText, formatSelector, function (element) {\n          return eq(element, oldCell);\n        });\n        return foldr(parents, function (last, parent) {\n          var clonedFormat = shallow(parent);\n          remove(clonedFormat, 'contenteditable');\n          append(last, clonedFormat);\n          return clonedFormat;\n        }, newCell);\n      }).getOr(newCell);\n    };\n    var cellOperations = function (mutate, doc, formatsToClone) {\n      var newCell = function (prev) {\n        var docu = owner(prev.element());\n        var td = Element.fromTag(name(prev.element()), docu.dom());\n        var formats = formatsToClone.getOr([\n          'strong',\n          'em',\n          'b',\n          'i',\n          'span',\n          'font',\n          'h1',\n          'h2',\n          'h3',\n          'h4',\n          'h5',\n          'h6',\n          'p',\n          'div'\n        ]);\n        var lastNode = formats.length > 0 ? cloneFormats(prev.element(), td, formats) : td;\n        append(lastNode, Element.fromTag('br'));\n        copy(prev.element(), td);\n        remove$1(td, 'height');\n        if (prev.colspan() !== 1) {\n          remove$1(prev.element(), 'width');\n        }\n        mutate(prev.element(), td);\n        return td;\n      };\n      return {\n        row: newRow(doc),\n        cell: newCell,\n        replace: replace,\n        gap: createCell\n      };\n    };\n    var paste = function (doc) {\n      return {\n        row: newRow(doc),\n        cell: createCell,\n        replace: pasteReplace,\n        gap: createCell\n      };\n    };\n    var TableFill = {\n      cellOperations: cellOperations,\n      paste: paste\n    };\n\n    var fromHtml$1 = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      return children(Element.fromDom(div));\n    };\n\n    var TagBoundaries = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'li',\n      'table',\n      'thead',\n      'tbody',\n      'tfoot',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n\n    function DomUniverse () {\n      var clone$1 = function (element) {\n        return Element.fromDom(element.dom().cloneNode(false));\n      };\n      var document = function (element) {\n        return element.dom().ownerDocument;\n      };\n      var isBoundary = function (element) {\n        if (!isElement(element))\n          return false;\n        if (name(element) === 'body')\n          return true;\n        return contains(TagBoundaries, name(element));\n      };\n      var isEmptyTag = function (element) {\n        if (!isElement(element))\n          return false;\n        return contains([\n          'br',\n          'img',\n          'hr',\n          'input'\n        ], name(element));\n      };\n      var comparePosition = function (element, other) {\n        return element.dom().compareDocumentPosition(other.dom());\n      };\n      var copyAttributesTo = function (source, destination) {\n        var as = clone(source);\n        setAll(destination, as);\n      };\n      return {\n        up: constant({\n          selector: ancestor$1,\n          closest: closest$1,\n          predicate: ancestor,\n          all: parents\n        }),\n        down: constant({\n          selector: descendants$1,\n          predicate: descendants\n        }),\n        styles: constant({\n          get: get$2,\n          getRaw: getRaw,\n          set: set$1,\n          remove: remove$1\n        }),\n        attrs: constant({\n          get: get$1,\n          set: set,\n          remove: remove,\n          copyTo: copyAttributesTo\n        }),\n        insert: constant({\n          before: before,\n          after: after,\n          afterAll: after$1,\n          append: append,\n          appendAll: append$1,\n          prepend: prepend,\n          wrap: wrap\n        }),\n        remove: constant({\n          unwrap: unwrap,\n          remove: remove$2\n        }),\n        create: constant({\n          nu: Element.fromTag,\n          clone: clone$1,\n          text: Element.fromText\n        }),\n        query: constant({\n          comparePosition: comparePosition,\n          prevSibling: prevSibling,\n          nextSibling: nextSibling\n        }),\n        property: constant({\n          children: children,\n          name: name,\n          parent: parent,\n          document: document,\n          isText: isText,\n          isComment: isComment,\n          isElement: isElement,\n          getText: get$3,\n          setText: set$2,\n          isBoundary: isBoundary,\n          isEmptyTag: isEmptyTag\n        }),\n        eq: eq,\n        is: is$1\n      };\n    }\n\n    var leftRight = Immutable('left', 'right');\n    var bisect = function (universe, parent, child) {\n      var children = universe.property().children(parent);\n      var index = findIndex(children, curry(universe.eq, child));\n      return index.map(function (ind) {\n        return {\n          before: constant(children.slice(0, ind)),\n          after: constant(children.slice(ind + 1))\n        };\n      });\n    };\n    var breakToRight = function (universe, parent, child) {\n      return bisect(universe, parent, child).map(function (parts) {\n        var second = universe.create().clone(parent);\n        universe.insert().appendAll(second, parts.after());\n        universe.insert().after(parent, second);\n        return leftRight(parent, second);\n      });\n    };\n    var breakToLeft = function (universe, parent, child) {\n      return bisect(universe, parent, child).map(function (parts) {\n        var prior = universe.create().clone(parent);\n        universe.insert().appendAll(prior, parts.before().concat([child]));\n        universe.insert().appendAll(parent, parts.after());\n        universe.insert().before(parent, prior);\n        return leftRight(prior, parent);\n      });\n    };\n    var breakPath = function (universe, item, isTop, breaker) {\n      var result = Immutable('first', 'second', 'splits');\n      var next = function (child, group, splits) {\n        var fallback = result(child, Option.none(), splits);\n        if (isTop(child))\n          return result(child, group, splits);\n        else {\n          return universe.property().parent(child).bind(function (parent) {\n            return breaker(universe, parent, child).map(function (breakage) {\n              var extra = [{\n                  first: breakage.left,\n                  second: breakage.right\n                }];\n              var nextChild = isTop(parent) ? parent : breakage.left();\n              return next(nextChild, Option.some(breakage.right()), splits.concat(extra));\n            }).getOr(fallback);\n          });\n        }\n      };\n      return next(item, Option.none(), []);\n    };\n    var Breaker = {\n      breakToLeft: breakToLeft,\n      breakToRight: breakToRight,\n      breakPath: breakPath\n    };\n\n    var all$1 = function (universe, look, elements, f) {\n      var head = elements[0];\n      var tail = elements.slice(1);\n      return f(universe, look, head, tail);\n    };\n    var oneAll = function (universe, look, elements) {\n      return elements.length > 0 ? all$1(universe, look, elements, unsafeOne) : Option.none();\n    };\n    var unsafeOne = function (universe, look, head, tail) {\n      var start = look(universe, head);\n      return foldr(tail, function (b, a) {\n        var current = look(universe, a);\n        return commonElement(universe, b, current);\n      }, start);\n    };\n    var commonElement = function (universe, start, end) {\n      return start.bind(function (s) {\n        return end.filter(curry(universe.eq, s));\n      });\n    };\n    var Shared = { oneAll: oneAll };\n\n    var eq$1 = function (universe, item) {\n      return curry(universe.eq, item);\n    };\n    var unsafeSubset = function (universe, common, ps1, ps2) {\n      var children = universe.property().children(common);\n      if (universe.eq(common, ps1[0]))\n        return Option.some([ps1[0]]);\n      if (universe.eq(common, ps2[0]))\n        return Option.some([ps2[0]]);\n      var finder = function (ps) {\n        var topDown = reverse(ps);\n        var index = findIndex(topDown, eq$1(universe, common)).getOr(-1);\n        var item = index < topDown.length - 1 ? topDown[index + 1] : topDown[index];\n        return findIndex(children, eq$1(universe, item));\n      };\n      var startIndex = finder(ps1);\n      var endIndex = finder(ps2);\n      return startIndex.bind(function (sIndex) {\n        return endIndex.map(function (eIndex) {\n          var first = Math.min(sIndex, eIndex);\n          var last = Math.max(sIndex, eIndex);\n          return children.slice(first, last + 1);\n        });\n      });\n    };\n    var ancestors$2 = function (universe, start, end, _isRoot) {\n      var isRoot = _isRoot !== undefined ? _isRoot : constant(false);\n      var ps1 = [start].concat(universe.up().all(start));\n      var ps2 = [end].concat(universe.up().all(end));\n      var prune = function (path) {\n        var index = findIndex(path, isRoot);\n        return index.fold(function () {\n          return path;\n        }, function (ind) {\n          return path.slice(0, ind + 1);\n        });\n      };\n      var pruned1 = prune(ps1);\n      var pruned2 = prune(ps2);\n      var shared = find(pruned1, function (x) {\n        return exists(pruned2, eq$1(universe, x));\n      });\n      return {\n        firstpath: constant(pruned1),\n        secondpath: constant(pruned2),\n        shared: constant(shared)\n      };\n    };\n    var subset = function (universe, start, end) {\n      var ancs = ancestors$2(universe, start, end);\n      return ancs.shared().bind(function (shared) {\n        return unsafeSubset(universe, shared, ancs.firstpath(), ancs.secondpath());\n      });\n    };\n    var Subset = {\n      subset: subset,\n      ancestors: ancestors$2\n    };\n\n    var sharedOne = function (universe, look, elements) {\n      return Shared.oneAll(universe, look, elements);\n    };\n    var subset$1 = function (universe, start, finish) {\n      return Subset.subset(universe, start, finish);\n    };\n    var ancestors$3 = function (universe, start, finish, _isRoot) {\n      return Subset.ancestors(universe, start, finish, _isRoot);\n    };\n    var breakToLeft$1 = function (universe, parent, child) {\n      return Breaker.breakToLeft(universe, parent, child);\n    };\n    var breakToRight$1 = function (universe, parent, child) {\n      return Breaker.breakToRight(universe, parent, child);\n    };\n    var breakPath$1 = function (universe, child, isTop, breaker) {\n      return Breaker.breakPath(universe, child, isTop, breaker);\n    };\n    var Parent = {\n      sharedOne: sharedOne,\n      subset: subset$1,\n      ancestors: ancestors$3,\n      breakToLeft: breakToLeft$1,\n      breakToRight: breakToRight$1,\n      breakPath: breakPath$1\n    };\n\n    var universe = DomUniverse();\n    var sharedOne$1 = function (look, elements) {\n      return Parent.sharedOne(universe, function (universe, element) {\n        return look(element);\n      }, elements);\n    };\n    var subset$2 = function (start, finish) {\n      return Parent.subset(universe, start, finish);\n    };\n    var ancestors$4 = function (start, finish, _isRoot) {\n      return Parent.ancestors(universe, start, finish, _isRoot);\n    };\n    var breakToLeft$2 = function (parent, child) {\n      return Parent.breakToLeft(universe, parent, child);\n    };\n    var breakToRight$2 = function (parent, child) {\n      return Parent.breakToRight(universe, parent, child);\n    };\n    var breakPath$2 = function (child, isTop, breaker) {\n      return Parent.breakPath(universe, child, isTop, function (u, p, c) {\n        return breaker(p, c);\n      });\n    };\n    var DomParent = {\n      sharedOne: sharedOne$1,\n      subset: subset$2,\n      ancestors: ancestors$4,\n      breakToLeft: breakToLeft$2,\n      breakToRight: breakToRight$2,\n      breakPath: breakPath$2\n    };\n\n    var inSelection = function (bounds, detail) {\n      var leftEdge = detail.column();\n      var rightEdge = detail.column() + detail.colspan() - 1;\n      var topEdge = detail.row();\n      var bottomEdge = detail.row() + detail.rowspan() - 1;\n      return leftEdge <= bounds.finishCol() && rightEdge >= bounds.startCol() && (topEdge <= bounds.finishRow() && bottomEdge >= bounds.startRow());\n    };\n    var isWithin = function (bounds, detail) {\n      return detail.column() >= bounds.startCol() && detail.column() + detail.colspan() - 1 <= bounds.finishCol() && detail.row() >= bounds.startRow() && detail.row() + detail.rowspan() - 1 <= bounds.finishRow();\n    };\n    var isRectangular = function (warehouse, bounds) {\n      var isRect = true;\n      var detailIsWithin = curry(isWithin, bounds);\n      for (var i = bounds.startRow(); i <= bounds.finishRow(); i++) {\n        for (var j = bounds.startCol(); j <= bounds.finishCol(); j++) {\n          isRect = isRect && Warehouse.getAt(warehouse, i, j).exists(detailIsWithin);\n        }\n      }\n      return isRect ? Option.some(bounds) : Option.none();\n    };\n    var CellBounds = {\n      inSelection: inSelection,\n      isWithin: isWithin,\n      isRectangular: isRectangular\n    };\n\n    var getBounds = function (detailA, detailB) {\n      return Structs.bounds(Math.min(detailA.row(), detailB.row()), Math.min(detailA.column(), detailB.column()), Math.max(detailA.row() + detailA.rowspan() - 1, detailB.row() + detailB.rowspan() - 1), Math.max(detailA.column() + detailA.colspan() - 1, detailB.column() + detailB.colspan() - 1));\n    };\n    var getAnyBox = function (warehouse, startCell, finishCell) {\n      var startCoords = Warehouse.findItem(warehouse, startCell, eq);\n      var finishCoords = Warehouse.findItem(warehouse, finishCell, eq);\n      return startCoords.bind(function (sc) {\n        return finishCoords.map(function (fc) {\n          return getBounds(sc, fc);\n        });\n      });\n    };\n    var getBox = function (warehouse, startCell, finishCell) {\n      return getAnyBox(warehouse, startCell, finishCell).bind(function (bounds) {\n        return CellBounds.isRectangular(warehouse, bounds);\n      });\n    };\n    var CellGroup = {\n      getAnyBox: getAnyBox,\n      getBox: getBox\n    };\n\n    var moveBy = function (warehouse, cell, row, column) {\n      return Warehouse.findItem(warehouse, cell, eq).bind(function (detail) {\n        var startRow = row > 0 ? detail.row() + detail.rowspan() - 1 : detail.row();\n        var startCol = column > 0 ? detail.column() + detail.colspan() - 1 : detail.column();\n        var dest = Warehouse.getAt(warehouse, startRow + row, startCol + column);\n        return dest.map(function (d) {\n          return d.element();\n        });\n      });\n    };\n    var intercepts = function (warehouse, start, finish) {\n      return CellGroup.getAnyBox(warehouse, start, finish).map(function (bounds) {\n        var inside = Warehouse.filterItems(warehouse, curry(CellBounds.inSelection, bounds));\n        return map(inside, function (detail) {\n          return detail.element();\n        });\n      });\n    };\n    var parentCell = function (warehouse, innerCell) {\n      var isContainedBy = function (c1, c2) {\n        return contains$2(c2, c1);\n      };\n      return Warehouse.findItem(warehouse, innerCell, isContainedBy).bind(function (detail) {\n        return detail.element();\n      });\n    };\n    var CellFinder = {\n      moveBy: moveBy,\n      intercepts: intercepts,\n      parentCell: parentCell\n    };\n\n    var moveBy$1 = function (cell, deltaRow, deltaColumn) {\n      return TableLookup.table(cell).bind(function (table) {\n        var warehouse = getWarehouse(table);\n        return CellFinder.moveBy(warehouse, cell, deltaRow, deltaColumn);\n      });\n    };\n    var intercepts$1 = function (table, first, last) {\n      var warehouse = getWarehouse(table);\n      return CellFinder.intercepts(warehouse, first, last);\n    };\n    var nestedIntercepts = function (table, first, firstTable, last, lastTable) {\n      var warehouse = getWarehouse(table);\n      var startCell = eq(table, firstTable) ? first : CellFinder.parentCell(warehouse, first);\n      var lastCell = eq(table, lastTable) ? last : CellFinder.parentCell(warehouse, last);\n      return CellFinder.intercepts(warehouse, startCell, lastCell);\n    };\n    var getBox$1 = function (table, first, last) {\n      var warehouse = getWarehouse(table);\n      return CellGroup.getBox(warehouse, first, last);\n    };\n    var getWarehouse = function (table) {\n      var list = DetailsList.fromTable(table);\n      return Warehouse.generate(list);\n    };\n    var TablePositions = {\n      moveBy: moveBy$1,\n      intercepts: intercepts$1,\n      nestedIntercepts: nestedIntercepts,\n      getBox: getBox$1\n    };\n\n    var lookupTable = function (container, isRoot) {\n      return ancestor$1(container, 'table');\n    };\n    var identified = MixedBag([\n      'boxes',\n      'start',\n      'finish'\n    ], []);\n    var identify = function (start, finish, isRoot) {\n      var getIsRoot = function (rootTable) {\n        return function (element) {\n          return isRoot(element) || eq(element, rootTable);\n        };\n      };\n      if (eq(start, finish)) {\n        return Option.some(identified({\n          boxes: Option.some([start]),\n          start: start,\n          finish: finish\n        }));\n      } else {\n        return lookupTable(start, isRoot).bind(function (startTable) {\n          return lookupTable(finish, isRoot).bind(function (finishTable) {\n            if (eq(startTable, finishTable)) {\n              return Option.some(identified({\n                boxes: TablePositions.intercepts(startTable, start, finish),\n                start: start,\n                finish: finish\n              }));\n            } else if (contains$2(startTable, finishTable)) {\n              var ancestorCells = ancestors$1(finish, 'td,th', getIsRoot(startTable));\n              var finishCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : finish;\n              return Option.some(identified({\n                boxes: TablePositions.nestedIntercepts(startTable, start, startTable, finish, finishTable),\n                start: start,\n                finish: finishCell\n              }));\n            } else if (contains$2(finishTable, startTable)) {\n              var ancestorCells = ancestors$1(start, 'td,th', getIsRoot(finishTable));\n              var startCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : start;\n              return Option.some(identified({\n                boxes: TablePositions.nestedIntercepts(finishTable, start, startTable, finish, finishTable),\n                start: start,\n                finish: startCell\n              }));\n            } else {\n              return DomParent.ancestors(start, finish).shared().bind(function (lca) {\n                return closest$1(lca, 'table', isRoot).bind(function (lcaTable) {\n                  var finishAncestorCells = ancestors$1(finish, 'td,th', getIsRoot(lcaTable));\n                  var finishCell = finishAncestorCells.length > 0 ? finishAncestorCells[finishAncestorCells.length - 1] : finish;\n                  var startAncestorCells = ancestors$1(start, 'td,th', getIsRoot(lcaTable));\n                  var startCell = startAncestorCells.length > 0 ? startAncestorCells[startAncestorCells.length - 1] : start;\n                  return Option.some(identified({\n                    boxes: TablePositions.nestedIntercepts(lcaTable, start, startTable, finish, finishTable),\n                    start: startCell,\n                    finish: finishCell\n                  }));\n                });\n              });\n            }\n          });\n        });\n      }\n    };\n    var retrieve = function (container, selector) {\n      var sels = descendants$1(container, selector);\n      return sels.length > 0 ? Option.some(sels) : Option.none();\n    };\n    var getLast = function (boxes, lastSelectedSelector) {\n      return find(boxes, function (box) {\n        return is(box, lastSelectedSelector);\n      });\n    };\n    var getEdges = function (container, firstSelectedSelector, lastSelectedSelector) {\n      return descendant$1(container, firstSelectedSelector).bind(function (first) {\n        return descendant$1(container, lastSelectedSelector).bind(function (last) {\n          return DomParent.sharedOne(lookupTable, [\n            first,\n            last\n          ]).map(function (tbl) {\n            return {\n              first: constant(first),\n              last: constant(last),\n              table: constant(tbl)\n            };\n          });\n        });\n      });\n    };\n    var expandTo = function (finish, firstSelectedSelector) {\n      return ancestor$1(finish, 'table').bind(function (table) {\n        return descendant$1(table, firstSelectedSelector).bind(function (start) {\n          return identify(start, finish).bind(function (identified) {\n            return identified.boxes().map(function (boxes) {\n              return {\n                boxes: constant(boxes),\n                start: constant(identified.start()),\n                finish: constant(identified.finish())\n              };\n            });\n          });\n        });\n      });\n    };\n    var shiftSelection = function (boxes, deltaRow, deltaColumn, firstSelectedSelector, lastSelectedSelector) {\n      return getLast(boxes, lastSelectedSelector).bind(function (last) {\n        return TablePositions.moveBy(last, deltaRow, deltaColumn).bind(function (finish) {\n          return expandTo(finish, firstSelectedSelector);\n        });\n      });\n    };\n    var CellSelection = {\n      identify: identify,\n      retrieve: retrieve,\n      shiftSelection: shiftSelection,\n      getEdges: getEdges\n    };\n\n    var retrieve$1 = function (container, selector) {\n      return CellSelection.retrieve(container, selector);\n    };\n    var retrieveBox = function (container, firstSelectedSelector, lastSelectedSelector) {\n      return CellSelection.getEdges(container, firstSelectedSelector, lastSelectedSelector).bind(function (edges) {\n        var isRoot = function (ancestor) {\n          return eq(container, ancestor);\n        };\n        var firstAncestor = ancestor$1(edges.first(), 'thead,tfoot,tbody,table', isRoot);\n        var lastAncestor = ancestor$1(edges.last(), 'thead,tfoot,tbody,table', isRoot);\n        return firstAncestor.bind(function (fA) {\n          return lastAncestor.bind(function (lA) {\n            return eq(fA, lA) ? TablePositions.getBox(edges.table(), edges.first(), edges.last()) : Option.none();\n          });\n        });\n      });\n    };\n    var TableSelection = {\n      retrieve: retrieve$1,\n      retrieveBox: retrieveBox\n    };\n\n    var selected = 'data-mce-selected';\n    var selectedSelector = 'td[' + selected + '],th[' + selected + ']';\n    var attributeSelector = '[' + selected + ']';\n    var firstSelected = 'data-mce-first-selected';\n    var firstSelectedSelector = 'td[' + firstSelected + '],th[' + firstSelected + ']';\n    var lastSelected = 'data-mce-last-selected';\n    var lastSelectedSelector = 'td[' + lastSelected + '],th[' + lastSelected + ']';\n    var Ephemera = {\n      selected: constant(selected),\n      selectedSelector: constant(selectedSelector),\n      attributeSelector: constant(attributeSelector),\n      firstSelected: constant(firstSelected),\n      firstSelectedSelector: constant(firstSelectedSelector),\n      lastSelected: constant(lastSelected),\n      lastSelectedSelector: constant(lastSelectedSelector)\n    };\n\n    var generate$1 = function (cases) {\n      if (!isArray(cases)) {\n        throw new Error('cases must be an array');\n      }\n      if (cases.length === 0) {\n        throw new Error('there must be at least one case');\n      }\n      var constructors = [];\n      var adt = {};\n      each(cases, function (acase, count) {\n        var keys$1 = keys(acase);\n        if (keys$1.length !== 1) {\n          throw new Error('one and only one name per case');\n        }\n        var key = keys$1[0];\n        var value = acase[key];\n        if (adt[key] !== undefined) {\n          throw new Error('duplicate key detected:' + key);\n        } else if (key === 'cata') {\n          throw new Error('cannot have a case named cata (sorry)');\n        } else if (!isArray(value)) {\n          throw new Error('case arguments must be an array');\n        }\n        constructors.push(key);\n        adt[key] = function () {\n          var argLength = arguments.length;\n          if (argLength !== value.length) {\n            throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n          }\n          var args = new Array(argLength);\n          for (var i = 0; i < args.length; i++)\n            args[i] = arguments[i];\n          var match = function (branches) {\n            var branchKeys = keys(branches);\n            if (constructors.length !== branchKeys.length) {\n              throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n            }\n            var allReqd = forall(constructors, function (reqKey) {\n              return contains(branchKeys, reqKey);\n            });\n            if (!allReqd)\n              throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n            return branches[key].apply(null, args);\n          };\n          return {\n            fold: function () {\n              if (arguments.length !== cases.length) {\n                throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + arguments.length);\n              }\n              var target = arguments[count];\n              return target.apply(null, args);\n            },\n            match: match,\n            log: function (label) {\n              console.log(label, {\n                constructors: constructors,\n                constructor: key,\n                params: args\n              });\n            }\n          };\n        };\n      });\n      return adt;\n    };\n    var Adt = { generate: generate$1 };\n\n    var type$1 = Adt.generate([\n      { none: [] },\n      { multiple: ['elements'] },\n      { single: ['selection'] }\n    ]);\n    var cata = function (subject, onNone, onMultiple, onSingle) {\n      return subject.fold(onNone, onMultiple, onSingle);\n    };\n    var SelectionTypes = {\n      cata: cata,\n      none: type$1.none,\n      multiple: type$1.multiple,\n      single: type$1.single\n    };\n\n    var selection = function (cell, selections) {\n      return SelectionTypes.cata(selections.get(), constant([]), identity, constant([cell]));\n    };\n    var unmergable = function (cell, selections) {\n      var hasSpan = function (elem) {\n        return has$1(elem, 'rowspan') && parseInt(get$1(elem, 'rowspan'), 10) > 1 || has$1(elem, 'colspan') && parseInt(get$1(elem, 'colspan'), 10) > 1;\n      };\n      var candidates = selection(cell, selections);\n      return candidates.length > 0 && forall(candidates, hasSpan) ? Option.some(candidates) : Option.none();\n    };\n    var mergable = function (table, selections) {\n      return SelectionTypes.cata(selections.get(), Option.none, function (cells, _env) {\n        if (cells.length === 0) {\n          return Option.none();\n        }\n        return TableSelection.retrieveBox(table, Ephemera.firstSelectedSelector(), Ephemera.lastSelectedSelector()).bind(function (bounds) {\n          return cells.length > 1 ? Option.some({\n            bounds: constant(bounds),\n            cells: constant(cells)\n          }) : Option.none();\n        });\n      }, Option.none);\n    };\n    var CellOperations = {\n      mergable: mergable,\n      unmergable: unmergable,\n      selection: selection\n    };\n\n    var noMenu = function (cell) {\n      return {\n        element: constant(cell),\n        mergable: Option.none,\n        unmergable: Option.none,\n        selection: constant([cell])\n      };\n    };\n    var forMenu = function (selections, table, cell) {\n      return {\n        element: constant(cell),\n        mergable: constant(CellOperations.mergable(table, selections)),\n        unmergable: constant(CellOperations.unmergable(cell, selections)),\n        selection: constant(CellOperations.selection(cell, selections))\n      };\n    };\n    var notCell$1 = function (element) {\n      return noMenu(element);\n    };\n    var paste$1 = Immutable('element', 'clipboard', 'generators');\n    var pasteRows = function (selections, table, cell, clipboard, generators) {\n      return {\n        element: constant(cell),\n        mergable: Option.none,\n        unmergable: Option.none,\n        selection: constant(CellOperations.selection(cell, selections)),\n        clipboard: constant(clipboard),\n        generators: constant(generators)\n      };\n    };\n    var TableTargets = {\n      noMenu: noMenu,\n      forMenu: forMenu,\n      notCell: notCell$1,\n      paste: paste$1,\n      pasteRows: pasteRows\n    };\n\n    var extractSelected = function (cells) {\n      return TableLookup.table(cells[0]).map(deep).map(function (replica) {\n        return [CopySelected.extract(replica, Ephemera.attributeSelector())];\n      });\n    };\n    var serializeElements = function (editor, elements) {\n      return map(elements, function (elm) {\n        return editor.selection.serializer.serialize(elm.dom(), {});\n      }).join('');\n    };\n    var getTextContent = function (elements) {\n      return map(elements, function (element) {\n        return element.dom().innerText;\n      }).join('');\n    };\n    var registerEvents = function (editor, selections, actions, cellSelection) {\n      editor.on('BeforeGetContent', function (e) {\n        var multiCellContext = function (cells) {\n          e.preventDefault();\n          extractSelected(cells).each(function (elements) {\n            e.content = e.format === 'text' ? getTextContent(elements) : serializeElements(editor, elements);\n          });\n        };\n        if (e.selection === true) {\n          SelectionTypes.cata(selections.get(), noop, multiCellContext, noop);\n        }\n      });\n      editor.on('BeforeSetContent', function (e) {\n        if (e.selection === true && e.paste === true) {\n          var cellOpt = Option.from(editor.dom.getParent(editor.selection.getStart(), 'th,td'));\n          cellOpt.each(function (domCell) {\n            var cell = Element.fromDom(domCell);\n            TableLookup.table(cell).each(function (table) {\n              var elements = filter(fromHtml$1(e.content), function (content) {\n                return name(content) !== 'meta';\n              });\n              if (elements.length === 1 && name(elements[0]) === 'table') {\n                e.preventDefault();\n                var doc = Element.fromDom(editor.getDoc());\n                var generators = TableFill.paste(doc);\n                var targets = TableTargets.paste(cell, elements[0], generators);\n                actions.pasteCells(table, targets).each(function (rng) {\n                  editor.selection.setRng(rng);\n                  editor.focus();\n                  cellSelection.clear(table);\n                });\n              }\n            });\n          });\n        }\n      });\n    };\n    var Clipboard = { registerEvents: registerEvents };\n\n    function Dimension (name, getOffset) {\n      var set = function (element, h) {\n        if (!isNumber(h) && !h.match(/^[0-9]+$/)) {\n          throw new Error(name + '.set accepts only positive integer values. Value was ' + h);\n        }\n        var dom = element.dom();\n        if (isSupported(dom)) {\n          dom.style[name] = h + 'px';\n        }\n      };\n      var get = function (element) {\n        var r = getOffset(element);\n        if (r <= 0 || r === null) {\n          var css = get$2(element, name);\n          return parseFloat(css) || 0;\n        }\n        return r;\n      };\n      var getOuter = get;\n      var aggregate = function (element, properties) {\n        return foldl(properties, function (acc, property) {\n          var val = get$2(element, property);\n          var value = val === undefined ? 0 : parseInt(val, 10);\n          return isNaN(value) ? acc : acc + value;\n        }, 0);\n      };\n      var max = function (element, value, properties) {\n        var cumulativeInclusions = aggregate(element, properties);\n        var absoluteMax = value > cumulativeInclusions ? value - cumulativeInclusions : 0;\n        return absoluteMax;\n      };\n      return {\n        set: set,\n        get: get,\n        getOuter: getOuter,\n        aggregate: aggregate,\n        max: max\n      };\n    }\n\n    var api$1 = Dimension('height', function (element) {\n      var dom = element.dom();\n      return inBody(element) ? dom.getBoundingClientRect().height : dom.offsetHeight;\n    });\n    var get$4 = function (element) {\n      return api$1.get(element);\n    };\n    var getOuter = function (element) {\n      return api$1.getOuter(element);\n    };\n\n    var api$2 = Dimension('width', function (element) {\n      return element.dom().offsetWidth;\n    });\n    var get$5 = function (element) {\n      return api$2.get(element);\n    };\n    var getOuter$1 = function (element) {\n      return api$2.getOuter(element);\n    };\n\n    var platform = PlatformDetection$1.detect();\n    var needManualCalc = function () {\n      return platform.browser.isIE() || platform.browser.isEdge();\n    };\n    var toNumber = function (px, fallback) {\n      var num = parseFloat(px);\n      return isNaN(num) ? fallback : num;\n    };\n    var getProp = function (elm, name, fallback) {\n      return toNumber(get$2(elm, name), fallback);\n    };\n    var getCalculatedHeight = function (cell) {\n      var paddingTop = getProp(cell, 'padding-top', 0);\n      var paddingBottom = getProp(cell, 'padding-bottom', 0);\n      var borderTop = getProp(cell, 'border-top-width', 0);\n      var borderBottom = getProp(cell, 'border-bottom-width', 0);\n      var height = cell.dom().getBoundingClientRect().height;\n      var boxSizing = get$2(cell, 'box-sizing');\n      var borders = borderTop + borderBottom;\n      return boxSizing === 'border-box' ? height : height - paddingTop - paddingBottom - borders;\n    };\n    var getWidth = function (cell) {\n      return getProp(cell, 'width', get$5(cell));\n    };\n    var getHeight = function (cell) {\n      return needManualCalc() ? getCalculatedHeight(cell) : getProp(cell, 'height', get$4(cell));\n    };\n    var RuntimeSize = {\n      getWidth: getWidth,\n      getHeight: getHeight\n    };\n\n    var genericSizeRegex = /(\\d+(\\.\\d+)?)(\\w|%)*/;\n    var percentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n    var pixelBasedSizeRegex = /(\\d+(\\.\\d+)?)px|em/;\n    var setPixelWidth = function (cell, amount) {\n      set$1(cell, 'width', amount + 'px');\n    };\n    var setPercentageWidth = function (cell, amount) {\n      set$1(cell, 'width', amount + '%');\n    };\n    var setHeight = function (cell, amount) {\n      set$1(cell, 'height', amount + 'px');\n    };\n    var getHeightValue = function (cell) {\n      return getRaw(cell, 'height').getOrThunk(function () {\n        return RuntimeSize.getHeight(cell) + 'px';\n      });\n    };\n    var convert = function (cell, number, getter, setter) {\n      var newSize = TableLookup.table(cell).map(function (table) {\n        var total = getter(table);\n        return Math.floor(number / 100 * total);\n      }).getOr(number);\n      setter(cell, newSize);\n      return newSize;\n    };\n    var normalizePixelSize = function (value, cell, getter, setter) {\n      var number = parseInt(value, 10);\n      return endsWith(value, '%') && name(cell) !== 'table' ? convert(cell, number, getter, setter) : number;\n    };\n    var getTotalHeight = function (cell) {\n      var value = getHeightValue(cell);\n      if (!value) {\n        return get$4(cell);\n      }\n      return normalizePixelSize(value, cell, get$4, setHeight);\n    };\n    var get$6 = function (cell, type, f) {\n      var v = f(cell);\n      var span = getSpan(cell, type);\n      return v / span;\n    };\n    var getSpan = function (cell, type) {\n      return has$1(cell, type) ? parseInt(get$1(cell, type), 10) : 1;\n    };\n    var getRawWidth = function (element) {\n      var cssWidth = getRaw(element, 'width');\n      return cssWidth.fold(function () {\n        return Option.from(get$1(element, 'width'));\n      }, function (width) {\n        return Option.some(width);\n      });\n    };\n    var normalizePercentageWidth = function (cellWidth, tableSize) {\n      return cellWidth / tableSize.pixelWidth() * 100;\n    };\n    var choosePercentageSize = function (element, width, tableSize) {\n      if (percentageBasedSizeRegex.test(width)) {\n        var percentMatch = percentageBasedSizeRegex.exec(width);\n        return parseFloat(percentMatch[1]);\n      } else {\n        var intWidth = get$5(element);\n        return normalizePercentageWidth(intWidth, tableSize);\n      }\n    };\n    var getPercentageWidth = function (cell, tableSize) {\n      var width = getRawWidth(cell);\n      return width.fold(function () {\n        var intWidth = get$5(cell);\n        return normalizePercentageWidth(intWidth, tableSize);\n      }, function (w) {\n        return choosePercentageSize(cell, w, tableSize);\n      });\n    };\n    var normalizePixelWidth = function (cellWidth, tableSize) {\n      return cellWidth / 100 * tableSize.pixelWidth();\n    };\n    var choosePixelSize = function (element, width, tableSize) {\n      if (pixelBasedSizeRegex.test(width)) {\n        var pixelMatch = pixelBasedSizeRegex.exec(width);\n        return parseInt(pixelMatch[1], 10);\n      } else if (percentageBasedSizeRegex.test(width)) {\n        var percentMatch = percentageBasedSizeRegex.exec(width);\n        var floatWidth = parseFloat(percentMatch[1]);\n        return normalizePixelWidth(floatWidth, tableSize);\n      } else {\n        return get$5(element);\n      }\n    };\n    var getPixelWidth = function (cell, tableSize) {\n      var width = getRawWidth(cell);\n      return width.fold(function () {\n        return get$5(cell);\n      }, function (w) {\n        return choosePixelSize(cell, w, tableSize);\n      });\n    };\n    var getHeight$1 = function (cell) {\n      return get$6(cell, 'rowspan', getTotalHeight);\n    };\n    var getGenericWidth = function (cell) {\n      var width = getRawWidth(cell);\n      return width.bind(function (w) {\n        if (genericSizeRegex.test(w)) {\n          var match = genericSizeRegex.exec(w);\n          return Option.some({\n            width: constant(match[1]),\n            unit: constant(match[3])\n          });\n        } else {\n          return Option.none();\n        }\n      });\n    };\n    var setGenericWidth = function (cell, amount, unit) {\n      set$1(cell, 'width', amount + unit);\n    };\n    var Sizes = {\n      percentageBasedSizeRegex: constant(percentageBasedSizeRegex),\n      pixelBasedSizeRegex: constant(pixelBasedSizeRegex),\n      setPixelWidth: setPixelWidth,\n      setPercentageWidth: setPercentageWidth,\n      setHeight: setHeight,\n      getPixelWidth: getPixelWidth,\n      getPercentageWidth: getPercentageWidth,\n      getGenericWidth: getGenericWidth,\n      setGenericWidth: setGenericWidth,\n      getHeight: getHeight$1,\n      getRawWidth: getRawWidth\n    };\n\n    var halve = function (main, other) {\n      var width = Sizes.getGenericWidth(main);\n      width.each(function (w) {\n        var newWidth = w.width() / 2;\n        Sizes.setGenericWidth(main, newWidth, w.unit());\n        Sizes.setGenericWidth(other, newWidth, w.unit());\n      });\n    };\n    var CellMutations = { halve: halve };\n\n    var attached = function (element, scope) {\n      var doc = scope || Element.fromDom(domGlobals.document.documentElement);\n      return ancestor(element, curry(eq, doc)).isSome();\n    };\n    var windowOf = function (element) {\n      var dom = element.dom();\n      if (dom === dom.window && element instanceof domGlobals.Window) {\n        return element;\n      }\n      return isDocument(element) ? dom.defaultView || dom.parentWindow : null;\n    };\n\n    var r = function (left, top) {\n      var translate = function (x, y) {\n        return r(left + x, top + y);\n      };\n      return {\n        left: constant(left),\n        top: constant(top),\n        translate: translate\n      };\n    };\n    var Position = r;\n\n    var boxPosition = function (dom) {\n      var box = dom.getBoundingClientRect();\n      return Position(box.left, box.top);\n    };\n    var firstDefinedOrZero = function (a, b) {\n      return a !== undefined ? a : b !== undefined ? b : 0;\n    };\n    var absolute = function (element) {\n      var doc = element.dom().ownerDocument;\n      var body = doc.body;\n      var win = windowOf(Element.fromDom(doc));\n      var html = doc.documentElement;\n      var scrollTop = firstDefinedOrZero(win.pageYOffset, html.scrollTop);\n      var scrollLeft = firstDefinedOrZero(win.pageXOffset, html.scrollLeft);\n      var clientTop = firstDefinedOrZero(html.clientTop, body.clientTop);\n      var clientLeft = firstDefinedOrZero(html.clientLeft, body.clientLeft);\n      return viewport(element).translate(scrollLeft - clientLeft, scrollTop - clientTop);\n    };\n    var viewport = function (element) {\n      var dom = element.dom();\n      var doc = dom.ownerDocument;\n      var body = doc.body;\n      var html = Element.fromDom(doc.documentElement);\n      if (body === dom) {\n        return Position(body.offsetLeft, body.offsetTop);\n      }\n      if (!attached(element, html)) {\n        return Position(0, 0);\n      }\n      return boxPosition(dom);\n    };\n\n    var rowInfo = Immutable('row', 'y');\n    var colInfo = Immutable('col', 'x');\n    var rtlEdge = function (cell) {\n      var pos = absolute(cell);\n      return pos.left() + getOuter$1(cell);\n    };\n    var ltrEdge = function (cell) {\n      return absolute(cell).left();\n    };\n    var getLeftEdge = function (index, cell) {\n      return colInfo(index, ltrEdge(cell));\n    };\n    var getRightEdge = function (index, cell) {\n      return colInfo(index, rtlEdge(cell));\n    };\n    var getTop = function (cell) {\n      return absolute(cell).top();\n    };\n    var getTopEdge = function (index, cell) {\n      return rowInfo(index, getTop(cell));\n    };\n    var getBottomEdge = function (index, cell) {\n      return rowInfo(index, getTop(cell) + getOuter(cell));\n    };\n    var findPositions = function (getInnerEdge, getOuterEdge, array) {\n      if (array.length === 0) {\n        return [];\n      }\n      var lines = map(array.slice(1), function (cellOption, index) {\n        return cellOption.map(function (cell) {\n          return getInnerEdge(index, cell);\n        });\n      });\n      var lastLine = array[array.length - 1].map(function (cell) {\n        return getOuterEdge(array.length - 1, cell);\n      });\n      return lines.concat([lastLine]);\n    };\n    var negate = function (step, _table) {\n      return -step;\n    };\n    var height = {\n      delta: identity,\n      positions: curry(findPositions, getTopEdge, getBottomEdge),\n      edge: getTop\n    };\n    var ltr = {\n      delta: identity,\n      edge: ltrEdge,\n      positions: curry(findPositions, getLeftEdge, getRightEdge)\n    };\n    var rtl = {\n      delta: negate,\n      edge: rtlEdge,\n      positions: curry(findPositions, getRightEdge, getLeftEdge)\n    };\n    var BarPositions = {\n      height: height,\n      rtl: rtl,\n      ltr: ltr\n    };\n\n    var ResizeDirection = {\n      ltr: BarPositions.ltr,\n      rtl: BarPositions.rtl\n    };\n\n    function TableDirection (directionAt) {\n      var auto = function (table) {\n        return directionAt(table).isRtl() ? ResizeDirection.rtl : ResizeDirection.ltr;\n      };\n      var delta = function (amount, table) {\n        return auto(table).delta(amount, table);\n      };\n      var positions = function (cols, table) {\n        return auto(table).positions(cols);\n      };\n      var edge = function (cell) {\n        return auto(cell).edge(cell);\n      };\n      return {\n        delta: delta,\n        edge: edge,\n        positions: positions\n      };\n    }\n\n    var getGridSize = function (table) {\n      var input = DetailsList.fromTable(table);\n      var warehouse = Warehouse.generate(input);\n      return warehouse.grid();\n    };\n    var TableGridSize = { getGridSize: getGridSize };\n\n    var hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n    var shallow$1 = function (old, nu) {\n      return nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++)\n          objects[i] = arguments[i];\n        if (objects.length === 0)\n          throw new Error('Can\\'t merge zero objects');\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject)\n            if (hasOwnProperty$1.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n        }\n        return ret;\n      };\n    };\n    var merge = baseMerge(shallow$1);\n\n    var cat = function (arr) {\n      var r = [];\n      var push = function (x) {\n        r.push(x);\n      };\n      for (var i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    var findMap = function (arr, f) {\n      for (var i = 0; i < arr.length; i++) {\n        var r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Option.none();\n    };\n\n    var setIfNot = function (element, property, value, ignore) {\n      if (value === ignore) {\n        remove(element, property);\n      } else {\n        set(element, property, value);\n      }\n    };\n    var render = function (table, grid) {\n      var newRows = [];\n      var newCells = [];\n      var renderSection = function (gridSection, sectionName) {\n        var section = child$2(table, sectionName).getOrThunk(function () {\n          var tb = Element.fromTag(sectionName, owner(table).dom());\n          append(table, tb);\n          return tb;\n        });\n        empty(section);\n        var rows = map(gridSection, function (row) {\n          if (row.isNew()) {\n            newRows.push(row.element());\n          }\n          var tr = row.element();\n          empty(tr);\n          each(row.cells(), function (cell) {\n            if (cell.isNew()) {\n              newCells.push(cell.element());\n            }\n            setIfNot(cell.element(), 'colspan', cell.colspan(), 1);\n            setIfNot(cell.element(), 'rowspan', cell.rowspan(), 1);\n            append(tr, cell.element());\n          });\n          return tr;\n        });\n        append$1(section, rows);\n      };\n      var removeSection = function (sectionName) {\n        child$2(table, sectionName).each(remove$2);\n      };\n      var renderOrRemoveSection = function (gridSection, sectionName) {\n        if (gridSection.length > 0) {\n          renderSection(gridSection, sectionName);\n        } else {\n          removeSection(sectionName);\n        }\n      };\n      var headSection = [];\n      var bodySection = [];\n      var footSection = [];\n      each(grid, function (row) {\n        switch (row.section()) {\n        case 'thead':\n          headSection.push(row);\n          break;\n        case 'tbody':\n          bodySection.push(row);\n          break;\n        case 'tfoot':\n          footSection.push(row);\n          break;\n        }\n      });\n      renderOrRemoveSection(headSection, 'thead');\n      renderOrRemoveSection(bodySection, 'tbody');\n      renderOrRemoveSection(footSection, 'tfoot');\n      return {\n        newRows: constant(newRows),\n        newCells: constant(newCells)\n      };\n    };\n    var copy$2 = function (grid) {\n      var rows = map(grid, function (row) {\n        var tr = shallow(row.element());\n        each(row.cells(), function (cell) {\n          var clonedCell = deep(cell.element());\n          setIfNot(clonedCell, 'colspan', cell.colspan(), 1);\n          setIfNot(clonedCell, 'rowspan', cell.rowspan(), 1);\n          append(tr, clonedCell);\n        });\n        return tr;\n      });\n      return rows;\n    };\n    var Redraw = {\n      render: render,\n      copy: copy$2\n    };\n\n    var read = function (element, attr) {\n      var value = get$1(element, attr);\n      return value === undefined || value === '' ? [] : value.split(' ');\n    };\n    var add = function (element, attr, id) {\n      var old = read(element, attr);\n      var nu = old.concat([id]);\n      set(element, attr, nu.join(' '));\n      return true;\n    };\n    var remove$3 = function (element, attr, id) {\n      var nu = filter(read(element, attr), function (v) {\n        return v !== id;\n      });\n      if (nu.length > 0) {\n        set(element, attr, nu.join(' '));\n      } else {\n        remove(element, attr);\n      }\n      return false;\n    };\n\n    var supports = function (element) {\n      return element.dom().classList !== undefined;\n    };\n    var get$7 = function (element) {\n      return read(element, 'class');\n    };\n    var add$1 = function (element, clazz) {\n      return add(element, 'class', clazz);\n    };\n    var remove$4 = function (element, clazz) {\n      return remove$3(element, 'class', clazz);\n    };\n\n    var add$2 = function (element, clazz) {\n      if (supports(element)) {\n        element.dom().classList.add(clazz);\n      } else {\n        add$1(element, clazz);\n      }\n    };\n    var cleanClass = function (element) {\n      var classList = supports(element) ? element.dom().classList : get$7(element);\n      if (classList.length === 0) {\n        remove(element, 'class');\n      }\n    };\n    var remove$5 = function (element, clazz) {\n      if (supports(element)) {\n        var classList = element.dom().classList;\n        classList.remove(clazz);\n      } else {\n        remove$4(element, clazz);\n      }\n      cleanClass(element);\n    };\n    var has$2 = function (element, clazz) {\n      return supports(element) && element.dom().classList.contains(clazz);\n    };\n\n    var repeat = function (repititions, f) {\n      var r = [];\n      for (var i = 0; i < repititions; i++) {\n        r.push(f(i));\n      }\n      return r;\n    };\n    var range = function (start, end) {\n      var r = [];\n      for (var i = start; i < end; i++) {\n        r.push(i);\n      }\n      return r;\n    };\n    var unique = function (xs, comparator) {\n      var result = [];\n      each(xs, function (x, i) {\n        if (i < xs.length - 1 && !comparator(x, xs[i + 1])) {\n          result.push(x);\n        } else if (i === xs.length - 1) {\n          result.push(x);\n        }\n      });\n      return result;\n    };\n    var deduce = function (xs, index) {\n      if (index < 0 || index >= xs.length - 1) {\n        return Option.none();\n      }\n      var current = xs[index].fold(function () {\n        var rest = reverse(xs.slice(0, index));\n        return findMap(rest, function (a, i) {\n          return a.map(function (aa) {\n            return {\n              value: aa,\n              delta: i + 1\n            };\n          });\n        });\n      }, function (c) {\n        return Option.some({\n          value: c,\n          delta: 0\n        });\n      });\n      var next = xs[index + 1].fold(function () {\n        var rest = xs.slice(index + 1);\n        return findMap(rest, function (a, i) {\n          return a.map(function (aa) {\n            return {\n              value: aa,\n              delta: i + 1\n            };\n          });\n        });\n      }, function (n) {\n        return Option.some({\n          value: n,\n          delta: 1\n        });\n      });\n      return current.bind(function (c) {\n        return next.map(function (n) {\n          var extras = n.delta + c.delta;\n          return Math.abs(n.value - c.value) / extras;\n        });\n      });\n    };\n    var Util = {\n      repeat: repeat,\n      range: range,\n      unique: unique,\n      deduce: deduce\n    };\n\n    var columns = function (warehouse) {\n      var grid = warehouse.grid();\n      var cols = Util.range(0, grid.columns());\n      var rowsArr = Util.range(0, grid.rows());\n      return map(cols, function (col) {\n        var getBlock = function () {\n          return bind(rowsArr, function (r) {\n            return Warehouse.getAt(warehouse, r, col).filter(function (detail) {\n              return detail.column() === col;\n            }).fold(constant([]), function (detail) {\n              return [detail];\n            });\n          });\n        };\n        var isSingle = function (detail) {\n          return detail.colspan() === 1;\n        };\n        var getFallback = function () {\n          return Warehouse.getAt(warehouse, 0, col);\n        };\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n    var decide = function (getBlock, isSingle, getFallback) {\n      var inBlock = getBlock();\n      var singleInBlock = find(inBlock, isSingle);\n      var detailOption = singleInBlock.orThunk(function () {\n        return Option.from(inBlock[0]).orThunk(getFallback);\n      });\n      return detailOption.map(function (detail) {\n        return detail.element();\n      });\n    };\n    var rows$1 = function (warehouse) {\n      var grid = warehouse.grid();\n      var rowsArr = Util.range(0, grid.rows());\n      var cols = Util.range(0, grid.columns());\n      return map(rowsArr, function (row) {\n        var getBlock = function () {\n          return bind(cols, function (c) {\n            return Warehouse.getAt(warehouse, row, c).filter(function (detail) {\n              return detail.row() === row;\n            }).fold(constant([]), function (detail) {\n              return [detail];\n            });\n          });\n        };\n        var isSingle = function (detail) {\n          return detail.rowspan() === 1;\n        };\n        var getFallback = function () {\n          return Warehouse.getAt(warehouse, row, 0);\n        };\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n    var Blocks = {\n      columns: columns,\n      rows: rows$1\n    };\n\n    var css = function (namespace) {\n      var dashNamespace = namespace.replace(/\\./g, '-');\n      var resolve = function (str) {\n        return dashNamespace + '-' + str;\n      };\n      return { resolve: resolve };\n    };\n\n    var styles = css('ephox-snooker');\n    var Styles = { resolve: styles.resolve };\n\n    var col = function (column, x, y, w, h) {\n      var blocker = Element.fromTag('div');\n      setAll$1(blocker, {\n        position: 'absolute',\n        left: x - w / 2 + 'px',\n        top: y + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll(blocker, {\n        'data-column': column,\n        'role': 'presentation'\n      });\n      return blocker;\n    };\n    var row$1 = function (r, x, y, w, h) {\n      var blocker = Element.fromTag('div');\n      setAll$1(blocker, {\n        position: 'absolute',\n        left: x + 'px',\n        top: y - h / 2 + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll(blocker, {\n        'data-row': r,\n        'role': 'presentation'\n      });\n      return blocker;\n    };\n    var Bar = {\n      col: col,\n      row: row$1\n    };\n\n    var resizeBar = Styles.resolve('resizer-bar');\n    var resizeRowBar = Styles.resolve('resizer-rows');\n    var resizeColBar = Styles.resolve('resizer-cols');\n    var BAR_THICKNESS = 7;\n    var clear = function (wire) {\n      var previous = descendants$1(wire.parent(), '.' + resizeBar);\n      each(previous, remove$2);\n    };\n    var drawBar = function (wire, positions, create) {\n      var origin = wire.origin();\n      each(positions, function (cpOption, i) {\n        cpOption.each(function (cp) {\n          var bar = create(origin, cp);\n          add$2(bar, resizeBar);\n          append(wire.parent(), bar);\n        });\n      });\n    };\n    var refreshCol = function (wire, colPositions, position, tableHeight) {\n      drawBar(wire, colPositions, function (origin, cp) {\n        var colBar = Bar.col(cp.col(), cp.x() - origin.left(), position.top() - origin.top(), BAR_THICKNESS, tableHeight);\n        add$2(colBar, resizeColBar);\n        return colBar;\n      });\n    };\n    var refreshRow = function (wire, rowPositions, position, tableWidth) {\n      drawBar(wire, rowPositions, function (origin, cp) {\n        var rowBar = Bar.row(cp.row(), position.left() - origin.left(), cp.y() - origin.top(), tableWidth, BAR_THICKNESS);\n        add$2(rowBar, resizeRowBar);\n        return rowBar;\n      });\n    };\n    var refreshGrid = function (wire, table, rows, cols, hdirection, vdirection) {\n      var position = absolute(table);\n      var rowPositions = rows.length > 0 ? hdirection.positions(rows, table) : [];\n      refreshRow(wire, rowPositions, position, getOuter$1(table));\n      var colPositions = cols.length > 0 ? vdirection.positions(cols, table) : [];\n      refreshCol(wire, colPositions, position, getOuter(table));\n    };\n    var refresh = function (wire, table, hdirection, vdirection) {\n      clear(wire);\n      var list = DetailsList.fromTable(table);\n      var warehouse = Warehouse.generate(list);\n      var rows = Blocks.rows(warehouse);\n      var cols = Blocks.columns(warehouse);\n      refreshGrid(wire, table, rows, cols, hdirection, vdirection);\n    };\n    var each$2 = function (wire, f) {\n      var bars = descendants$1(wire.parent(), '.' + resizeBar);\n      each(bars, f);\n    };\n    var hide = function (wire) {\n      each$2(wire, function (bar) {\n        set$1(bar, 'display', 'none');\n      });\n    };\n    var show = function (wire) {\n      each$2(wire, function (bar) {\n        set$1(bar, 'display', 'block');\n      });\n    };\n    var isRowBar = function (element) {\n      return has$2(element, resizeRowBar);\n    };\n    var isColBar = function (element) {\n      return has$2(element, resizeColBar);\n    };\n    var Bars = {\n      refresh: refresh,\n      hide: hide,\n      show: show,\n      destroy: clear,\n      isRowBar: isRowBar,\n      isColBar: isColBar\n    };\n\n    var addCell = function (gridRow, index, cell) {\n      var cells = gridRow.cells();\n      var before = cells.slice(0, index);\n      var after = cells.slice(index);\n      var newCells = before.concat([cell]).concat(after);\n      return setCells(gridRow, newCells);\n    };\n    var mutateCell = function (gridRow, index, cell) {\n      var cells = gridRow.cells();\n      cells[index] = cell;\n    };\n    var setCells = function (gridRow, cells) {\n      return Structs.rowcells(cells, gridRow.section());\n    };\n    var mapCells = function (gridRow, f) {\n      var cells = gridRow.cells();\n      var r = map(cells, f);\n      return Structs.rowcells(r, gridRow.section());\n    };\n    var getCell = function (gridRow, index) {\n      return gridRow.cells()[index];\n    };\n    var getCellElement = function (gridRow, index) {\n      return getCell(gridRow, index).element();\n    };\n    var cellLength = function (gridRow) {\n      return gridRow.cells().length;\n    };\n    var GridRow = {\n      addCell: addCell,\n      setCells: setCells,\n      mutateCell: mutateCell,\n      getCell: getCell,\n      getCellElement: getCellElement,\n      mapCells: mapCells,\n      cellLength: cellLength\n    };\n\n    var getColumn = function (grid, index) {\n      return map(grid, function (row) {\n        return GridRow.getCell(row, index);\n      });\n    };\n    var getRow = function (grid, index) {\n      return grid[index];\n    };\n    var findDiff = function (xs, comp) {\n      if (xs.length === 0) {\n        return 0;\n      }\n      var first = xs[0];\n      var index = findIndex(xs, function (x) {\n        return !comp(first.element(), x.element());\n      });\n      return index.fold(function () {\n        return xs.length;\n      }, function (ind) {\n        return ind;\n      });\n    };\n    var subgrid = function (grid, row, column, comparator) {\n      var restOfRow = getRow(grid, row).cells().slice(column);\n      var endColIndex = findDiff(restOfRow, comparator);\n      var restOfColumn = getColumn(grid, column).slice(row);\n      var endRowIndex = findDiff(restOfColumn, comparator);\n      return {\n        colspan: constant(endColIndex),\n        rowspan: constant(endRowIndex)\n      };\n    };\n    var TableGrid = { subgrid: subgrid };\n\n    var toDetails = function (grid, comparator) {\n      var seen = map(grid, function (row, ri) {\n        return map(row.cells(), function (col, ci) {\n          return false;\n        });\n      });\n      var updateSeen = function (ri, ci, rowspan, colspan) {\n        for (var r = ri; r < ri + rowspan; r++) {\n          for (var c = ci; c < ci + colspan; c++) {\n            seen[r][c] = true;\n          }\n        }\n      };\n      return map(grid, function (row, ri) {\n        var details = bind(row.cells(), function (cell, ci) {\n          if (seen[ri][ci] === false) {\n            var result = TableGrid.subgrid(grid, ri, ci, comparator);\n            updateSeen(ri, ci, result.rowspan(), result.colspan());\n            return [Structs.detailnew(cell.element(), result.rowspan(), result.colspan(), cell.isNew())];\n          } else {\n            return [];\n          }\n        });\n        return Structs.rowdetails(details, row.section());\n      });\n    };\n    var toGrid = function (warehouse, generators, isNew) {\n      var grid = [];\n      for (var i = 0; i < warehouse.grid().rows(); i++) {\n        var rowCells = [];\n        for (var j = 0; j < warehouse.grid().columns(); j++) {\n          var element = Warehouse.getAt(warehouse, i, j).map(function (item) {\n            return Structs.elementnew(item.element(), isNew);\n          }).getOrThunk(function () {\n            return Structs.elementnew(generators.gap(), true);\n          });\n          rowCells.push(element);\n        }\n        var row = Structs.rowcells(rowCells, warehouse.all()[i].section());\n        grid.push(row);\n      }\n      return grid;\n    };\n    var Transitions = {\n      toDetails: toDetails,\n      toGrid: toGrid\n    };\n\n    var fromWarehouse = function (warehouse, generators) {\n      return Transitions.toGrid(warehouse, generators, false);\n    };\n    var deriveRows = function (rendered, generators) {\n      var findRow = function (details) {\n        var rowOfCells = findMap(details, function (detail) {\n          return parent(detail.element()).map(function (row) {\n            var isNew = parent(row).isNone();\n            return Structs.elementnew(row, isNew);\n          });\n        });\n        return rowOfCells.getOrThunk(function () {\n          return Structs.elementnew(generators.row(), true);\n        });\n      };\n      return map(rendered, function (details) {\n        var row = findRow(details.details());\n        return Structs.rowdatanew(row.element(), details.details(), details.section(), row.isNew());\n      });\n    };\n    var toDetailList = function (grid, generators) {\n      var rendered = Transitions.toDetails(grid, eq);\n      return deriveRows(rendered, generators);\n    };\n    var findInWarehouse = function (warehouse, element) {\n      var all = flatten(map(warehouse.all(), function (r) {\n        return r.cells();\n      }));\n      return find(all, function (e) {\n        return eq(element, e.element());\n      });\n    };\n    var run = function (operation, extract, adjustment, postAction, genWrappers) {\n      return function (wire, table, target, generators, direction) {\n        var input = DetailsList.fromTable(table);\n        var warehouse = Warehouse.generate(input);\n        var output = extract(warehouse, target).map(function (info) {\n          var model = fromWarehouse(warehouse, generators);\n          var result = operation(model, info, eq, genWrappers(generators));\n          var grid = toDetailList(result.grid(), generators);\n          return {\n            grid: constant(grid),\n            cursor: result.cursor\n          };\n        });\n        return output.fold(function () {\n          return Option.none();\n        }, function (out) {\n          var newElements = Redraw.render(table, out.grid());\n          adjustment(table, out.grid(), direction);\n          postAction(table);\n          Bars.refresh(wire, table, BarPositions.height, direction);\n          return Option.some({\n            cursor: out.cursor,\n            newRows: newElements.newRows,\n            newCells: newElements.newCells\n          });\n        });\n      };\n    };\n    var onCell = function (warehouse, target) {\n      return TableLookup.cell(target.element()).bind(function (cell) {\n        return findInWarehouse(warehouse, cell);\n      });\n    };\n    var onPaste = function (warehouse, target) {\n      return TableLookup.cell(target.element()).bind(function (cell) {\n        return findInWarehouse(warehouse, cell).map(function (details) {\n          return merge(details, {\n            generators: target.generators,\n            clipboard: target.clipboard\n          });\n        });\n      });\n    };\n    var onPasteRows = function (warehouse, target) {\n      var details = map(target.selection(), function (cell) {\n        return TableLookup.cell(cell).bind(function (lc) {\n          return findInWarehouse(warehouse, lc);\n        });\n      });\n      var cells = cat(details);\n      return cells.length > 0 ? Option.some(merge({ cells: cells }, {\n        generators: target.generators,\n        clipboard: target.clipboard\n      })) : Option.none();\n    };\n    var onMergable = function (warehouse, target) {\n      return target.mergable();\n    };\n    var onUnmergable = function (warehouse, target) {\n      return target.unmergable();\n    };\n    var onCells = function (warehouse, target) {\n      var details = map(target.selection(), function (cell) {\n        return TableLookup.cell(cell).bind(function (lc) {\n          return findInWarehouse(warehouse, lc);\n        });\n      });\n      var cells = cat(details);\n      return cells.length > 0 ? Option.some(cells) : Option.none();\n    };\n    var RunOperation = {\n      run: run,\n      toDetailList: toDetailList,\n      onCell: onCell,\n      onCells: onCells,\n      onPaste: onPaste,\n      onPasteRows: onPasteRows,\n      onMergable: onMergable,\n      onUnmergable: onUnmergable\n    };\n\n    var value = function (o) {\n      var is = function (v) {\n        return o === v;\n      };\n      var or = function (opt) {\n        return value(o);\n      };\n      var orThunk = function (f) {\n        return value(o);\n      };\n      var map = function (f) {\n        return value(f(o));\n      };\n      var mapError = function (f) {\n        return value(o);\n      };\n      var each = function (f) {\n        f(o);\n      };\n      var bind = function (f) {\n        return f(o);\n      };\n      var fold = function (_, onValue) {\n        return onValue(o);\n      };\n      var exists = function (f) {\n        return f(o);\n      };\n      var forall = function (f) {\n        return f(o);\n      };\n      var toOption = function () {\n        return Option.some(o);\n      };\n      return {\n        is: is,\n        isValue: always,\n        isError: never,\n        getOr: constant(o),\n        getOrThunk: constant(o),\n        getOrDie: constant(o),\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: each,\n        bind: bind,\n        exists: exists,\n        forall: forall,\n        toOption: toOption\n      };\n    };\n    var error = function (message) {\n      var getOrThunk = function (f) {\n        return f();\n      };\n      var getOrDie = function () {\n        return die(String(message))();\n      };\n      var or = function (opt) {\n        return opt;\n      };\n      var orThunk = function (f) {\n        return f();\n      };\n      var map = function (f) {\n        return error(message);\n      };\n      var mapError = function (f) {\n        return error(f(message));\n      };\n      var bind = function (f) {\n        return error(message);\n      };\n      var fold = function (onError, _) {\n        return onError(message);\n      };\n      return {\n        is: never,\n        isValue: never,\n        isError: always,\n        getOr: identity,\n        getOrThunk: getOrThunk,\n        getOrDie: getOrDie,\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: noop,\n        bind: bind,\n        exists: never,\n        forall: always,\n        toOption: Option.none\n      };\n    };\n    var Result = {\n      value: value,\n      error: error\n    };\n\n    var measure = function (startAddress, gridA, gridB) {\n      if (startAddress.row() >= gridA.length || startAddress.column() > GridRow.cellLength(gridA[0])) {\n        return Result.error('invalid start address out of table bounds, row: ' + startAddress.row() + ', column: ' + startAddress.column());\n      }\n      var rowRemainder = gridA.slice(startAddress.row());\n      var colRemainder = rowRemainder[0].cells().slice(startAddress.column());\n      var colRequired = GridRow.cellLength(gridB[0]);\n      var rowRequired = gridB.length;\n      return Result.value({\n        rowDelta: constant(rowRemainder.length - rowRequired),\n        colDelta: constant(colRemainder.length - colRequired)\n      });\n    };\n    var measureWidth = function (gridA, gridB) {\n      var colLengthA = GridRow.cellLength(gridA[0]);\n      var colLengthB = GridRow.cellLength(gridB[0]);\n      return {\n        rowDelta: constant(0),\n        colDelta: constant(colLengthA - colLengthB)\n      };\n    };\n    var fill = function (cells, generator) {\n      return map(cells, function () {\n        return Structs.elementnew(generator.cell(), true);\n      });\n    };\n    var rowFill = function (grid, amount, generator) {\n      return grid.concat(Util.repeat(amount, function (_row) {\n        return GridRow.setCells(grid[grid.length - 1], fill(grid[grid.length - 1].cells(), generator));\n      }));\n    };\n    var colFill = function (grid, amount, generator) {\n      return map(grid, function (row) {\n        return GridRow.setCells(row, row.cells().concat(fill(Util.range(0, amount), generator)));\n      });\n    };\n    var tailor = function (gridA, delta, generator) {\n      var fillCols = delta.colDelta() < 0 ? colFill : identity;\n      var fillRows = delta.rowDelta() < 0 ? rowFill : identity;\n      var modifiedCols = fillCols(gridA, Math.abs(delta.colDelta()), generator);\n      var tailoredGrid = fillRows(modifiedCols, Math.abs(delta.rowDelta()), generator);\n      return tailoredGrid;\n    };\n    var Fitment = {\n      measure: measure,\n      measureWidth: measureWidth,\n      tailor: tailor\n    };\n\n    var merge$1 = function (grid, bounds, comparator, substitution) {\n      if (grid.length === 0) {\n        return grid;\n      }\n      for (var i = bounds.startRow(); i <= bounds.finishRow(); i++) {\n        for (var j = bounds.startCol(); j <= bounds.finishCol(); j++) {\n          GridRow.mutateCell(grid[i], j, Structs.elementnew(substitution(), false));\n        }\n      }\n      return grid;\n    };\n    var unmerge = function (grid, target, comparator, substitution) {\n      var first = true;\n      for (var i = 0; i < grid.length; i++) {\n        for (var j = 0; j < GridRow.cellLength(grid[0]); j++) {\n          var current = GridRow.getCellElement(grid[i], j);\n          var isToReplace = comparator(current, target);\n          if (isToReplace === true && first === false) {\n            GridRow.mutateCell(grid[i], j, Structs.elementnew(substitution(), true));\n          } else if (isToReplace === true) {\n            first = false;\n          }\n        }\n      }\n      return grid;\n    };\n    var uniqueCells = function (row, comparator) {\n      return foldl(row, function (rest, cell) {\n        return exists(rest, function (currentCell) {\n          return comparator(currentCell.element(), cell.element());\n        }) ? rest : rest.concat([cell]);\n      }, []);\n    };\n    var splitRows = function (grid, index, comparator, substitution) {\n      if (index > 0 && index < grid.length) {\n        var rowPrevCells = grid[index - 1].cells();\n        var cells = uniqueCells(rowPrevCells, comparator);\n        each(cells, function (cell) {\n          var replacement = Option.none();\n          var _loop_1 = function (i) {\n            var _loop_2 = function (j) {\n              var current = grid[i].cells()[j];\n              var isToReplace = comparator(current.element(), cell.element());\n              if (isToReplace) {\n                if (replacement.isNone()) {\n                  replacement = Option.some(substitution());\n                }\n                replacement.each(function (sub) {\n                  GridRow.mutateCell(grid[i], j, Structs.elementnew(sub, true));\n                });\n              }\n            };\n            for (var j = 0; j < GridRow.cellLength(grid[0]); j++) {\n              _loop_2(j);\n            }\n          };\n          for (var i = index; i < grid.length; i++) {\n            _loop_1(i);\n          }\n        });\n      }\n      return grid;\n    };\n    var MergingOperations = {\n      merge: merge$1,\n      unmerge: unmerge,\n      splitRows: splitRows\n    };\n\n    var isSpanning = function (grid, row, col, comparator) {\n      var candidate = GridRow.getCell(grid[row], col);\n      var matching = curry(comparator, candidate.element());\n      var currentRow = grid[row];\n      return grid.length > 1 && GridRow.cellLength(currentRow) > 1 && (col > 0 && matching(GridRow.getCellElement(currentRow, col - 1)) || col < currentRow.length - 1 && matching(GridRow.getCellElement(currentRow, col + 1)) || row > 0 && matching(GridRow.getCellElement(grid[row - 1], col)) || row < grid.length - 1 && matching(GridRow.getCellElement(grid[row + 1], col)));\n    };\n    var mergeTables = function (startAddress, gridA, gridB, generator, comparator) {\n      var startRow = startAddress.row();\n      var startCol = startAddress.column();\n      var mergeHeight = gridB.length;\n      var mergeWidth = GridRow.cellLength(gridB[0]);\n      var endRow = startRow + mergeHeight;\n      var endCol = startCol + mergeWidth;\n      for (var r = startRow; r < endRow; r++) {\n        for (var c = startCol; c < endCol; c++) {\n          if (isSpanning(gridA, r, c, comparator)) {\n            MergingOperations.unmerge(gridA, GridRow.getCellElement(gridA[r], c), comparator, generator.cell);\n          }\n          var newCell = GridRow.getCellElement(gridB[r - startRow], c - startCol);\n          var replacement = generator.replace(newCell);\n          GridRow.mutateCell(gridA[r], c, Structs.elementnew(replacement, true));\n        }\n      }\n      return gridA;\n    };\n    var merge$2 = function (startAddress, gridA, gridB, generator, comparator) {\n      var result = Fitment.measure(startAddress, gridA, gridB);\n      return result.map(function (delta) {\n        var fittedGrid = Fitment.tailor(gridA, delta, generator);\n        return mergeTables(startAddress, fittedGrid, gridB, generator, comparator);\n      });\n    };\n    var insert = function (index, gridA, gridB, generator, comparator) {\n      MergingOperations.splitRows(gridA, index, comparator, generator.cell);\n      var delta = Fitment.measureWidth(gridB, gridA);\n      var fittedNewGrid = Fitment.tailor(gridB, delta, generator);\n      var secondDelta = Fitment.measureWidth(gridA, fittedNewGrid);\n      var fittedOldGrid = Fitment.tailor(gridA, secondDelta, generator);\n      return fittedOldGrid.slice(0, index).concat(fittedNewGrid).concat(fittedOldGrid.slice(index, fittedOldGrid.length));\n    };\n    var TableMerge = {\n      merge: merge$2,\n      insert: insert\n    };\n\n    var insertRowAt = function (grid, index, example, comparator, substitution) {\n      var before = grid.slice(0, index);\n      var after = grid.slice(index);\n      var between = GridRow.mapCells(grid[example], function (ex, c) {\n        var withinSpan = index > 0 && index < grid.length && comparator(GridRow.getCellElement(grid[index - 1], c), GridRow.getCellElement(grid[index], c));\n        var ret = withinSpan ? GridRow.getCell(grid[index], c) : Structs.elementnew(substitution(ex.element(), comparator), true);\n        return ret;\n      });\n      return before.concat([between]).concat(after);\n    };\n    var insertColumnAt = function (grid, index, example, comparator, substitution) {\n      return map(grid, function (row) {\n        var withinSpan = index > 0 && index < GridRow.cellLength(row) && comparator(GridRow.getCellElement(row, index - 1), GridRow.getCellElement(row, index));\n        var sub = withinSpan ? GridRow.getCell(row, index) : Structs.elementnew(substitution(GridRow.getCellElement(row, example), comparator), true);\n        return GridRow.addCell(row, index, sub);\n      });\n    };\n    var splitCellIntoColumns = function (grid, exampleRow, exampleCol, comparator, substitution) {\n      var index = exampleCol + 1;\n      return map(grid, function (row, i) {\n        var isTargetCell = i === exampleRow;\n        var sub = isTargetCell ? Structs.elementnew(substitution(GridRow.getCellElement(row, exampleCol), comparator), true) : GridRow.getCell(row, exampleCol);\n        return GridRow.addCell(row, index, sub);\n      });\n    };\n    var splitCellIntoRows = function (grid, exampleRow, exampleCol, comparator, substitution) {\n      var index = exampleRow + 1;\n      var before = grid.slice(0, index);\n      var after = grid.slice(index);\n      var between = GridRow.mapCells(grid[exampleRow], function (ex, i) {\n        var isTargetCell = i === exampleCol;\n        return isTargetCell ? Structs.elementnew(substitution(ex.element(), comparator), true) : ex;\n      });\n      return before.concat([between]).concat(after);\n    };\n    var deleteColumnsAt = function (grid, start, finish) {\n      var rows = map(grid, function (row) {\n        var cells = row.cells().slice(0, start).concat(row.cells().slice(finish + 1));\n        return Structs.rowcells(cells, row.section());\n      });\n      return filter(rows, function (row) {\n        return row.cells().length > 0;\n      });\n    };\n    var deleteRowsAt = function (grid, start, finish) {\n      return grid.slice(0, start).concat(grid.slice(finish + 1));\n    };\n    var ModificationOperations = {\n      insertRowAt: insertRowAt,\n      insertColumnAt: insertColumnAt,\n      splitCellIntoColumns: splitCellIntoColumns,\n      splitCellIntoRows: splitCellIntoRows,\n      deleteRowsAt: deleteRowsAt,\n      deleteColumnsAt: deleteColumnsAt\n    };\n\n    var replaceIn = function (grid, targets, comparator, substitution) {\n      var isTarget = function (cell) {\n        return exists(targets, function (target) {\n          return comparator(cell.element(), target.element());\n        });\n      };\n      return map(grid, function (row) {\n        return GridRow.mapCells(row, function (cell) {\n          return isTarget(cell) ? Structs.elementnew(substitution(cell.element(), comparator), true) : cell;\n        });\n      });\n    };\n    var notStartRow = function (grid, rowIndex, colIndex, comparator) {\n      return GridRow.getCellElement(grid[rowIndex], colIndex) !== undefined && (rowIndex > 0 && comparator(GridRow.getCellElement(grid[rowIndex - 1], colIndex), GridRow.getCellElement(grid[rowIndex], colIndex)));\n    };\n    var notStartColumn = function (row, index, comparator) {\n      return index > 0 && comparator(GridRow.getCellElement(row, index - 1), GridRow.getCellElement(row, index));\n    };\n    var replaceColumn = function (grid, index, comparator, substitution) {\n      var targets = bind(grid, function (row, i) {\n        var alreadyAdded = notStartRow(grid, i, index, comparator) || notStartColumn(row, index, comparator);\n        return alreadyAdded ? [] : [GridRow.getCell(row, index)];\n      });\n      return replaceIn(grid, targets, comparator, substitution);\n    };\n    var replaceRow = function (grid, index, comparator, substitution) {\n      var targetRow = grid[index];\n      var targets = bind(targetRow.cells(), function (item, i) {\n        var alreadyAdded = notStartRow(grid, index, i, comparator) || notStartColumn(targetRow, i, comparator);\n        return alreadyAdded ? [] : [item];\n      });\n      return replaceIn(grid, targets, comparator, substitution);\n    };\n    var TransformOperations = {\n      replaceColumn: replaceColumn,\n      replaceRow: replaceRow\n    };\n\n    var none$1 = function () {\n      return folder(function (n, o, l, m, r) {\n        return n();\n      });\n    };\n    var only = function (index) {\n      return folder(function (n, o, l, m, r) {\n        return o(index);\n      });\n    };\n    var left = function (index, next) {\n      return folder(function (n, o, l, m, r) {\n        return l(index, next);\n      });\n    };\n    var middle = function (prev, index, next) {\n      return folder(function (n, o, l, m, r) {\n        return m(prev, index, next);\n      });\n    };\n    var right = function (prev, index) {\n      return folder(function (n, o, l, m, r) {\n        return r(prev, index);\n      });\n    };\n    var folder = function (fold) {\n      return { fold: fold };\n    };\n    var ColumnContext = {\n      none: none$1,\n      only: only,\n      left: left,\n      middle: middle,\n      right: right\n    };\n\n    var neighbours$1 = function (input, index) {\n      if (input.length === 0) {\n        return ColumnContext.none();\n      }\n      if (input.length === 1) {\n        return ColumnContext.only(0);\n      }\n      if (index === 0) {\n        return ColumnContext.left(0, 1);\n      }\n      if (index === input.length - 1) {\n        return ColumnContext.right(index - 1, index);\n      }\n      if (index > 0 && index < input.length - 1) {\n        return ColumnContext.middle(index - 1, index, index + 1);\n      }\n      return ColumnContext.none();\n    };\n    var determine = function (input, column, step, tableSize) {\n      var result = input.slice(0);\n      var context = neighbours$1(input, column);\n      var zero = function (array) {\n        return map(array, constant(0));\n      };\n      var onNone = constant(zero(result));\n      var onOnly = function (index) {\n        return tableSize.singleColumnWidth(result[index], step);\n      };\n      var onChange = function (index, next) {\n        if (step >= 0) {\n          var newNext = Math.max(tableSize.minCellWidth(), result[next] - step);\n          return zero(result.slice(0, index)).concat([\n            step,\n            newNext - result[next]\n          ]).concat(zero(result.slice(next + 1)));\n        } else {\n          var newThis = Math.max(tableSize.minCellWidth(), result[index] + step);\n          var diffx = result[index] - newThis;\n          return zero(result.slice(0, index)).concat([\n            newThis - result[index],\n            diffx\n          ]).concat(zero(result.slice(next + 1)));\n        }\n      };\n      var onLeft = onChange;\n      var onMiddle = function (prev, index, next) {\n        return onChange(index, next);\n      };\n      var onRight = function (prev, index) {\n        if (step >= 0) {\n          return zero(result.slice(0, index)).concat([step]);\n        } else {\n          var size = Math.max(tableSize.minCellWidth(), result[index] + step);\n          return zero(result.slice(0, index)).concat([size - result[index]]);\n        }\n      };\n      return context.fold(onNone, onOnly, onLeft, onMiddle, onRight);\n    };\n    var Deltas = { determine: determine };\n\n    var getSpan$1 = function (cell, type) {\n      return has$1(cell, type) && parseInt(get$1(cell, type), 10) > 1;\n    };\n    var hasColspan = function (cell) {\n      return getSpan$1(cell, 'colspan');\n    };\n    var hasRowspan = function (cell) {\n      return getSpan$1(cell, 'rowspan');\n    };\n    var getInt = function (element, property) {\n      return parseInt(get$2(element, property), 10);\n    };\n    var CellUtils = {\n      hasColspan: hasColspan,\n      hasRowspan: hasRowspan,\n      minWidth: constant(10),\n      minHeight: constant(10),\n      getInt: getInt\n    };\n\n    var getRaw$1 = function (cell, property, getter) {\n      return getRaw(cell, property).fold(function () {\n        return getter(cell) + 'px';\n      }, function (raw) {\n        return raw;\n      });\n    };\n    var getRawW = function (cell) {\n      return getRaw$1(cell, 'width', Sizes.getPixelWidth);\n    };\n    var getRawH = function (cell) {\n      return getRaw$1(cell, 'height', Sizes.getHeight);\n    };\n    var getWidthFrom = function (warehouse, direction, getWidth, fallback, tableSize) {\n      var columns = Blocks.columns(warehouse);\n      var backups = map(columns, function (cellOption) {\n        return cellOption.map(direction.edge);\n      });\n      return map(columns, function (cellOption, c) {\n        var columnCell = cellOption.filter(not(CellUtils.hasColspan));\n        return columnCell.fold(function () {\n          var deduced = Util.deduce(backups, c);\n          return fallback(deduced);\n        }, function (cell) {\n          return getWidth(cell, tableSize);\n        });\n      });\n    };\n    var getDeduced = function (deduced) {\n      return deduced.map(function (d) {\n        return d + 'px';\n      }).getOr('');\n    };\n    var getRawWidths = function (warehouse, direction) {\n      return getWidthFrom(warehouse, direction, getRawW, getDeduced);\n    };\n    var getPercentageWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, Sizes.getPercentageWidth, function (deduced) {\n        return deduced.fold(function () {\n          return tableSize.minCellWidth();\n        }, function (cellWidth) {\n          return cellWidth / tableSize.pixelWidth() * 100;\n        });\n      }, tableSize);\n    };\n    var getPixelWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, Sizes.getPixelWidth, function (deduced) {\n        return deduced.getOrThunk(tableSize.minCellWidth);\n      }, tableSize);\n    };\n    var getHeightFrom = function (warehouse, direction, getHeight, fallback) {\n      var rows = Blocks.rows(warehouse);\n      var backups = map(rows, function (cellOption) {\n        return cellOption.map(direction.edge);\n      });\n      return map(rows, function (cellOption, c) {\n        var rowCell = cellOption.filter(not(CellUtils.hasRowspan));\n        return rowCell.fold(function () {\n          var deduced = Util.deduce(backups, c);\n          return fallback(deduced);\n        }, function (cell) {\n          return getHeight(cell);\n        });\n      });\n    };\n    var getPixelHeights = function (warehouse, direction) {\n      return getHeightFrom(warehouse, direction, Sizes.getHeight, function (deduced) {\n        return deduced.getOrThunk(CellUtils.minHeight);\n      });\n    };\n    var getRawHeights = function (warehouse, direction) {\n      return getHeightFrom(warehouse, direction, getRawH, getDeduced);\n    };\n    var ColumnSizes = {\n      getRawWidths: getRawWidths,\n      getPixelWidths: getPixelWidths,\n      getPercentageWidths: getPercentageWidths,\n      getPixelHeights: getPixelHeights,\n      getRawHeights: getRawHeights\n    };\n\n    var total = function (start, end, measures) {\n      var r = 0;\n      for (var i = start; i < end; i++) {\n        r += measures[i] !== undefined ? measures[i] : 0;\n      }\n      return r;\n    };\n    var recalculateWidth = function (warehouse, widths) {\n      var all = Warehouse.justCells(warehouse);\n      return map(all, function (cell) {\n        var width = total(cell.column(), cell.column() + cell.colspan(), widths);\n        return {\n          element: cell.element,\n          width: constant(width),\n          colspan: cell.colspan\n        };\n      });\n    };\n    var recalculateHeight = function (warehouse, heights) {\n      var all = Warehouse.justCells(warehouse);\n      return map(all, function (cell) {\n        var height = total(cell.row(), cell.row() + cell.rowspan(), heights);\n        return {\n          element: cell.element,\n          height: constant(height),\n          rowspan: cell.rowspan\n        };\n      });\n    };\n    var matchRowHeight = function (warehouse, heights) {\n      return map(warehouse.all(), function (row, i) {\n        return {\n          element: row.element,\n          height: constant(heights[i])\n        };\n      });\n    };\n    var Recalculations = {\n      recalculateWidth: recalculateWidth,\n      recalculateHeight: recalculateHeight,\n      matchRowHeight: matchRowHeight\n    };\n\n    var percentageSize = function (width, element) {\n      var floatWidth = parseFloat(width);\n      var pixelWidth = get$5(element);\n      var getCellDelta = function (delta) {\n        return delta / pixelWidth * 100;\n      };\n      var singleColumnWidth = function (w, _delta) {\n        return [100 - w];\n      };\n      var minCellWidth = function () {\n        return CellUtils.minWidth() / pixelWidth * 100;\n      };\n      var setTableWidth = function (table, _newWidths, delta) {\n        var total = floatWidth + delta;\n        Sizes.setPercentageWidth(table, total);\n      };\n      return {\n        width: constant(floatWidth),\n        pixelWidth: constant(pixelWidth),\n        getWidths: ColumnSizes.getPercentageWidths,\n        getCellDelta: getCellDelta,\n        singleColumnWidth: singleColumnWidth,\n        minCellWidth: minCellWidth,\n        setElementWidth: Sizes.setPercentageWidth,\n        setTableWidth: setTableWidth\n      };\n    };\n    var pixelSize = function (width) {\n      var intWidth = parseInt(width, 10);\n      var getCellDelta = identity;\n      var singleColumnWidth = function (w, delta) {\n        var newNext = Math.max(CellUtils.minWidth(), w + delta);\n        return [newNext - w];\n      };\n      var setTableWidth = function (table, newWidths, _delta) {\n        var total = foldr(newWidths, function (b, a) {\n          return b + a;\n        }, 0);\n        Sizes.setPixelWidth(table, total);\n      };\n      return {\n        width: constant(intWidth),\n        pixelWidth: constant(intWidth),\n        getWidths: ColumnSizes.getPixelWidths,\n        getCellDelta: getCellDelta,\n        singleColumnWidth: singleColumnWidth,\n        minCellWidth: CellUtils.minWidth,\n        setElementWidth: Sizes.setPixelWidth,\n        setTableWidth: setTableWidth\n      };\n    };\n    var chooseSize = function (element, width) {\n      if (Sizes.percentageBasedSizeRegex().test(width)) {\n        var percentMatch = Sizes.percentageBasedSizeRegex().exec(width);\n        return percentageSize(percentMatch[1], element);\n      } else if (Sizes.pixelBasedSizeRegex().test(width)) {\n        var pixelMatch = Sizes.pixelBasedSizeRegex().exec(width);\n        return pixelSize(pixelMatch[1]);\n      } else {\n        var fallbackWidth = get$5(element);\n        return pixelSize(fallbackWidth);\n      }\n    };\n    var getTableSize = function (element) {\n      var width = Sizes.getRawWidth(element);\n      return width.fold(function () {\n        var fallbackWidth = get$5(element);\n        return pixelSize(fallbackWidth);\n      }, function (w) {\n        return chooseSize(element, w);\n      });\n    };\n    var TableSize = { getTableSize: getTableSize };\n\n    var getWarehouse$1 = function (list) {\n      return Warehouse.generate(list);\n    };\n    var sumUp = function (newSize) {\n      return foldr(newSize, function (b, a) {\n        return b + a;\n      }, 0);\n    };\n    var getTableWarehouse = function (table) {\n      var list = DetailsList.fromTable(table);\n      return getWarehouse$1(list);\n    };\n    var adjustWidth = function (table, delta, index, direction) {\n      var tableSize = TableSize.getTableSize(table);\n      var step = tableSize.getCellDelta(delta);\n      var warehouse = getTableWarehouse(table);\n      var widths = tableSize.getWidths(warehouse, direction, tableSize);\n      var deltas = Deltas.determine(widths, index, step, tableSize);\n      var newWidths = map(deltas, function (dx, i) {\n        return dx + widths[i];\n      });\n      var newSizes = Recalculations.recalculateWidth(warehouse, newWidths);\n      each(newSizes, function (cell) {\n        tableSize.setElementWidth(cell.element(), cell.width());\n      });\n      if (index === warehouse.grid().columns() - 1) {\n        tableSize.setTableWidth(table, newWidths, step);\n      }\n    };\n    var adjustHeight = function (table, delta, index, direction) {\n      var warehouse = getTableWarehouse(table);\n      var heights = ColumnSizes.getPixelHeights(warehouse, direction);\n      var newHeights = map(heights, function (dy, i) {\n        return index === i ? Math.max(delta + dy, CellUtils.minHeight()) : dy;\n      });\n      var newCellSizes = Recalculations.recalculateHeight(warehouse, newHeights);\n      var newRowSizes = Recalculations.matchRowHeight(warehouse, newHeights);\n      each(newRowSizes, function (row) {\n        Sizes.setHeight(row.element(), row.height());\n      });\n      each(newCellSizes, function (cell) {\n        Sizes.setHeight(cell.element(), cell.height());\n      });\n      var total = sumUp(newHeights);\n      Sizes.setHeight(table, total);\n    };\n    var adjustWidthTo = function (table, list, direction) {\n      var tableSize = TableSize.getTableSize(table);\n      var warehouse = getWarehouse$1(list);\n      var widths = tableSize.getWidths(warehouse, direction, tableSize);\n      var newSizes = Recalculations.recalculateWidth(warehouse, widths);\n      each(newSizes, function (cell) {\n        tableSize.setElementWidth(cell.element(), cell.width());\n      });\n      var total = foldr(widths, function (b, a) {\n        return a + b;\n      }, 0);\n      if (newSizes.length > 0) {\n        tableSize.setTableWidth(table, total);\n      }\n    };\n    var Adjustments = {\n      adjustWidth: adjustWidth,\n      adjustHeight: adjustHeight,\n      adjustWidthTo: adjustWidthTo\n    };\n\n    var base = function (handleUnsupported, required) {\n      return baseWith(handleUnsupported, required, {\n        validate: isFunction,\n        label: 'function'\n      });\n    };\n    var baseWith = function (handleUnsupported, required, pred) {\n      if (required.length === 0)\n        throw new Error('You must specify at least one required field.');\n      validateStrArr('required', required);\n      checkDupes(required);\n      return function (obj) {\n        var keys$1 = keys(obj);\n        var allReqd = forall(required, function (req) {\n          return contains(keys$1, req);\n        });\n        if (!allReqd)\n          reqMessage(required, keys$1);\n        handleUnsupported(required, keys$1);\n        var invalidKeys = filter(required, function (key) {\n          return !pred.validate(obj[key], key);\n        });\n        if (invalidKeys.length > 0)\n          invalidTypeMessage(invalidKeys, pred.label);\n        return obj;\n      };\n    };\n    var handleExact = function (required, keys) {\n      var unsupported = filter(keys, function (key) {\n        return !contains(required, key);\n      });\n      if (unsupported.length > 0)\n        unsuppMessage(unsupported);\n    };\n    var exactly = function (required) {\n      return base(handleExact, required);\n    };\n\n    var elementToData = function (element) {\n      var colspan = has$1(element, 'colspan') ? parseInt(get$1(element, 'colspan'), 10) : 1;\n      var rowspan = has$1(element, 'rowspan') ? parseInt(get$1(element, 'rowspan'), 10) : 1;\n      return {\n        element: constant(element),\n        colspan: constant(colspan),\n        rowspan: constant(rowspan)\n      };\n    };\n    var modification = function (generators, _toData) {\n      contract(generators);\n      var position = Cell(Option.none());\n      var toData = _toData !== undefined ? _toData : elementToData;\n      var nu = function (data) {\n        return generators.cell(data);\n      };\n      var nuFrom = function (element) {\n        var data = toData(element);\n        return nu(data);\n      };\n      var add = function (element) {\n        var replacement = nuFrom(element);\n        if (position.get().isNone()) {\n          position.set(Option.some(replacement));\n        }\n        recent = Option.some({\n          item: element,\n          replacement: replacement\n        });\n        return replacement;\n      };\n      var recent = Option.none();\n      var getOrInit = function (element, comparator) {\n        return recent.fold(function () {\n          return add(element);\n        }, function (p) {\n          return comparator(element, p.item) ? p.replacement : add(element);\n        });\n      };\n      return {\n        getOrInit: getOrInit,\n        cursor: position.get\n      };\n    };\n    var transform = function (scope, tag) {\n      return function (generators) {\n        var position = Cell(Option.none());\n        contract(generators);\n        var list = [];\n        var find$1 = function (element, comparator) {\n          return find(list, function (x) {\n            return comparator(x.item, element);\n          });\n        };\n        var makeNew = function (element) {\n          var cell = generators.replace(element, tag, { scope: scope });\n          list.push({\n            item: element,\n            sub: cell\n          });\n          if (position.get().isNone()) {\n            position.set(Option.some(cell));\n          }\n          return cell;\n        };\n        var replaceOrInit = function (element, comparator) {\n          return find$1(element, comparator).fold(function () {\n            return makeNew(element);\n          }, function (p) {\n            return comparator(element, p.item) ? p.sub : makeNew(element);\n          });\n        };\n        return {\n          replaceOrInit: replaceOrInit,\n          cursor: position.get\n        };\n      };\n    };\n    var merging = function (generators) {\n      contract(generators);\n      var position = Cell(Option.none());\n      var combine = function (cell) {\n        if (position.get().isNone()) {\n          position.set(Option.some(cell));\n        }\n        return function () {\n          var raw = generators.cell({\n            element: constant(cell),\n            colspan: constant(1),\n            rowspan: constant(1)\n          });\n          remove$1(raw, 'width');\n          remove$1(cell, 'width');\n          return raw;\n        };\n      };\n      return {\n        combine: combine,\n        cursor: position.get\n      };\n    };\n    var contract = exactly([\n      'cell',\n      'row',\n      'replace',\n      'gap'\n    ]);\n    var Generators = {\n      modification: modification,\n      transform: transform,\n      merging: merging\n    };\n\n    var blockList = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'table',\n      'thead',\n      'tfoot',\n      'tbody',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n    var isList = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'ol',\n        'ul'\n      ], tagName);\n    };\n    var isBlock = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains(blockList, tagName);\n    };\n    var isFormatting = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'address',\n        'pre',\n        'p',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n      ], tagName);\n    };\n    var isHeading = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n      ], tagName);\n    };\n    var isContainer = function (universe, item) {\n      return contains([\n        'div',\n        'li',\n        'td',\n        'th',\n        'blockquote',\n        'body',\n        'caption'\n      ], universe.property().name(item));\n    };\n    var isEmptyTag = function (universe, item) {\n      return contains([\n        'br',\n        'img',\n        'hr',\n        'input'\n      ], universe.property().name(item));\n    };\n    var isFrame = function (universe, item) {\n      return universe.property().name(item) === 'iframe';\n    };\n    var isInline = function (universe, item) {\n      return !(isBlock(universe, item) || isEmptyTag(universe, item)) && universe.property().name(item) !== 'li';\n    };\n    var Structure = {\n      isBlock: isBlock,\n      isList: isList,\n      isFormatting: isFormatting,\n      isHeading: isHeading,\n      isContainer: isContainer,\n      isEmptyTag: isEmptyTag,\n      isFrame: isFrame,\n      isInline: isInline\n    };\n\n    var universe$1 = DomUniverse();\n    var isBlock$1 = function (element) {\n      return Structure.isBlock(universe$1, element);\n    };\n    var isList$1 = function (element) {\n      return Structure.isList(universe$1, element);\n    };\n    var isFormatting$1 = function (element) {\n      return Structure.isFormatting(universe$1, element);\n    };\n    var isHeading$1 = function (element) {\n      return Structure.isHeading(universe$1, element);\n    };\n    var isContainer$1 = function (element) {\n      return Structure.isContainer(universe$1, element);\n    };\n    var isEmptyTag$1 = function (element) {\n      return Structure.isEmptyTag(universe$1, element);\n    };\n    var isFrame$1 = function (element) {\n      return Structure.isFrame(universe$1, element);\n    };\n    var isInline$1 = function (element) {\n      return Structure.isInline(universe$1, element);\n    };\n    var DomStructure = {\n      isBlock: isBlock$1,\n      isList: isList$1,\n      isFormatting: isFormatting$1,\n      isHeading: isHeading$1,\n      isContainer: isContainer$1,\n      isEmptyTag: isEmptyTag$1,\n      isFrame: isFrame$1,\n      isInline: isInline$1\n    };\n\n    var merge$3 = function (cells) {\n      var isBr = function (el) {\n        return name(el) === 'br';\n      };\n      var advancedBr = function (children) {\n        return forall(children, function (c) {\n          return isBr(c) || isText(c) && get$3(c).trim().length === 0;\n        });\n      };\n      var isListItem = function (el) {\n        return name(el) === 'li' || ancestor(el, DomStructure.isList).isSome();\n      };\n      var siblingIsBlock = function (el) {\n        return nextSibling(el).map(function (rightSibling) {\n          if (DomStructure.isBlock(rightSibling)) {\n            return true;\n          }\n          if (DomStructure.isEmptyTag(rightSibling)) {\n            return name(rightSibling) === 'img' ? false : true;\n          }\n        }).getOr(false);\n      };\n      var markCell = function (cell) {\n        return last$1(cell).bind(function (rightEdge) {\n          var rightSiblingIsBlock = siblingIsBlock(rightEdge);\n          return parent(rightEdge).map(function (parent) {\n            return rightSiblingIsBlock === true || isListItem(parent) || isBr(rightEdge) || DomStructure.isBlock(parent) && !eq(cell, parent) ? [] : [Element.fromTag('br')];\n          });\n        }).getOr([]);\n      };\n      var markContent = function () {\n        var content = bind(cells, function (cell) {\n          var children$1 = children(cell);\n          return advancedBr(children$1) ? [] : children$1.concat(markCell(cell));\n        });\n        return content.length === 0 ? [Element.fromTag('br')] : content;\n      };\n      var contents = markContent();\n      empty(cells[0]);\n      append$1(cells[0], contents);\n    };\n    var TableContent = { merge: merge$3 };\n\n    var prune = function (table) {\n      var cells = TableLookup.cells(table);\n      if (cells.length === 0) {\n        remove$2(table);\n      }\n    };\n    var outcome = Immutable('grid', 'cursor');\n    var elementFromGrid = function (grid, row, column) {\n      return findIn(grid, row, column).orThunk(function () {\n        return findIn(grid, 0, 0);\n      });\n    };\n    var findIn = function (grid, row, column) {\n      return Option.from(grid[row]).bind(function (r) {\n        return Option.from(r.cells()[column]).bind(function (c) {\n          return Option.from(c.element());\n        });\n      });\n    };\n    var bundle = function (grid, row, column) {\n      return outcome(grid, findIn(grid, row, column));\n    };\n    var uniqueRows = function (details) {\n      return foldl(details, function (rest, detail) {\n        return exists(rest, function (currentDetail) {\n          return currentDetail.row() === detail.row();\n        }) ? rest : rest.concat([detail]);\n      }, []).sort(function (detailA, detailB) {\n        return detailA.row() - detailB.row();\n      });\n    };\n    var uniqueColumns = function (details) {\n      return foldl(details, function (rest, detail) {\n        return exists(rest, function (currentDetail) {\n          return currentDetail.column() === detail.column();\n        }) ? rest : rest.concat([detail]);\n      }, []).sort(function (detailA, detailB) {\n        return detailA.column() - detailB.column();\n      });\n    };\n    var insertRowBefore = function (grid, detail, comparator, genWrappers) {\n      var example = detail.row();\n      var targetIndex = detail.row();\n      var newGrid = ModificationOperations.insertRowAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, targetIndex, detail.column());\n    };\n    var insertRowsBefore = function (grid, details, comparator, genWrappers) {\n      var example = details[0].row();\n      var targetIndex = details[0].row();\n      var rows = uniqueRows(details);\n      var newGrid = foldl(rows, function (newG, _row) {\n        return ModificationOperations.insertRowAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column());\n    };\n    var insertRowAfter = function (grid, detail, comparator, genWrappers) {\n      var example = detail.row();\n      var targetIndex = detail.row() + detail.rowspan();\n      var newGrid = ModificationOperations.insertRowAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, targetIndex, detail.column());\n    };\n    var insertRowsAfter = function (grid, details, comparator, genWrappers) {\n      var rows = uniqueRows(details);\n      var example = rows[rows.length - 1].row();\n      var targetIndex = rows[rows.length - 1].row() + rows[rows.length - 1].rowspan();\n      var newGrid = foldl(rows, function (newG, _row) {\n        return ModificationOperations.insertRowAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column());\n    };\n    var insertColumnBefore = function (grid, detail, comparator, genWrappers) {\n      var example = detail.column();\n      var targetIndex = detail.column();\n      var newGrid = ModificationOperations.insertColumnAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), targetIndex);\n    };\n    var insertColumnsBefore = function (grid, details, comparator, genWrappers) {\n      var columns = uniqueColumns(details);\n      var example = columns[0].column();\n      var targetIndex = columns[0].column();\n      var newGrid = foldl(columns, function (newG, _row) {\n        return ModificationOperations.insertColumnAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row(), targetIndex);\n    };\n    var insertColumnAfter = function (grid, detail, comparator, genWrappers) {\n      var example = detail.column();\n      var targetIndex = detail.column() + detail.colspan();\n      var newGrid = ModificationOperations.insertColumnAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), targetIndex);\n    };\n    var insertColumnsAfter = function (grid, details, comparator, genWrappers) {\n      var example = details[details.length - 1].column();\n      var targetIndex = details[details.length - 1].column() + details[details.length - 1].colspan();\n      var columns = uniqueColumns(details);\n      var newGrid = foldl(columns, function (newG, _row) {\n        return ModificationOperations.insertColumnAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row(), targetIndex);\n    };\n    var makeRowHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceRow(grid, detail.row(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var makeColumnHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceColumn(grid, detail.column(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var unmakeRowHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceRow(grid, detail.row(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var unmakeColumnHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceColumn(grid, detail.column(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var splitCellIntoColumns$1 = function (grid, detail, comparator, genWrappers) {\n      var newGrid = ModificationOperations.splitCellIntoColumns(grid, detail.row(), detail.column(), comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var splitCellIntoRows$1 = function (grid, detail, comparator, genWrappers) {\n      var newGrid = ModificationOperations.splitCellIntoRows(grid, detail.row(), detail.column(), comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var eraseColumns = function (grid, details, comparator, _genWrappers) {\n      var columns = uniqueColumns(details);\n      var newGrid = ModificationOperations.deleteColumnsAt(grid, columns[0].column(), columns[columns.length - 1].column());\n      var cursor = elementFromGrid(newGrid, details[0].row(), details[0].column());\n      return outcome(newGrid, cursor);\n    };\n    var eraseRows = function (grid, details, comparator, _genWrappers) {\n      var rows = uniqueRows(details);\n      var newGrid = ModificationOperations.deleteRowsAt(grid, rows[0].row(), rows[rows.length - 1].row());\n      var cursor = elementFromGrid(newGrid, details[0].row(), details[0].column());\n      return outcome(newGrid, cursor);\n    };\n    var mergeCells = function (grid, mergable, comparator, _genWrappers) {\n      var cells = mergable.cells();\n      TableContent.merge(cells);\n      var newGrid = MergingOperations.merge(grid, mergable.bounds(), comparator, constant(cells[0]));\n      return outcome(newGrid, Option.from(cells[0]));\n    };\n    var unmergeCells = function (grid, unmergable, comparator, genWrappers) {\n      var newGrid = foldr(unmergable, function (b, cell) {\n        return MergingOperations.unmerge(b, cell, comparator, genWrappers.combine(cell));\n      }, grid);\n      return outcome(newGrid, Option.from(unmergable[0]));\n    };\n    var pasteCells = function (grid, pasteDetails, comparator, genWrappers) {\n      var gridify = function (table, generators) {\n        var list = DetailsList.fromTable(table);\n        var wh = Warehouse.generate(list);\n        return Transitions.toGrid(wh, generators, true);\n      };\n      var gridB = gridify(pasteDetails.clipboard(), pasteDetails.generators());\n      var startAddress = Structs.address(pasteDetails.row(), pasteDetails.column());\n      var mergedGrid = TableMerge.merge(startAddress, grid, gridB, pasteDetails.generators(), comparator);\n      return mergedGrid.fold(function () {\n        return outcome(grid, Option.some(pasteDetails.element()));\n      }, function (nuGrid) {\n        var cursor = elementFromGrid(nuGrid, pasteDetails.row(), pasteDetails.column());\n        return outcome(nuGrid, cursor);\n      });\n    };\n    var gridifyRows = function (rows, generators, example) {\n      var pasteDetails = DetailsList.fromPastedRows(rows, example);\n      var wh = Warehouse.generate(pasteDetails);\n      return Transitions.toGrid(wh, generators, true);\n    };\n    var pasteRowsBefore = function (grid, pasteDetails, comparator, genWrappers) {\n      var example = grid[pasteDetails.cells[0].row()];\n      var index = pasteDetails.cells[0].row();\n      var gridB = gridifyRows(pasteDetails.clipboard(), pasteDetails.generators(), example);\n      var mergedGrid = TableMerge.insert(index, grid, gridB, pasteDetails.generators(), comparator);\n      var cursor = elementFromGrid(mergedGrid, pasteDetails.cells[0].row(), pasteDetails.cells[0].column());\n      return outcome(mergedGrid, cursor);\n    };\n    var pasteRowsAfter = function (grid, pasteDetails, comparator, genWrappers) {\n      var example = grid[pasteDetails.cells[0].row()];\n      var index = pasteDetails.cells[pasteDetails.cells.length - 1].row() + pasteDetails.cells[pasteDetails.cells.length - 1].rowspan();\n      var gridB = gridifyRows(pasteDetails.clipboard(), pasteDetails.generators(), example);\n      var mergedGrid = TableMerge.insert(index, grid, gridB, pasteDetails.generators(), comparator);\n      var cursor = elementFromGrid(mergedGrid, pasteDetails.cells[0].row(), pasteDetails.cells[0].column());\n      return outcome(mergedGrid, cursor);\n    };\n    var resize = Adjustments.adjustWidthTo;\n    var TableOperations = {\n      insertRowBefore: RunOperation.run(insertRowBefore, RunOperation.onCell, noop, noop, Generators.modification),\n      insertRowsBefore: RunOperation.run(insertRowsBefore, RunOperation.onCells, noop, noop, Generators.modification),\n      insertRowAfter: RunOperation.run(insertRowAfter, RunOperation.onCell, noop, noop, Generators.modification),\n      insertRowsAfter: RunOperation.run(insertRowsAfter, RunOperation.onCells, noop, noop, Generators.modification),\n      insertColumnBefore: RunOperation.run(insertColumnBefore, RunOperation.onCell, resize, noop, Generators.modification),\n      insertColumnsBefore: RunOperation.run(insertColumnsBefore, RunOperation.onCells, resize, noop, Generators.modification),\n      insertColumnAfter: RunOperation.run(insertColumnAfter, RunOperation.onCell, resize, noop, Generators.modification),\n      insertColumnsAfter: RunOperation.run(insertColumnsAfter, RunOperation.onCells, resize, noop, Generators.modification),\n      splitCellIntoColumns: RunOperation.run(splitCellIntoColumns$1, RunOperation.onCell, resize, noop, Generators.modification),\n      splitCellIntoRows: RunOperation.run(splitCellIntoRows$1, RunOperation.onCell, noop, noop, Generators.modification),\n      eraseColumns: RunOperation.run(eraseColumns, RunOperation.onCells, resize, prune, Generators.modification),\n      eraseRows: RunOperation.run(eraseRows, RunOperation.onCells, noop, prune, Generators.modification),\n      makeColumnHeader: RunOperation.run(makeColumnHeader, RunOperation.onCell, noop, noop, Generators.transform('row', 'th')),\n      unmakeColumnHeader: RunOperation.run(unmakeColumnHeader, RunOperation.onCell, noop, noop, Generators.transform(null, 'td')),\n      makeRowHeader: RunOperation.run(makeRowHeader, RunOperation.onCell, noop, noop, Generators.transform('col', 'th')),\n      unmakeRowHeader: RunOperation.run(unmakeRowHeader, RunOperation.onCell, noop, noop, Generators.transform(null, 'td')),\n      mergeCells: RunOperation.run(mergeCells, RunOperation.onMergable, noop, noop, Generators.merging),\n      unmergeCells: RunOperation.run(unmergeCells, RunOperation.onUnmergable, resize, noop, Generators.merging),\n      pasteCells: RunOperation.run(pasteCells, RunOperation.onPaste, resize, noop, Generators.modification),\n      pasteRowsBefore: RunOperation.run(pasteRowsBefore, RunOperation.onPasteRows, noop, noop, Generators.modification),\n      pasteRowsAfter: RunOperation.run(pasteRowsAfter, RunOperation.onPasteRows, noop, noop, Generators.modification)\n    };\n\n    var getBody$1 = function (editor) {\n      return Element.fromDom(editor.getBody());\n    };\n    var getPixelWidth$1 = function (elm) {\n      return elm.getBoundingClientRect().width;\n    };\n    var getPixelHeight = function (elm) {\n      return elm.getBoundingClientRect().height;\n    };\n    var getIsRoot = function (editor) {\n      return function (element) {\n        return eq(element, getBody$1(editor));\n      };\n    };\n    var removePxSuffix = function (size) {\n      return size ? size.replace(/px$/, '') : '';\n    };\n    var addSizeSuffix = function (size) {\n      if (/^[0-9]+$/.test(size)) {\n        size += 'px';\n      }\n      return size;\n    };\n    var removeDataStyle = function (table) {\n      var dataStyleCells = descendants$1(table, 'td[data-mce-style],th[data-mce-style]');\n      remove(table, 'data-mce-style');\n      each(dataStyleCells, function (cell) {\n        remove(cell, 'data-mce-style');\n      });\n    };\n\n    var getDirection = function (element) {\n      return get$2(element, 'direction') === 'rtl' ? 'rtl' : 'ltr';\n    };\n\n    var ltr$1 = { isRtl: constant(false) };\n    var rtl$1 = { isRtl: constant(true) };\n    var directionAt = function (element) {\n      var dir = getDirection(element);\n      return dir === 'rtl' ? rtl$1 : ltr$1;\n    };\n    var Direction = { directionAt: directionAt };\n\n    var defaultTableToolbar = 'tableprops tabledelete | tableinsertrowbefore tableinsertrowafter tabledeleterow | tableinsertcolbefore tableinsertcolafter tabledeletecol';\n    var defaultStyles = {\n      'border-collapse': 'collapse',\n      'width': '100%'\n    };\n    var defaultAttributes = { border: '1' };\n    var getDefaultAttributes = function (editor) {\n      return editor.getParam('table_default_attributes', defaultAttributes, 'object');\n    };\n    var getDefaultStyles = function (editor) {\n      return editor.getParam('table_default_styles', defaultStyles, 'object');\n    };\n    var hasTableResizeBars = function (editor) {\n      return editor.getParam('table_resize_bars', true, 'boolean');\n    };\n    var hasTabNavigation = function (editor) {\n      return editor.getParam('table_tab_navigation', true, 'boolean');\n    };\n    var hasAdvancedCellTab = function (editor) {\n      return editor.getParam('table_cell_advtab', true, 'boolean');\n    };\n    var hasAdvancedRowTab = function (editor) {\n      return editor.getParam('table_row_advtab', true, 'boolean');\n    };\n    var hasAdvancedTableTab = function (editor) {\n      return editor.getParam('table_advtab', true, 'boolean');\n    };\n    var hasAppearanceOptions = function (editor) {\n      return editor.getParam('table_appearance_options', true, 'boolean');\n    };\n    var hasTableGrid = function (editor) {\n      return editor.getParam('table_grid', true, 'boolean');\n    };\n    var shouldStyleWithCss = function (editor) {\n      return editor.getParam('table_style_by_css', false, 'boolean');\n    };\n    var getCellClassList = function (editor) {\n      return editor.getParam('table_cell_class_list', [], 'array');\n    };\n    var getRowClassList = function (editor) {\n      return editor.getParam('table_row_class_list', [], 'array');\n    };\n    var getTableClassList = function (editor) {\n      return editor.getParam('table_class_list', [], 'array');\n    };\n    var isPixelsForced = function (editor) {\n      return editor.getParam('table_responsive_width') === false;\n    };\n    var getToolbar = function (editor) {\n      return editor.getParam('table_toolbar', defaultTableToolbar);\n    };\n    var getCloneElements = function (editor) {\n      var cloneElements = editor.getParam('table_clone_elements');\n      if (isString(cloneElements)) {\n        return Option.some(cloneElements.split(/[ ,]/));\n      } else if (Array.isArray(cloneElements)) {\n        return Option.some(cloneElements);\n      } else {\n        return Option.none();\n      }\n    };\n    var hasObjectResizing = function (editor) {\n      var objectResizing = editor.getParam('object_resizing', true);\n      return objectResizing === 'table' || objectResizing;\n    };\n\n    var fireNewRow = function (editor, row) {\n      return editor.fire('newrow', { node: row });\n    };\n    var fireNewCell = function (editor, cell) {\n      return editor.fire('newcell', { node: cell });\n    };\n    var fireObjectResizeStart = function (editor, target, width, height) {\n      editor.fire('ObjectResizeStart', {\n        target: target,\n        width: width,\n        height: height\n      });\n    };\n    var fireObjectResized = function (editor, target, width, height) {\n      editor.fire('ObjectResized', {\n        target: target,\n        width: width,\n        height: height\n      });\n    };\n\n    var TableActions = function (editor, lazyWire) {\n      var isTableBody = function (editor) {\n        return name(getBody$1(editor)) === 'table';\n      };\n      var lastRowGuard = function (table) {\n        var size = TableGridSize.getGridSize(table);\n        return isTableBody(editor) === false || size.rows() > 1;\n      };\n      var lastColumnGuard = function (table) {\n        var size = TableGridSize.getGridSize(table);\n        return isTableBody(editor) === false || size.columns() > 1;\n      };\n      var cloneFormats = getCloneElements(editor);\n      var execute = function (operation, guard, mutate, lazyWire) {\n        return function (table, target) {\n          removeDataStyle(table);\n          var wire = lazyWire();\n          var doc = Element.fromDom(editor.getDoc());\n          var direction = TableDirection(Direction.directionAt);\n          var generators = TableFill.cellOperations(mutate, doc, cloneFormats);\n          return guard(table) ? operation(wire, table, target, generators, direction).bind(function (result) {\n            each(result.newRows(), function (row) {\n              fireNewRow(editor, row.dom());\n            });\n            each(result.newCells(), function (cell) {\n              fireNewCell(editor, cell.dom());\n            });\n            return result.cursor().map(function (cell) {\n              var rng = editor.dom.createRng();\n              rng.setStart(cell.dom(), 0);\n              rng.setEnd(cell.dom(), 0);\n              return rng;\n            });\n          }) : Option.none();\n        };\n      };\n      var deleteRow = execute(TableOperations.eraseRows, lastRowGuard, noop, lazyWire);\n      var deleteColumn = execute(TableOperations.eraseColumns, lastColumnGuard, noop, lazyWire);\n      var insertRowsBefore = execute(TableOperations.insertRowsBefore, always, noop, lazyWire);\n      var insertRowsAfter = execute(TableOperations.insertRowsAfter, always, noop, lazyWire);\n      var insertColumnsBefore = execute(TableOperations.insertColumnsBefore, always, CellMutations.halve, lazyWire);\n      var insertColumnsAfter = execute(TableOperations.insertColumnsAfter, always, CellMutations.halve, lazyWire);\n      var mergeCells = execute(TableOperations.mergeCells, always, noop, lazyWire);\n      var unmergeCells = execute(TableOperations.unmergeCells, always, noop, lazyWire);\n      var pasteRowsBefore = execute(TableOperations.pasteRowsBefore, always, noop, lazyWire);\n      var pasteRowsAfter = execute(TableOperations.pasteRowsAfter, always, noop, lazyWire);\n      var pasteCells = execute(TableOperations.pasteCells, always, noop, lazyWire);\n      return {\n        deleteRow: deleteRow,\n        deleteColumn: deleteColumn,\n        insertRowsBefore: insertRowsBefore,\n        insertRowsAfter: insertRowsAfter,\n        insertColumnsBefore: insertColumnsBefore,\n        insertColumnsAfter: insertColumnsAfter,\n        mergeCells: mergeCells,\n        unmergeCells: unmergeCells,\n        pasteRowsBefore: pasteRowsBefore,\n        pasteRowsAfter: pasteRowsAfter,\n        pasteCells: pasteCells\n      };\n    };\n\n    var copyRows = function (table, target, generators) {\n      var list = DetailsList.fromTable(table);\n      var house = Warehouse.generate(list);\n      var details = RunOperation.onCells(house, target);\n      return details.map(function (selectedCells) {\n        var grid = Transitions.toGrid(house, generators, false);\n        var slicedGrid = grid.slice(selectedCells[0].row(), selectedCells[selectedCells.length - 1].row() + selectedCells[selectedCells.length - 1].rowspan());\n        var slicedDetails = RunOperation.toDetailList(slicedGrid, generators);\n        return Redraw.copy(slicedDetails);\n      });\n    };\n    var CopyRows = { copyRows: copyRows };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getTDTHOverallStyle = function (dom, elm, name) {\n      var cells = dom.select('td,th', elm);\n      var firstChildStyle;\n      var checkChildren = function (firstChildStyle, elms) {\n        for (var i = 0; i < elms.length; i++) {\n          var currentStyle = dom.getStyle(elms[i], name);\n          if (typeof firstChildStyle === 'undefined') {\n            firstChildStyle = currentStyle;\n          }\n          if (firstChildStyle !== currentStyle) {\n            return '';\n          }\n        }\n        return firstChildStyle;\n      };\n      firstChildStyle = checkChildren(firstChildStyle, cells);\n      return firstChildStyle;\n    };\n    var applyAlign = function (editor, elm, name) {\n      if (name) {\n        editor.formatter.apply('align' + name, {}, elm);\n      }\n    };\n    var applyVAlign = function (editor, elm, name) {\n      if (name) {\n        editor.formatter.apply('valign' + name, {}, elm);\n      }\n    };\n    var unApplyAlign = function (editor, elm) {\n      global$1.each('left center right'.split(' '), function (name) {\n        editor.formatter.remove('align' + name, {}, elm);\n      });\n    };\n    var unApplyVAlign = function (editor, elm) {\n      global$1.each('top middle bottom'.split(' '), function (name) {\n        editor.formatter.remove('valign' + name, {}, elm);\n      });\n    };\n    var Styles$1 = {\n      applyAlign: applyAlign,\n      applyVAlign: applyVAlign,\n      unApplyAlign: unApplyAlign,\n      unApplyVAlign: unApplyVAlign,\n      getTDTHOverallStyle: getTDTHOverallStyle\n    };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var buildListItems = function (inputList, itemCallback, startItems) {\n      var appendItems = function (values, output) {\n        output = output || [];\n        global$1.each(values, function (item) {\n          var menuItem = { text: item.text || item.title };\n          if (item.menu) {\n            menuItem.menu = appendItems(item.menu);\n          } else {\n            menuItem.value = item.value;\n            if (itemCallback) {\n              itemCallback(menuItem);\n            }\n          }\n          output.push(menuItem);\n        });\n        return output;\n      };\n      return appendItems(inputList, startItems || []);\n    };\n    var extractAdvancedStyles = function (dom, elm) {\n      var rgbToHex = function (value) {\n        return startsWith(value, 'rgb') ? dom.toHex(value) : value;\n      };\n      var borderStyle = getRaw(Element.fromDom(elm), 'border-style').getOr('');\n      var borderColor = getRaw(Element.fromDom(elm), 'border-color').map(rgbToHex).getOr('');\n      var bgColor = getRaw(Element.fromDom(elm), 'background-color').map(rgbToHex).getOr('');\n      return {\n        borderstyle: borderStyle,\n        bordercolor: borderColor,\n        backgroundcolor: bgColor\n      };\n    };\n    var getSharedValues = function (data) {\n      var baseData = data[0];\n      var comparisonData = data.slice(1);\n      var keys$1 = keys(baseData);\n      each(comparisonData, function (items) {\n        each(keys$1, function (key) {\n          each$1(items, function (itemValue, itemKey, _) {\n            var comparisonValue = baseData[key];\n            if (comparisonValue !== '' && key === itemKey) {\n              if (comparisonValue !== itemValue) {\n                baseData[key] = '';\n              }\n            }\n          });\n        });\n      });\n      return baseData;\n    };\n    var getAdvancedTab = function () {\n      var items = [\n        {\n          name: 'borderstyle',\n          type: 'selectbox',\n          label: 'Border style',\n          items: [\n            {\n              text: 'Select...',\n              value: ''\n            },\n            {\n              text: 'Solid',\n              value: 'solid'\n            },\n            {\n              text: 'Dotted',\n              value: 'dotted'\n            },\n            {\n              text: 'Dashed',\n              value: 'dashed'\n            },\n            {\n              text: 'Double',\n              value: 'double'\n            },\n            {\n              text: 'Groove',\n              value: 'groove'\n            },\n            {\n              text: 'Ridge',\n              value: 'ridge'\n            },\n            {\n              text: 'Inset',\n              value: 'inset'\n            },\n            {\n              text: 'Outset',\n              value: 'outset'\n            },\n            {\n              text: 'None',\n              value: 'none'\n            },\n            {\n              text: 'Hidden',\n              value: 'hidden'\n            }\n          ]\n        },\n        {\n          name: 'bordercolor',\n          type: 'colorinput',\n          label: 'Border color'\n        },\n        {\n          name: 'backgroundcolor',\n          type: 'colorinput',\n          label: 'Background color'\n        }\n      ];\n      return {\n        title: 'Advanced',\n        items: items\n      };\n    };\n    var getAlignment = function (alignments, formatName, dataName, editor, elm) {\n      var alignmentData = {};\n      global$1.each(alignments.split(' '), function (name) {\n        if (editor.formatter.matchNode(elm, formatName + name)) {\n          alignmentData[dataName] = name;\n        }\n      });\n      if (!alignmentData[dataName]) {\n        alignmentData[dataName] = '';\n      }\n      return alignmentData;\n    };\n    var getHAlignment = curry(getAlignment, 'left center right');\n    var getVAlignment = curry(getAlignment, 'top middle bottom');\n    var extractDataFromSettings = function (editor, hasAdvTableTab) {\n      var style = getDefaultStyles(editor);\n      var attrs = getDefaultAttributes(editor);\n      var extractAdvancedStyleData = function (dom) {\n        var rgbToHex = function (value) {\n          return startsWith(value, 'rgb') ? dom.toHex(value) : value;\n        };\n        var borderStyle = get(style, 'border-style').getOr('');\n        var borderColor = get(style, 'border-color').getOr('');\n        var bgColor = get(style, 'background-color').getOr('');\n        return {\n          borderstyle: borderStyle,\n          bordercolor: rgbToHex(borderColor),\n          backgroundcolor: rgbToHex(bgColor)\n        };\n      };\n      var defaultData = {\n        height: '',\n        width: '100%',\n        cellspacing: '',\n        cellpadding: '',\n        caption: false,\n        class: '',\n        align: '',\n        border: ''\n      };\n      var getBorder = function () {\n        var borderWidth = style['border-width'];\n        if (shouldStyleWithCss(editor) && borderWidth) {\n          return { border: borderWidth };\n        }\n        return get(attrs, 'border').fold(function () {\n          return {};\n        }, function (border) {\n          return { border: border };\n        });\n      };\n      var dom = editor.dom;\n      var advStyle = hasAdvTableTab ? extractAdvancedStyleData(dom) : {};\n      var getCellPaddingCellSpacing = function () {\n        var spacing = get(style, 'border-spacing').or(get(attrs, 'cellspacing')).fold(function () {\n          return {};\n        }, function (cellspacing) {\n          return { cellspacing: cellspacing };\n        });\n        var padding = get(style, 'border-padding').or(get(attrs, 'cellpadding')).fold(function () {\n          return {};\n        }, function (cellpadding) {\n          return { cellpadding: cellpadding };\n        });\n        return __assign({}, spacing, padding);\n      };\n      var data = __assign({}, defaultData, style, attrs, advStyle, getBorder(), getCellPaddingCellSpacing());\n      return data;\n    };\n    var extractDataFromTableElement = function (editor, elm, hasAdvTableTab) {\n      var getBorder = function (dom, elm) {\n        var optBorderWidth = getRaw(Element.fromDom(elm), 'border-width');\n        if (shouldStyleWithCss(editor) && optBorderWidth.isSome()) {\n          return optBorderWidth.getOr('');\n        }\n        return dom.getAttrib(elm, 'border') || Styles$1.getTDTHOverallStyle(editor.dom, elm, 'border-width') || Styles$1.getTDTHOverallStyle(editor.dom, elm, 'border');\n      };\n      var dom = editor.dom;\n      var data = __assign({\n        width: dom.getStyle(elm, 'width') || dom.getAttrib(elm, 'width'),\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        cellspacing: dom.getStyle(elm, 'border-spacing') || dom.getAttrib(elm, 'cellspacing'),\n        cellpadding: dom.getAttrib(elm, 'cellpadding') || Styles$1.getTDTHOverallStyle(editor.dom, elm, 'padding'),\n        border: getBorder(dom, elm),\n        caption: !!dom.select('caption', elm)[0],\n        class: dom.getAttrib(elm, 'class', '')\n      }, getHAlignment('align', 'align', editor, elm), hasAdvTableTab ? extractAdvancedStyles(dom, elm) : {});\n      return data;\n    };\n    var extractDataFromRowElement = function (editor, elm, hasAdvancedRowTab) {\n      var dom = editor.dom;\n      var data = __assign({\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        scope: dom.getAttrib(elm, 'scope'),\n        class: dom.getAttrib(elm, 'class', ''),\n        align: '',\n        type: elm.parentNode.nodeName.toLowerCase()\n      }, getHAlignment('align', 'align', editor, elm), hasAdvancedRowTab ? extractAdvancedStyles(dom, elm) : {});\n      return data;\n    };\n    var extractDataFromCellElement = function (editor, elm, hasAdvancedCellTab) {\n      var dom = editor.dom;\n      var data = __assign({\n        width: dom.getStyle(elm, 'width') || dom.getAttrib(elm, 'width'),\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        scope: dom.getAttrib(elm, 'scope'),\n        celltype: elm.nodeName.toLowerCase(),\n        class: dom.getAttrib(elm, 'class', '')\n      }, getHAlignment('align', 'halign', editor, elm), getVAlignment('valign', 'valign', editor, elm), hasAdvancedCellTab ? extractAdvancedStyles(dom, elm) : {});\n      return data;\n    };\n    var Helpers = {\n      buildListItems: buildListItems,\n      extractAdvancedStyles: extractAdvancedStyles,\n      getSharedValues: getSharedValues,\n      getAdvancedTab: getAdvancedTab,\n      extractDataFromTableElement: extractDataFromTableElement,\n      extractDataFromRowElement: extractDataFromRowElement,\n      extractDataFromCellElement: extractDataFromCellElement,\n      extractDataFromSettings: extractDataFromSettings\n    };\n\n    var getClassList = function (editor) {\n      var rowClassList = getCellClassList(editor);\n      var classes = Helpers.buildListItems(rowClassList, function (item) {\n        if (item.value) {\n          item.textStyle = function () {\n            return editor.formatter.getCssText({\n              block: 'tr',\n              classes: [item.value]\n            });\n          };\n        }\n      });\n      if (rowClassList.length > 0) {\n        return Option.some({\n          name: 'class',\n          type: 'selectbox',\n          label: 'Class',\n          items: classes\n        });\n      }\n      return Option.none();\n    };\n    var children$3 = [\n      {\n        name: 'width',\n        type: 'input',\n        label: 'Width'\n      },\n      {\n        name: 'height',\n        type: 'input',\n        label: 'Height'\n      },\n      {\n        name: 'celltype',\n        type: 'selectbox',\n        label: 'Cell type',\n        items: [\n          {\n            text: 'Cell',\n            value: 'td'\n          },\n          {\n            text: 'Header cell',\n            value: 'th'\n          }\n        ]\n      },\n      {\n        name: 'scope',\n        type: 'selectbox',\n        label: 'Scope',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Row',\n            value: 'row'\n          },\n          {\n            text: 'Column',\n            value: 'col'\n          },\n          {\n            text: 'Row group',\n            value: 'rowgroup'\n          },\n          {\n            text: 'Column group',\n            value: 'colgroup'\n          }\n        ]\n      },\n      {\n        name: 'halign',\n        type: 'selectbox',\n        label: 'H Align',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Left',\n            value: 'left'\n          },\n          {\n            text: 'Center',\n            value: 'center'\n          },\n          {\n            text: 'Right',\n            value: 'right'\n          }\n        ]\n      },\n      {\n        name: 'valign',\n        type: 'selectbox',\n        label: 'V Align',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Top',\n            value: 'top'\n          },\n          {\n            text: 'Middle',\n            value: 'middle'\n          },\n          {\n            text: 'Bottom',\n            value: 'bottom'\n          }\n        ]\n      }\n    ];\n    var items = function (editor) {\n      return getClassList(editor).fold(function () {\n        return children$3;\n      }, function (classlist) {\n        return children$3.concat(classlist);\n      });\n    };\n    var CellDialogGeneralTab = { items: items };\n\n    var normal = function (dom, node) {\n      var setAttrib = function (attr, value) {\n        dom.setAttrib(node, attr, value);\n      };\n      var setStyle = function (prop, value) {\n        dom.setStyle(node, prop, value);\n      };\n      return {\n        setAttrib: setAttrib,\n        setStyle: setStyle\n      };\n    };\n    var ifTruthy = function (dom, node) {\n      var setAttrib = function (attr, value) {\n        if (value) {\n          dom.setAttrib(node, attr, value);\n        }\n      };\n      var setStyle = function (prop, value) {\n        if (value) {\n          dom.setStyle(node, prop, value);\n        }\n      };\n      return {\n        setAttrib: setAttrib,\n        setStyle: setStyle\n      };\n    };\n    var DomModifiers = {\n      normal: normal,\n      ifTruthy: ifTruthy\n    };\n\n    var updateSimpleProps = function (modifiers, data) {\n      modifiers.setAttrib('scope', data.scope);\n      modifiers.setAttrib('class', data.class);\n      modifiers.setStyle('width', addSizeSuffix(data.width));\n      modifiers.setStyle('height', addSizeSuffix(data.height));\n    };\n    var updateAdvancedProps = function (modifiers, data) {\n      modifiers.setStyle('background-color', data.backgroundcolor);\n      modifiers.setStyle('border-color', data.bordercolor);\n      modifiers.setStyle('border-style', data.borderstyle);\n    };\n    var applyToSingle = function (editor, cells, data) {\n      var dom = editor.dom;\n      var cellElm = data.celltype && cells[0].nodeName.toLowerCase() !== data.celltype ? dom.rename(cells[0], data.celltype) : cells[0];\n      var modifiers = DomModifiers.normal(dom, cellElm);\n      updateSimpleProps(modifiers, data);\n      if (hasAdvancedCellTab(editor)) {\n        updateAdvancedProps(modifiers, data);\n      }\n      Styles$1.unApplyAlign(editor, cellElm);\n      Styles$1.unApplyVAlign(editor, cellElm);\n      if (data.halign) {\n        Styles$1.applyAlign(editor, cellElm, data.halign);\n      }\n      if (data.valign) {\n        Styles$1.applyVAlign(editor, cellElm, data.valign);\n      }\n    };\n    var applyToMultiple = function (editor, cells, data) {\n      var dom = editor.dom;\n      global$1.each(cells, function (cellElm) {\n        if (data.celltype && cellElm.nodeName.toLowerCase() !== data.celltype) {\n          cellElm = dom.rename(cellElm, data.celltype);\n        }\n        var modifiers = DomModifiers.ifTruthy(dom, cellElm);\n        updateSimpleProps(modifiers, data);\n        if (hasAdvancedCellTab(editor)) {\n          updateAdvancedProps(modifiers, data);\n        }\n        if (data.halign) {\n          Styles$1.applyAlign(editor, cellElm, data.halign);\n        }\n        if (data.valign) {\n          Styles$1.applyVAlign(editor, cellElm, data.valign);\n        }\n      });\n    };\n    var onSubmitCellForm = function (editor, cells, api) {\n      var data = api.getData();\n      api.close();\n      editor.undoManager.transact(function () {\n        var applicator = cells.length === 1 ? applyToSingle : applyToMultiple;\n        applicator(editor, cells, data);\n        editor.focus();\n      });\n    };\n    var open = function (editor) {\n      var cellElm, cells = [];\n      cells = editor.dom.select('td[data-mce-selected],th[data-mce-selected]');\n      cellElm = editor.dom.getParent(editor.selection.getStart(), 'td,th');\n      if (!cells.length && cellElm) {\n        cells.push(cellElm);\n      }\n      cellElm = cellElm || cells[0];\n      if (!cellElm) {\n        return;\n      }\n      var cellsData = global$1.map(cells, function (cellElm) {\n        return Helpers.extractDataFromCellElement(editor, cellElm, hasAdvancedCellTab(editor));\n      });\n      var data = Helpers.getSharedValues(cellsData);\n      var dialogTabPanel = {\n        type: 'tabpanel',\n        tabs: [\n          {\n            title: 'General',\n            items: CellDialogGeneralTab.items(editor)\n          },\n          Helpers.getAdvancedTab()\n        ]\n      };\n      var dialogPanel = {\n        type: 'panel',\n        items: [{\n            type: 'grid',\n            columns: 2,\n            items: CellDialogGeneralTab.items(editor)\n          }]\n      };\n      editor.windowManager.open({\n        title: 'Cell Properties',\n        size: 'normal',\n        body: hasAdvancedCellTab(editor) ? dialogTabPanel : dialogPanel,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: data,\n        onSubmit: curry(onSubmitCellForm, editor, cells)\n      });\n    };\n    var CellDialog = { open: open };\n\n    var getClassList$1 = function (editor) {\n      var rowClassList = getRowClassList(editor);\n      var classes = Helpers.buildListItems(rowClassList, function (item) {\n        if (item.value) {\n          item.textStyle = function () {\n            return editor.formatter.getCssText({\n              block: 'tr',\n              classes: [item.value]\n            });\n          };\n        }\n      });\n      if (rowClassList.length > 0) {\n        return Option.some({\n          name: 'class',\n          type: 'selectbox',\n          label: 'Class',\n          items: classes\n        });\n      }\n      return Option.none();\n    };\n    var formChildren = [\n      {\n        type: 'selectbox',\n        name: 'type',\n        label: 'Row type',\n        items: [\n          {\n            text: 'Header',\n            value: 'thead'\n          },\n          {\n            text: 'Body',\n            value: 'tbody'\n          },\n          {\n            text: 'Footer',\n            value: 'tfoot'\n          }\n        ]\n      },\n      {\n        type: 'selectbox',\n        name: 'align',\n        label: 'Alignment',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Left',\n            value: 'left'\n          },\n          {\n            text: 'Center',\n            value: 'center'\n          },\n          {\n            text: 'Right',\n            value: 'right'\n          }\n        ]\n      },\n      {\n        label: 'Height',\n        name: 'height',\n        type: 'input'\n      }\n    ];\n    var items$1 = function (editor) {\n      return getClassList$1(editor).fold(function () {\n        return formChildren;\n      }, function (classes) {\n        return formChildren.concat(classes);\n      });\n    };\n    var RowDialogGeneralTab = { items: items$1 };\n\n    var switchRowType = function (dom, rowElm, toType) {\n      var tableElm = dom.getParent(rowElm, 'table');\n      var oldParentElm = rowElm.parentNode;\n      var parentElm = dom.select(toType, tableElm)[0];\n      if (!parentElm) {\n        parentElm = dom.create(toType);\n        if (tableElm.firstChild) {\n          if (tableElm.firstChild.nodeName === 'CAPTION') {\n            dom.insertAfter(parentElm, tableElm.firstChild);\n          } else {\n            tableElm.insertBefore(parentElm, tableElm.firstChild);\n          }\n        } else {\n          tableElm.appendChild(parentElm);\n        }\n      }\n      parentElm.appendChild(rowElm);\n      if (!oldParentElm.hasChildNodes()) {\n        dom.remove(oldParentElm);\n      }\n    };\n    var updateAdvancedProps$1 = function (modifiers, data) {\n      modifiers.setStyle('background-color', data.backgroundcolor);\n      modifiers.setStyle('border-color', data.bordercolor);\n      modifiers.setStyle('border-style', data.borderstyle);\n    };\n    var onSubmitRowForm = function (editor, rows, oldData, api) {\n      var dom = editor.dom;\n      var data = api.getData();\n      api.close();\n      var createModifier = rows.length === 1 ? DomModifiers.normal : DomModifiers.ifTruthy;\n      editor.undoManager.transact(function () {\n        global$1.each(rows, function (rowElm) {\n          if (data.type !== rowElm.parentNode.nodeName.toLowerCase()) {\n            switchRowType(editor.dom, rowElm, data.type);\n          }\n          var modifiers = createModifier(dom, rowElm);\n          modifiers.setAttrib('scope', data.scope);\n          modifiers.setAttrib('class', data.class);\n          modifiers.setStyle('height', addSizeSuffix(data.height));\n          if (hasAdvancedRowTab(editor)) {\n            updateAdvancedProps$1(modifiers, data);\n          }\n          if (data.align !== oldData.align) {\n            Styles$1.unApplyAlign(editor, rowElm);\n            Styles$1.applyAlign(editor, rowElm, data.align);\n          }\n        });\n        editor.focus();\n      });\n    };\n    var open$1 = function (editor) {\n      var dom = editor.dom;\n      var tableElm, cellElm, rowElm;\n      var rows = [];\n      tableElm = dom.getParent(editor.selection.getStart(), 'table');\n      if (!tableElm) {\n        return;\n      }\n      cellElm = dom.getParent(editor.selection.getStart(), 'td,th');\n      global$1.each(tableElm.rows, function (row) {\n        global$1.each(row.cells, function (cell) {\n          if ((dom.getAttrib(cell, 'data-mce-selected') || cell === cellElm) && rows.indexOf(row) < 0) {\n            rows.push(row);\n            return false;\n          }\n        });\n      });\n      rowElm = rows[0];\n      if (!rowElm) {\n        return;\n      }\n      var rowsData = global$1.map(rows, function (rowElm) {\n        return Helpers.extractDataFromRowElement(editor, rowElm, hasAdvancedRowTab(editor));\n      });\n      var data = Helpers.getSharedValues(rowsData);\n      var dialogTabPanel = {\n        type: 'tabpanel',\n        tabs: [\n          {\n            title: 'General',\n            items: RowDialogGeneralTab.items(editor)\n          },\n          Helpers.getAdvancedTab()\n        ]\n      };\n      var dialogPanel = {\n        type: 'panel',\n        items: [{\n            type: 'grid',\n            columns: 2,\n            items: RowDialogGeneralTab.items(editor)\n          }]\n      };\n      editor.windowManager.open({\n        title: 'Row Properties',\n        size: 'normal',\n        body: hasAdvancedRowTab(editor) ? dialogTabPanel : dialogPanel,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: data,\n        onSubmit: curry(onSubmitRowForm, editor, rows, data)\n      });\n    };\n    var RowDialog = { open: open$1 };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var DefaultRenderOptions = {\n      styles: {\n        'border-collapse': 'collapse',\n        'width': '100%'\n      },\n      attributes: { border: '1' },\n      percentages: true\n    };\n    var makeTable = function () {\n      return Element.fromTag('table');\n    };\n    var tableBody = function () {\n      return Element.fromTag('tbody');\n    };\n    var tableRow = function () {\n      return Element.fromTag('tr');\n    };\n    var tableHeaderCell = function () {\n      return Element.fromTag('th');\n    };\n    var tableCell = function () {\n      return Element.fromTag('td');\n    };\n    var render$1 = function (rows, columns, rowHeaders, columnHeaders, renderOpts) {\n      if (renderOpts === void 0) {\n        renderOpts = DefaultRenderOptions;\n      }\n      var table = makeTable();\n      setAll$1(table, renderOpts.styles);\n      setAll(table, renderOpts.attributes);\n      var tbody = tableBody();\n      append(table, tbody);\n      var trs = [];\n      for (var i = 0; i < rows; i++) {\n        var tr = tableRow();\n        for (var j = 0; j < columns; j++) {\n          var td = i < rowHeaders || j < columnHeaders ? tableHeaderCell() : tableCell();\n          if (j < columnHeaders) {\n            set(td, 'scope', 'row');\n          }\n          if (i < rowHeaders) {\n            set(td, 'scope', 'col');\n          }\n          append(td, Element.fromTag('br'));\n          if (renderOpts.percentages) {\n            set$1(td, 'width', 100 / columns + '%');\n          }\n          append(tr, td);\n        }\n        trs.push(tr);\n      }\n      append$1(tbody, trs);\n      return table;\n    };\n\n    var get$8 = function (element) {\n      return element.dom().innerHTML;\n    };\n    var getOuter$2 = function (element) {\n      var container = Element.fromTag('div');\n      var clone = Element.fromDom(element.dom().cloneNode(true));\n      append(container, clone);\n      return get$8(container);\n    };\n\n    var placeCaretInCell = function (editor, cell) {\n      editor.selection.select(cell.dom(), true);\n      editor.selection.collapse(true);\n    };\n    var selectFirstCellInTable = function (editor, tableElm) {\n      descendant$1(tableElm, 'td,th').each(curry(placeCaretInCell, editor));\n    };\n    var fireEvents = function (editor, table) {\n      each(descendants$1(table, 'tr'), function (row) {\n        fireNewRow(editor, row.dom());\n        each(descendants$1(row, 'th,td'), function (cell) {\n          fireNewCell(editor, cell.dom());\n        });\n      });\n    };\n    var isPercentage = function (width) {\n      return isString(width) && width.indexOf('%') !== -1;\n    };\n    var insert$1 = function (editor, columns, rows) {\n      var defaultStyles = getDefaultStyles(editor);\n      var options = {\n        styles: defaultStyles,\n        attributes: getDefaultAttributes(editor),\n        percentages: isPercentage(defaultStyles.width) && !isPixelsForced(editor)\n      };\n      var table = render$1(rows, columns, 0, 0, options);\n      set(table, 'data-mce-id', '__mce');\n      var html = getOuter$2(table);\n      editor.insertContent(html);\n      return descendant$1(getBody$1(editor), 'table[data-mce-id=\"__mce\"]').map(function (table) {\n        if (isPixelsForced(editor)) {\n          set$1(table, 'width', get$2(table, 'width'));\n        }\n        remove(table, 'data-mce-id');\n        fireEvents(editor, table);\n        selectFirstCellInTable(editor, table);\n        return table.dom();\n      }).getOr(null);\n    };\n    var InsertTable = { insert: insert$1 };\n\n    var styleTDTH = function (dom, elm, name, value) {\n      if (elm.tagName === 'TD' || elm.tagName === 'TH') {\n        dom.setStyle(elm, name, value);\n      } else {\n        if (elm.children) {\n          for (var i = 0; i < elm.children.length; i++) {\n            styleTDTH(dom, elm.children[i], name, value);\n          }\n        }\n      }\n    };\n    var applyDataToElement = function (editor, tableElm, data) {\n      var dom = editor.dom;\n      var attrs = {};\n      var styles = {};\n      attrs.class = data.class;\n      styles.height = addSizeSuffix(data.height);\n      if (dom.getAttrib(tableElm, 'width') && !shouldStyleWithCss(editor)) {\n        attrs.width = removePxSuffix(data.width);\n      } else {\n        styles.width = addSizeSuffix(data.width);\n      }\n      if (shouldStyleWithCss(editor)) {\n        styles['border-width'] = addSizeSuffix(data.border);\n        styles['border-spacing'] = addSizeSuffix(data.cellspacing);\n      } else {\n        attrs.border = data.border;\n        attrs.cellpadding = data.cellpadding;\n        attrs.cellspacing = data.cellspacing;\n      }\n      if (shouldStyleWithCss(editor) && tableElm.children) {\n        for (var i = 0; i < tableElm.children.length; i++) {\n          styleTDTH(dom, tableElm.children[i], {\n            'border-width': addSizeSuffix(data.border),\n            'padding': addSizeSuffix(data.cellpadding)\n          });\n          if (hasAdvancedTableTab(editor)) {\n            styleTDTH(dom, tableElm.children[i], { 'border-color': data.bordercolor });\n          }\n        }\n      }\n      if (hasAdvancedTableTab(editor)) {\n        styles['background-color'] = data.backgroundcolor;\n        styles['border-color'] = data.bordercolor;\n        styles['border-style'] = data.borderstyle;\n      }\n      attrs.style = dom.serializeStyle(merge(getDefaultStyles(editor), styles));\n      dom.setAttribs(tableElm, merge(getDefaultAttributes(editor), attrs));\n    };\n    var onSubmitTableForm = function (editor, tableElm, api) {\n      var dom = editor.dom;\n      var captionElm;\n      var data = api.getData();\n      api.close();\n      if (data.class === '') {\n        delete data.class;\n      }\n      editor.undoManager.transact(function () {\n        if (!tableElm) {\n          var cols = parseInt(data.cols, 10) || 1;\n          var rows = parseInt(data.rows, 10) || 1;\n          tableElm = InsertTable.insert(editor, cols, rows);\n        }\n        applyDataToElement(editor, tableElm, data);\n        captionElm = dom.select('caption', tableElm)[0];\n        if (captionElm && !data.caption) {\n          dom.remove(captionElm);\n        }\n        if (!captionElm && data.caption) {\n          captionElm = dom.create('caption');\n          captionElm.innerHTML = !global$2.ie ? '<br data-mce-bogus=\"1\"/>' : '\\xA0';\n          tableElm.insertBefore(captionElm, tableElm.firstChild);\n        }\n        if (data.align === '') {\n          Styles$1.unApplyAlign(editor, tableElm);\n        } else {\n          Styles$1.applyAlign(editor, tableElm, data.align);\n        }\n        editor.focus();\n        editor.addVisual();\n      });\n    };\n    var open$2 = function (editor, isNew) {\n      var dom = editor.dom;\n      var tableElm;\n      var data = Helpers.extractDataFromSettings(editor, hasAdvancedTableTab(editor));\n      if (isNew === false) {\n        tableElm = dom.getParent(editor.selection.getStart(), 'table');\n        if (tableElm) {\n          data = Helpers.extractDataFromTableElement(editor, tableElm, hasAdvancedTableTab(editor));\n        } else {\n          if (hasAdvancedTableTab(editor)) {\n            data.borderstyle = '';\n            data.bordercolor = '';\n            data.backgroundcolor = '';\n          }\n        }\n      } else {\n        data.cols = '1';\n        data.rows = '1';\n        if (hasAdvancedTableTab(editor)) {\n          data.borderstyle = '';\n          data.bordercolor = '';\n          data.backgroundcolor = '';\n        }\n      }\n      var hasClasses = getTableClassList(editor).length > 0;\n      if (hasClasses) {\n        if (data.class) {\n          data.class = data.class.replace(/\\s*mce\\-item\\-table\\s*/g, '');\n        }\n      }\n      var rowColCountItems = !isNew ? [] : [\n        {\n          type: 'input',\n          name: 'cols',\n          label: 'Cols'\n        },\n        {\n          type: 'input',\n          name: 'rows',\n          label: 'Rows'\n        }\n      ];\n      var alwaysItems = [\n        {\n          type: 'input',\n          name: 'width',\n          label: 'Width'\n        },\n        {\n          type: 'input',\n          name: 'height',\n          label: 'Height'\n        }\n      ];\n      var appearanceItems = hasAppearanceOptions(editor) ? [\n        {\n          type: 'input',\n          name: 'cellspacing',\n          label: 'Cell spacing'\n        },\n        {\n          type: 'input',\n          name: 'cellpadding',\n          label: 'Cell padding'\n        },\n        {\n          type: 'input',\n          name: 'border',\n          label: 'Border width'\n        },\n        {\n          type: 'label',\n          label: 'Caption',\n          items: [{\n              type: 'checkbox',\n              name: 'caption',\n              label: 'Show caption'\n            }]\n        }\n      ] : [];\n      var alignmentItem = [{\n          type: 'selectbox',\n          name: 'align',\n          label: 'Alignment',\n          items: [\n            {\n              text: 'None',\n              value: ''\n            },\n            {\n              text: 'Left',\n              value: 'left'\n            },\n            {\n              text: 'Center',\n              value: 'center'\n            },\n            {\n              text: 'Right',\n              value: 'right'\n            }\n          ]\n        }];\n      var classListItem = hasClasses ? [{\n          type: 'selectbox',\n          name: 'class',\n          label: 'Class',\n          items: Helpers.buildListItems(getTableClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  block: 'table',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        }] : [];\n      var generalTabItems = rowColCountItems.concat(alwaysItems).concat(appearanceItems).concat(alignmentItem).concat(classListItem);\n      var generalPanel = {\n        type: 'grid',\n        columns: 2,\n        items: generalTabItems\n      };\n      var nonAdvancedForm = {\n        type: 'panel',\n        items: [generalPanel]\n      };\n      var advancedForm = {\n        type: 'tabpanel',\n        tabs: [\n          {\n            title: 'General',\n            items: [generalPanel]\n          },\n          Helpers.getAdvancedTab()\n        ]\n      };\n      var dialogBody = hasAdvancedTableTab(editor) ? advancedForm : nonAdvancedForm;\n      editor.windowManager.open({\n        title: 'Table Properties',\n        size: 'normal',\n        body: dialogBody,\n        onSubmit: curry(onSubmitTableForm, editor, tableElm),\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: data\n      });\n    };\n    var TableDialog = { open: open$2 };\n\n    var getSelectionStartFromSelector = function (selector) {\n      return function (editor) {\n        return Option.from(editor.dom.getParent(editor.selection.getStart(), selector)).map(Element.fromDom);\n      };\n    };\n    var getSelectionStartCell = getSelectionStartFromSelector('th,td');\n    var getSelectionStartCellOrCaption = getSelectionStartFromSelector('th,td,caption');\n\n    var each$3 = global$1.each;\n    var registerCommands = function (editor, actions, cellSelection, selections, clipboardRows) {\n      var isRoot = getIsRoot(editor);\n      var eraseTable = function () {\n        getSelectionStartCellOrCaption(editor).each(function (cellOrCaption) {\n          var tableOpt = TableLookup.table(cellOrCaption, isRoot);\n          tableOpt.filter(not(isRoot)).each(function (table) {\n            var cursor = Element.fromText('');\n            after(table, cursor);\n            remove$2(table);\n            if (editor.dom.isEmpty(editor.getBody())) {\n              editor.setContent('');\n              editor.selection.setCursorLocation();\n            } else {\n              var rng = editor.dom.createRng();\n              rng.setStart(cursor.dom(), 0);\n              rng.setEnd(cursor.dom(), 0);\n              editor.selection.setRng(rng);\n              editor.nodeChanged();\n            }\n          });\n        });\n      };\n      var getTableFromCell = function (cell) {\n        return TableLookup.table(cell, isRoot);\n      };\n      var getSize = function (table) {\n        return {\n          width: getPixelWidth$1(table.dom()),\n          height: getPixelWidth$1(table.dom())\n        };\n      };\n      var resizeChange = function (editor, oldSize, table) {\n        var newSize = getSize(table);\n        if (oldSize.width !== newSize.width || oldSize.height !== newSize.height) {\n          fireObjectResizeStart(editor, table.dom(), oldSize.width, oldSize.height);\n          fireObjectResized(editor, table.dom(), newSize.width, newSize.height);\n        }\n      };\n      var actOnSelection = function (execute) {\n        getSelectionStartCell(editor).each(function (cell) {\n          getTableFromCell(cell).each(function (table) {\n            var targets = TableTargets.forMenu(selections, table, cell);\n            var beforeSize = getSize(table);\n            execute(table, targets).each(function (rng) {\n              resizeChange(editor, beforeSize, table);\n              editor.selection.setRng(rng);\n              editor.focus();\n              cellSelection.clear(table);\n              removeDataStyle(table);\n            });\n          });\n        });\n      };\n      var copyRowSelection = function (execute) {\n        return getSelectionStartCell(editor).map(function (cell) {\n          return getTableFromCell(cell).bind(function (table) {\n            var doc = Element.fromDom(editor.getDoc());\n            var targets = TableTargets.forMenu(selections, table, cell);\n            var generators = TableFill.cellOperations(noop, doc, Option.none());\n            return CopyRows.copyRows(table, targets, generators);\n          });\n        });\n      };\n      var pasteOnSelection = function (execute) {\n        clipboardRows.get().each(function (rows) {\n          var clonedRows = map(rows, function (row) {\n            return deep(row);\n          });\n          getSelectionStartCell(editor).each(function (cell) {\n            getTableFromCell(cell).each(function (table) {\n              var doc = Element.fromDom(editor.getDoc());\n              var generators = TableFill.paste(doc);\n              var targets = TableTargets.pasteRows(selections, table, cell, clonedRows, generators);\n              execute(table, targets).each(function (rng) {\n                editor.selection.setRng(rng);\n                editor.focus();\n                cellSelection.clear(table);\n              });\n            });\n          });\n        });\n      };\n      each$3({\n        mceTableSplitCells: function () {\n          actOnSelection(actions.unmergeCells);\n        },\n        mceTableMergeCells: function () {\n          actOnSelection(actions.mergeCells);\n        },\n        mceTableInsertRowBefore: function () {\n          actOnSelection(actions.insertRowsBefore);\n        },\n        mceTableInsertRowAfter: function () {\n          actOnSelection(actions.insertRowsAfter);\n        },\n        mceTableInsertColBefore: function () {\n          actOnSelection(actions.insertColumnsBefore);\n        },\n        mceTableInsertColAfter: function () {\n          actOnSelection(actions.insertColumnsAfter);\n        },\n        mceTableDeleteCol: function () {\n          actOnSelection(actions.deleteColumn);\n        },\n        mceTableDeleteRow: function () {\n          actOnSelection(actions.deleteRow);\n        },\n        mceTableCutRow: function (grid) {\n          copyRowSelection().each(function (selection) {\n            clipboardRows.set(selection);\n            actOnSelection(actions.deleteRow);\n          });\n        },\n        mceTableCopyRow: function (grid) {\n          copyRowSelection().each(function (selection) {\n            clipboardRows.set(selection);\n          });\n        },\n        mceTablePasteRowBefore: function (grid) {\n          pasteOnSelection(actions.pasteRowsBefore);\n        },\n        mceTablePasteRowAfter: function (grid) {\n          pasteOnSelection(actions.pasteRowsAfter);\n        },\n        mceTableDelete: eraseTable\n      }, function (func, name) {\n        editor.addCommand(name, func);\n      });\n      each$3({\n        mceInsertTable: curry(TableDialog.open, editor, true),\n        mceTableProps: curry(TableDialog.open, editor, false),\n        mceTableRowProps: curry(RowDialog.open, editor),\n        mceTableCellProps: curry(CellDialog.open, editor)\n      }, function (func, name) {\n        editor.addCommand(name, function (ui, val) {\n          func(val);\n        });\n      });\n    };\n    var Commands = { registerCommands: registerCommands };\n\n    var only$1 = function (element) {\n      var parent = Option.from(element.dom().documentElement).map(Element.fromDom).getOr(element);\n      return {\n        parent: constant(parent),\n        view: constant(element),\n        origin: constant(Position(0, 0))\n      };\n    };\n    var detached = function (editable, chrome) {\n      var origin = curry(absolute, chrome);\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: origin\n      };\n    };\n    var body$1 = function (editable, chrome) {\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: constant(Position(0, 0))\n      };\n    };\n    var ResizeWire = {\n      only: only$1,\n      detached: detached,\n      body: body$1\n    };\n\n    function Event (fields) {\n      var struct = Immutable.apply(null, fields);\n      var handlers = [];\n      var bind = function (handler) {\n        if (handler === undefined) {\n          throw 'Event bind error: undefined handler';\n        }\n        handlers.push(handler);\n      };\n      var unbind = function (handler) {\n        handlers = filter(handlers, function (h) {\n          return h !== handler;\n        });\n      };\n      var trigger = function () {\n        var event = struct.apply(null, arguments);\n        each(handlers, function (handler) {\n          handler(event);\n        });\n      };\n      return {\n        bind: bind,\n        unbind: unbind,\n        trigger: trigger\n      };\n    }\n\n    var create = function (typeDefs) {\n      var registry = map$1(typeDefs, function (event) {\n        return {\n          bind: event.bind,\n          unbind: event.unbind\n        };\n      });\n      var trigger = map$1(typeDefs, function (event) {\n        return event.trigger;\n      });\n      return {\n        registry: registry,\n        trigger: trigger\n      };\n    };\n    var Events = { create: create };\n\n    var mode = exactly([\n      'compare',\n      'extract',\n      'mutate',\n      'sink'\n    ]);\n    var sink = exactly([\n      'element',\n      'start',\n      'stop',\n      'destroy'\n    ]);\n    var api$3 = exactly([\n      'forceDrop',\n      'drop',\n      'move',\n      'delayDrop'\n    ]);\n    var DragApis = {\n      mode: mode,\n      sink: sink,\n      api: api$3\n    };\n\n    var styles$1 = css('ephox-dragster');\n    var Styles$2 = { resolve: styles$1.resolve };\n\n    function Blocker (options) {\n      var settings = merge({ 'layerClass': Styles$2.resolve('blocker') }, options);\n      var div = Element.fromTag('div');\n      set(div, 'role', 'presentation');\n      setAll$1(div, {\n        position: 'fixed',\n        left: '0px',\n        top: '0px',\n        width: '100%',\n        height: '100%'\n      });\n      add$2(div, Styles$2.resolve('blocker'));\n      add$2(div, settings.layerClass);\n      var element = function () {\n        return div;\n      };\n      var destroy = function () {\n        remove$2(div);\n      };\n      return {\n        element: element,\n        destroy: destroy\n      };\n    }\n\n    var mkEvent = function (target, x, y, stop, prevent, kill, raw) {\n      return {\n        target: constant(target),\n        x: constant(x),\n        y: constant(y),\n        stop: stop,\n        prevent: prevent,\n        kill: kill,\n        raw: constant(raw)\n      };\n    };\n    var handle = function (filter, handler) {\n      return function (rawEvent) {\n        if (!filter(rawEvent)) {\n          return;\n        }\n        var target = Element.fromDom(rawEvent.target);\n        var stop = function () {\n          rawEvent.stopPropagation();\n        };\n        var prevent = function () {\n          rawEvent.preventDefault();\n        };\n        var kill = compose(prevent, stop);\n        var evt = mkEvent(target, rawEvent.clientX, rawEvent.clientY, stop, prevent, kill, rawEvent);\n        handler(evt);\n      };\n    };\n    var binder = function (element, event, filter, handler, useCapture) {\n      var wrapped = handle(filter, handler);\n      element.dom().addEventListener(event, wrapped, useCapture);\n      return { unbind: curry(unbind, element, event, wrapped, useCapture) };\n    };\n    var bind$1 = function (element, event, filter, handler) {\n      return binder(element, event, filter, handler, false);\n    };\n    var unbind = function (element, event, handler, useCapture) {\n      element.dom().removeEventListener(event, handler, useCapture);\n    };\n\n    var filter$1 = constant(true);\n    var bind$2 = function (element, event, handler) {\n      return bind$1(element, event, filter$1, handler);\n    };\n\n    var compare = function (old, nu) {\n      return Position(nu.left() - old.left(), nu.top() - old.top());\n    };\n    var extract$1 = function (event) {\n      return Option.some(Position(event.x(), event.y()));\n    };\n    var mutate = function (mutation, info) {\n      mutation.mutate(info.left(), info.top());\n    };\n    var sink$1 = function (dragApi, settings) {\n      var blocker = Blocker(settings);\n      var mdown = bind$2(blocker.element(), 'mousedown', dragApi.forceDrop);\n      var mup = bind$2(blocker.element(), 'mouseup', dragApi.drop);\n      var mmove = bind$2(blocker.element(), 'mousemove', dragApi.move);\n      var mout = bind$2(blocker.element(), 'mouseout', dragApi.delayDrop);\n      var destroy = function () {\n        blocker.destroy();\n        mup.unbind();\n        mmove.unbind();\n        mout.unbind();\n        mdown.unbind();\n      };\n      var start = function (parent) {\n        append(parent, blocker.element());\n      };\n      var stop = function () {\n        remove$2(blocker.element());\n      };\n      return DragApis.sink({\n        element: blocker.element,\n        start: start,\n        stop: stop,\n        destroy: destroy\n      });\n    };\n    var MouseDrag = DragApis.mode({\n      compare: compare,\n      extract: extract$1,\n      sink: sink$1,\n      mutate: mutate\n    });\n\n    function InDrag () {\n      var previous = Option.none();\n      var reset = function () {\n        previous = Option.none();\n      };\n      var update = function (mode, nu) {\n        var result = previous.map(function (old) {\n          return mode.compare(old, nu);\n        });\n        previous = Option.some(nu);\n        return result;\n      };\n      var onEvent = function (event, mode) {\n        var dataOption = mode.extract(event);\n        dataOption.each(function (data) {\n          var offset = update(mode, data);\n          offset.each(function (d) {\n            events.trigger.move(d);\n          });\n        });\n      };\n      var events = Events.create({ move: Event(['info']) });\n      return {\n        onEvent: onEvent,\n        reset: reset,\n        events: events.registry\n      };\n    }\n\n    function NoDrag (anchor) {\n      var onEvent = function (event, mode) {\n      };\n      return {\n        onEvent: onEvent,\n        reset: noop\n      };\n    }\n\n    function Movement () {\n      var noDragState = NoDrag();\n      var inDragState = InDrag();\n      var dragState = noDragState;\n      var on = function () {\n        dragState.reset();\n        dragState = inDragState;\n      };\n      var off = function () {\n        dragState.reset();\n        dragState = noDragState;\n      };\n      var onEvent = function (event, mode) {\n        dragState.onEvent(event, mode);\n      };\n      var isOn = function () {\n        return dragState === inDragState;\n      };\n      return {\n        on: on,\n        off: off,\n        isOn: isOn,\n        onEvent: onEvent,\n        events: inDragState.events\n      };\n    }\n\n    var last$2 = function (fn, rate) {\n      var timer = null;\n      var cancel = function () {\n        if (timer !== null) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      var throttle = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (timer !== null)\n          clearTimeout(timer);\n        timer = setTimeout(function () {\n          fn.apply(null, args);\n          timer = null;\n        }, rate);\n      };\n      return {\n        cancel: cancel,\n        throttle: throttle\n      };\n    };\n\n    var setup = function (mutation, mode, settings) {\n      var active = false;\n      var events = Events.create({\n        start: Event([]),\n        stop: Event([])\n      });\n      var movement = Movement();\n      var drop = function () {\n        sink.stop();\n        if (movement.isOn()) {\n          movement.off();\n          events.trigger.stop();\n        }\n      };\n      var throttledDrop = last$2(drop, 200);\n      var go = function (parent) {\n        sink.start(parent);\n        movement.on();\n        events.trigger.start();\n      };\n      var mousemove = function (event, ui) {\n        throttledDrop.cancel();\n        movement.onEvent(event, mode);\n      };\n      movement.events.move.bind(function (event) {\n        mode.mutate(mutation, event.info());\n      });\n      var on = function () {\n        active = true;\n      };\n      var off = function () {\n        active = false;\n      };\n      var runIfActive = function (f) {\n        return function () {\n          var args = Array.prototype.slice.call(arguments, 0);\n          if (active) {\n            return f.apply(null, args);\n          }\n        };\n      };\n      var sink = mode.sink(DragApis.api({\n        forceDrop: drop,\n        drop: runIfActive(drop),\n        move: runIfActive(mousemove),\n        delayDrop: runIfActive(throttledDrop.throttle)\n      }), settings);\n      var destroy = function () {\n        sink.destroy();\n      };\n      return {\n        element: sink.element,\n        go: go,\n        on: on,\n        off: off,\n        destroy: destroy,\n        events: events.registry\n      };\n    };\n    var Dragging = { setup: setup };\n\n    var transform$1 = function (mutation, options) {\n      var settings = options !== undefined ? options : {};\n      var mode = settings.mode !== undefined ? settings.mode : MouseDrag;\n      return Dragging.setup(mutation, mode, options);\n    };\n    var Dragger = { transform: transform$1 };\n\n    var closest$2 = function (scope, selector, isRoot) {\n      return closest$1(scope, selector, isRoot).isSome();\n    };\n\n    function Mutation () {\n      var events = Events.create({\n        drag: Event([\n          'xDelta',\n          'yDelta'\n        ])\n      });\n      var mutate = function (x, y) {\n        events.trigger.drag(x, y);\n      };\n      return {\n        mutate: mutate,\n        events: events.registry\n      };\n    }\n\n    function BarMutation () {\n      var events = Events.create({\n        drag: Event([\n          'xDelta',\n          'yDelta',\n          'target'\n        ])\n      });\n      var target = Option.none();\n      var delegate = Mutation();\n      delegate.events.drag.bind(function (event) {\n        target.each(function (t) {\n          events.trigger.drag(event.xDelta(), event.yDelta(), t);\n        });\n      });\n      var assign = function (t) {\n        target = Option.some(t);\n      };\n      var get = function () {\n        return target;\n      };\n      return {\n        assign: assign,\n        get: get,\n        mutate: delegate.mutate,\n        events: events.registry\n      };\n    }\n\n    var resizeBarDragging = Styles.resolve('resizer-bar-dragging');\n    function BarManager (wire, direction, hdirection) {\n      var mutation = BarMutation();\n      var resizing = Dragger.transform(mutation, {});\n      var hoverTable = Option.none();\n      var getResizer = function (element, type) {\n        return Option.from(get$1(element, type));\n      };\n      mutation.events.drag.bind(function (event) {\n        getResizer(event.target(), 'data-row').each(function (_dataRow) {\n          var currentRow = CellUtils.getInt(event.target(), 'top');\n          set$1(event.target(), 'top', currentRow + event.yDelta() + 'px');\n        });\n        getResizer(event.target(), 'data-column').each(function (_dataCol) {\n          var currentCol = CellUtils.getInt(event.target(), 'left');\n          set$1(event.target(), 'left', currentCol + event.xDelta() + 'px');\n        });\n      });\n      var getDelta = function (target, dir) {\n        var newX = CellUtils.getInt(target, dir);\n        var oldX = parseInt(get$1(target, 'data-initial-' + dir), 10);\n        return newX - oldX;\n      };\n      resizing.events.stop.bind(function () {\n        mutation.get().each(function (target) {\n          hoverTable.each(function (table) {\n            getResizer(target, 'data-row').each(function (row) {\n              var delta = getDelta(target, 'top');\n              remove(target, 'data-initial-top');\n              events.trigger.adjustHeight(table, delta, parseInt(row, 10));\n            });\n            getResizer(target, 'data-column').each(function (column) {\n              var delta = getDelta(target, 'left');\n              remove(target, 'data-initial-left');\n              events.trigger.adjustWidth(table, delta, parseInt(column, 10));\n            });\n            Bars.refresh(wire, table, hdirection, direction);\n          });\n        });\n      });\n      var handler = function (target, dir) {\n        events.trigger.startAdjust();\n        mutation.assign(target);\n        set(target, 'data-initial-' + dir, parseInt(get$2(target, dir), 10));\n        add$2(target, resizeBarDragging);\n        set$1(target, 'opacity', '0.2');\n        resizing.go(wire.parent());\n      };\n      var mousedown = bind$2(wire.parent(), 'mousedown', function (event) {\n        if (Bars.isRowBar(event.target())) {\n          handler(event.target(), 'top');\n        }\n        if (Bars.isColBar(event.target())) {\n          handler(event.target(), 'left');\n        }\n      });\n      var isRoot = function (e) {\n        return eq(e, wire.view());\n      };\n      var mouseover = bind$2(wire.view(), 'mouseover', function (event) {\n        if (name(event.target()) === 'table' || closest$2(event.target(), 'table', isRoot)) {\n          hoverTable = name(event.target()) === 'table' ? Option.some(event.target()) : ancestor$1(event.target(), 'table', isRoot);\n          hoverTable.each(function (ht) {\n            Bars.refresh(wire, ht, hdirection, direction);\n          });\n        } else if (inBody(event.target())) {\n          Bars.destroy(wire);\n        }\n      });\n      var destroy = function () {\n        mousedown.unbind();\n        mouseover.unbind();\n        resizing.destroy();\n        Bars.destroy(wire);\n      };\n      var refresh = function (tbl) {\n        Bars.refresh(wire, tbl, hdirection, direction);\n      };\n      var events = Events.create({\n        adjustHeight: Event([\n          'table',\n          'delta',\n          'row'\n        ]),\n        adjustWidth: Event([\n          'table',\n          'delta',\n          'column'\n        ]),\n        startAdjust: Event([])\n      });\n      return {\n        destroy: destroy,\n        refresh: refresh,\n        on: resizing.on,\n        off: resizing.off,\n        hideBars: curry(Bars.hide, wire),\n        showBars: curry(Bars.show, wire),\n        events: events.registry\n      };\n    }\n\n    function TableResize (wire, vdirection) {\n      var hdirection = BarPositions.height;\n      var manager = BarManager(wire, vdirection, hdirection);\n      var events = Events.create({\n        beforeResize: Event(['table']),\n        afterResize: Event(['table']),\n        startDrag: Event([])\n      });\n      manager.events.adjustHeight.bind(function (event) {\n        events.trigger.beforeResize(event.table());\n        var delta = hdirection.delta(event.delta());\n        Adjustments.adjustHeight(event.table(), delta, event.row(), hdirection);\n        events.trigger.afterResize(event.table());\n      });\n      manager.events.startAdjust.bind(function (event) {\n        events.trigger.startDrag();\n      });\n      manager.events.adjustWidth.bind(function (event) {\n        events.trigger.beforeResize(event.table());\n        var delta = vdirection.delta(event.delta(), event.table());\n        Adjustments.adjustWidth(event.table(), delta, event.column(), vdirection);\n        events.trigger.afterResize(event.table());\n      });\n      return {\n        on: manager.on,\n        off: manager.off,\n        hideBars: manager.hideBars,\n        showBars: manager.showBars,\n        destroy: manager.destroy,\n        events: events.registry\n      };\n    }\n\n    var createContainer = function () {\n      var container = Element.fromTag('div');\n      setAll$1(container, {\n        position: 'static',\n        height: '0',\n        width: '0',\n        padding: '0',\n        margin: '0',\n        border: '0'\n      });\n      append(body(), container);\n      return container;\n    };\n    var get$9 = function (editor, container) {\n      return editor.inline ? ResizeWire.body(getBody$1(editor), createContainer()) : ResizeWire.only(Element.fromDom(editor.getDoc()));\n    };\n    var remove$6 = function (editor, wire) {\n      if (editor.inline) {\n        remove$2(wire.parent());\n      }\n    };\n    var TableWire = {\n      get: get$9,\n      remove: remove$6\n    };\n\n    var ResizeHandler = function (editor) {\n      var selectionRng = Option.none();\n      var resize = Option.none();\n      var wire = Option.none();\n      var percentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n      var startW, startRawW;\n      var isTable = function (elm) {\n        return elm.nodeName === 'TABLE';\n      };\n      var getRawWidth = function (elm) {\n        return editor.dom.getStyle(elm, 'width') || editor.dom.getAttrib(elm, 'width');\n      };\n      var lazyResize = function () {\n        return resize;\n      };\n      var lazyWire = function () {\n        return wire.getOr(ResizeWire.only(Element.fromDom(editor.getBody())));\n      };\n      var destroy = function () {\n        resize.each(function (sz) {\n          sz.destroy();\n        });\n        wire.each(function (w) {\n          TableWire.remove(editor, w);\n        });\n      };\n      editor.on('init', function () {\n        var direction = TableDirection(Direction.directionAt);\n        var rawWire = TableWire.get(editor);\n        wire = Option.some(rawWire);\n        if (hasObjectResizing(editor) && hasTableResizeBars(editor)) {\n          var sz = TableResize(rawWire, direction);\n          sz.on();\n          sz.events.startDrag.bind(function (event) {\n            selectionRng = Option.some(editor.selection.getRng());\n          });\n          sz.events.beforeResize.bind(function (event) {\n            var rawTable = event.table().dom();\n            fireObjectResizeStart(editor, rawTable, getPixelWidth$1(rawTable), getPixelHeight(rawTable));\n          });\n          sz.events.afterResize.bind(function (event) {\n            var table = event.table();\n            var rawTable = table.dom();\n            removeDataStyle(table);\n            selectionRng.each(function (rng) {\n              editor.selection.setRng(rng);\n              editor.focus();\n            });\n            fireObjectResized(editor, rawTable, getPixelWidth$1(rawTable), getPixelHeight(rawTable));\n            editor.undoManager.add();\n          });\n          resize = Option.some(sz);\n        }\n      });\n      editor.on('ObjectResizeStart', function (e) {\n        var targetElm = e.target;\n        if (isTable(targetElm)) {\n          startW = e.width;\n          startRawW = getRawWidth(targetElm);\n        }\n      });\n      editor.on('ObjectResized', function (e) {\n        var targetElm = e.target;\n        if (isTable(targetElm)) {\n          var table = targetElm;\n          if (percentageBasedSizeRegex.test(startRawW)) {\n            var percentW = parseFloat(percentageBasedSizeRegex.exec(startRawW)[1]);\n            var targetPercentW = e.width * percentW / startW;\n            editor.dom.setStyle(table, 'width', targetPercentW + '%');\n          } else {\n            var newCellSizes_1 = [];\n            global$1.each(table.rows, function (row) {\n              global$1.each(row.cells, function (cell) {\n                var width = editor.dom.getStyle(cell, 'width', true);\n                newCellSizes_1.push({\n                  cell: cell,\n                  width: width\n                });\n              });\n            });\n            global$1.each(newCellSizes_1, function (newCellSize) {\n              editor.dom.setStyle(newCellSize.cell, 'width', newCellSize.width);\n              editor.dom.setAttrib(newCellSize.cell, 'width', null);\n            });\n          }\n        }\n      });\n      return {\n        lazyResize: lazyResize,\n        lazyWire: lazyWire,\n        destroy: destroy\n      };\n    };\n\n    var folder$1 = function (fold) {\n      return { fold: fold };\n    };\n    var none$2 = function (current) {\n      return folder$1(function (n, f, m, l) {\n        return n(current);\n      });\n    };\n    var first$1 = function (current) {\n      return folder$1(function (n, f, m, l) {\n        return f(current);\n      });\n    };\n    var middle$1 = function (current, target) {\n      return folder$1(function (n, f, m, l) {\n        return m(current, target);\n      });\n    };\n    var last$3 = function (current) {\n      return folder$1(function (n, f, m, l) {\n        return l(current);\n      });\n    };\n    var CellLocation = {\n      none: none$2,\n      first: first$1,\n      middle: middle$1,\n      last: last$3\n    };\n\n    var detect$4 = function (current, isRoot) {\n      return TableLookup.table(current, isRoot).bind(function (table) {\n        var all = TableLookup.cells(table);\n        var index = findIndex(all, function (x) {\n          return eq(current, x);\n        });\n        return index.map(function (ind) {\n          return {\n            index: constant(ind),\n            all: constant(all)\n          };\n        });\n      });\n    };\n    var next = function (current, isRoot) {\n      var detection = detect$4(current, isRoot);\n      return detection.fold(function () {\n        return CellLocation.none(current);\n      }, function (info) {\n        return info.index() + 1 < info.all().length ? CellLocation.middle(current, info.all()[info.index() + 1]) : CellLocation.last(current);\n      });\n    };\n    var prev = function (current, isRoot) {\n      var detection = detect$4(current, isRoot);\n      return detection.fold(function () {\n        return CellLocation.none();\n      }, function (info) {\n        return info.index() - 1 >= 0 ? CellLocation.middle(current, info.all()[info.index() - 1]) : CellLocation.first(current);\n      });\n    };\n    var CellNavigation = {\n      next: next,\n      prev: prev\n    };\n\n    var adt = Adt.generate([\n      { before: ['element'] },\n      {\n        on: [\n          'element',\n          'offset'\n        ]\n      },\n      { after: ['element'] }\n    ]);\n    var cata$1 = function (subject, onBefore, onOn, onAfter) {\n      return subject.fold(onBefore, onOn, onAfter);\n    };\n    var getStart = function (situ) {\n      return situ.fold(identity, identity, identity);\n    };\n    var before$2 = adt.before;\n    var on = adt.on;\n    var after$2 = adt.after;\n    var Situ = {\n      before: before$2,\n      on: on,\n      after: after$2,\n      cata: cata$1,\n      getStart: getStart\n    };\n\n    var type$2 = Adt.generate([\n      { domRange: ['rng'] },\n      {\n        relative: [\n          'startSitu',\n          'finishSitu'\n        ]\n      },\n      {\n        exact: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    var range$1 = Immutable('start', 'soffset', 'finish', 'foffset');\n    var getStart$1 = function (selection) {\n      return selection.match({\n        domRange: function (rng) {\n          return Element.fromDom(rng.startContainer);\n        },\n        relative: function (startSitu, finishSitu) {\n          return Situ.getStart(startSitu);\n        },\n        exact: function (start, soffset, finish, foffset) {\n          return start;\n        }\n      });\n    };\n    var getWin = function (selection) {\n      var start = getStart$1(selection);\n      return defaultView(start);\n    };\n    var domRange = type$2.domRange;\n    var relative = type$2.relative;\n    var exact = type$2.exact;\n\n    var makeRange = function (start, soffset, finish, foffset) {\n      var doc = owner(start);\n      var rng = doc.dom().createRange();\n      rng.setStart(start.dom(), soffset);\n      rng.setEnd(finish.dom(), foffset);\n      return rng;\n    };\n    var after$3 = function (start, soffset, finish, foffset) {\n      var r = makeRange(start, soffset, finish, foffset);\n      var same = eq(start, finish) && soffset === foffset;\n      return r.collapsed && !same;\n    };\n\n    var selectNodeContents = function (win, element) {\n      var rng = win.document.createRange();\n      selectNodeContentsUsing(rng, element);\n      return rng;\n    };\n    var selectNodeContentsUsing = function (rng, element) {\n      rng.selectNodeContents(element.dom());\n    };\n    var setStart = function (rng, situ) {\n      situ.fold(function (e) {\n        rng.setStartBefore(e.dom());\n      }, function (e, o) {\n        rng.setStart(e.dom(), o);\n      }, function (e) {\n        rng.setStartAfter(e.dom());\n      });\n    };\n    var setFinish = function (rng, situ) {\n      situ.fold(function (e) {\n        rng.setEndBefore(e.dom());\n      }, function (e, o) {\n        rng.setEnd(e.dom(), o);\n      }, function (e) {\n        rng.setEndAfter(e.dom());\n      });\n    };\n    var relativeToNative = function (win, startSitu, finishSitu) {\n      var range = win.document.createRange();\n      setStart(range, startSitu);\n      setFinish(range, finishSitu);\n      return range;\n    };\n    var exactToNative = function (win, start, soffset, finish, foffset) {\n      var rng = win.document.createRange();\n      rng.setStart(start.dom(), soffset);\n      rng.setEnd(finish.dom(), foffset);\n      return rng;\n    };\n    var toRect = function (rect) {\n      return {\n        left: constant(rect.left),\n        top: constant(rect.top),\n        right: constant(rect.right),\n        bottom: constant(rect.bottom),\n        width: constant(rect.width),\n        height: constant(rect.height)\n      };\n    };\n    var getFirstRect = function (rng) {\n      var rects = rng.getClientRects();\n      var rect = rects.length > 0 ? rects[0] : rng.getBoundingClientRect();\n      return rect.width > 0 || rect.height > 0 ? Option.some(rect).map(toRect) : Option.none();\n    };\n\n    var adt$1 = Adt.generate([\n      {\n        ltr: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      },\n      {\n        rtl: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    var fromRange = function (win, type, range) {\n      return type(Element.fromDom(range.startContainer), range.startOffset, Element.fromDom(range.endContainer), range.endOffset);\n    };\n    var getRanges = function (win, selection) {\n      return selection.match({\n        domRange: function (rng) {\n          return {\n            ltr: constant(rng),\n            rtl: Option.none\n          };\n        },\n        relative: function (startSitu, finishSitu) {\n          return {\n            ltr: cached(function () {\n              return relativeToNative(win, startSitu, finishSitu);\n            }),\n            rtl: cached(function () {\n              return Option.some(relativeToNative(win, finishSitu, startSitu));\n            })\n          };\n        },\n        exact: function (start, soffset, finish, foffset) {\n          return {\n            ltr: cached(function () {\n              return exactToNative(win, start, soffset, finish, foffset);\n            }),\n            rtl: cached(function () {\n              return Option.some(exactToNative(win, finish, foffset, start, soffset));\n            })\n          };\n        }\n      });\n    };\n    var doDiagnose = function (win, ranges) {\n      var rng = ranges.ltr();\n      if (rng.collapsed) {\n        var reversed = ranges.rtl().filter(function (rev) {\n          return rev.collapsed === false;\n        });\n        return reversed.map(function (rev) {\n          return adt$1.rtl(Element.fromDom(rev.endContainer), rev.endOffset, Element.fromDom(rev.startContainer), rev.startOffset);\n        }).getOrThunk(function () {\n          return fromRange(win, adt$1.ltr, rng);\n        });\n      } else {\n        return fromRange(win, adt$1.ltr, rng);\n      }\n    };\n    var diagnose = function (win, selection) {\n      var ranges = getRanges(win, selection);\n      return doDiagnose(win, ranges);\n    };\n    var asLtrRange = function (win, selection) {\n      var diagnosis = diagnose(win, selection);\n      return diagnosis.match({\n        ltr: function (start, soffset, finish, foffset) {\n          var rng = win.document.createRange();\n          rng.setStart(start.dom(), soffset);\n          rng.setEnd(finish.dom(), foffset);\n          return rng;\n        },\n        rtl: function (start, soffset, finish, foffset) {\n          var rng = win.document.createRange();\n          rng.setStart(finish.dom(), foffset);\n          rng.setEnd(start.dom(), soffset);\n          return rng;\n        }\n      });\n    };\n    var ltr$2 = adt$1.ltr;\n    var rtl$2 = adt$1.rtl;\n\n    var searchForPoint = function (rectForOffset, x, y, maxX, length) {\n      if (length === 0) {\n        return 0;\n      } else if (x === maxX) {\n        return length - 1;\n      }\n      var xDelta = maxX;\n      for (var i = 1; i < length; i++) {\n        var rect = rectForOffset(i);\n        var curDeltaX = Math.abs(x - rect.left);\n        if (y <= rect.bottom) {\n          if (y < rect.top || curDeltaX > xDelta) {\n            return i - 1;\n          } else {\n            xDelta = curDeltaX;\n          }\n        }\n      }\n      return 0;\n    };\n    var inRect = function (rect, x, y) {\n      return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n    };\n\n    var locateOffset = function (doc, textnode, x, y, rect) {\n      var rangeForOffset = function (o) {\n        var r = doc.dom().createRange();\n        r.setStart(textnode.dom(), o);\n        r.collapse(true);\n        return r;\n      };\n      var rectForOffset = function (o) {\n        var r = rangeForOffset(o);\n        return r.getBoundingClientRect();\n      };\n      var length = get$3(textnode).length;\n      var offset = searchForPoint(rectForOffset, x, y, rect.right, length);\n      return rangeForOffset(offset);\n    };\n    var locate = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rects = r.getClientRects();\n      var foundRect = findMap(rects, function (rect) {\n        return inRect(rect, x, y) ? Option.some(rect) : Option.none();\n      });\n      return foundRect.map(function (rect) {\n        return locateOffset(doc, node, x, y, rect);\n      });\n    };\n\n    var searchInChildren = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      var nodes = children(node);\n      return findMap(nodes, function (n) {\n        r.selectNode(n.dom());\n        return inRect(r.getBoundingClientRect(), x, y) ? locateNode(doc, n, x, y) : Option.none();\n      });\n    };\n    var locateNode = function (doc, node, x, y) {\n      var locator = isText(node) ? locate : searchInChildren;\n      return locator(doc, node, x, y);\n    };\n    var locate$1 = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rect = r.getBoundingClientRect();\n      var boundedX = Math.max(rect.left, Math.min(rect.right, x));\n      var boundedY = Math.max(rect.top, Math.min(rect.bottom, y));\n      return locateNode(doc, node, boundedX, boundedY);\n    };\n\n    var COLLAPSE_TO_LEFT = true;\n    var COLLAPSE_TO_RIGHT = false;\n    var getCollapseDirection = function (rect, x) {\n      return x - rect.left < rect.right - x ? COLLAPSE_TO_LEFT : COLLAPSE_TO_RIGHT;\n    };\n    var createCollapsedNode = function (doc, target, collapseDirection) {\n      var r = doc.dom().createRange();\n      r.selectNode(target.dom());\n      r.collapse(collapseDirection);\n      return r;\n    };\n    var locateInElement = function (doc, node, x) {\n      var cursorRange = doc.dom().createRange();\n      cursorRange.selectNode(node.dom());\n      var rect = cursorRange.getBoundingClientRect();\n      var collapseDirection = getCollapseDirection(rect, x);\n      var f = collapseDirection === COLLAPSE_TO_LEFT ? first : last$1;\n      return f(node).map(function (target) {\n        return createCollapsedNode(doc, target, collapseDirection);\n      });\n    };\n    var locateInEmpty = function (doc, node, x) {\n      var rect = node.dom().getBoundingClientRect();\n      var collapseDirection = getCollapseDirection(rect, x);\n      return Option.some(createCollapsedNode(doc, node, collapseDirection));\n    };\n    var search = function (doc, node, x) {\n      var f = children(node).length === 0 ? locateInEmpty : locateInElement;\n      return f(doc, node, x);\n    };\n\n    var caretPositionFromPoint = function (doc, x, y) {\n      return Option.from(doc.dom().caretPositionFromPoint(x, y)).bind(function (pos) {\n        if (pos.offsetNode === null) {\n          return Option.none();\n        }\n        var r = doc.dom().createRange();\n        r.setStart(pos.offsetNode, pos.offset);\n        r.collapse();\n        return Option.some(r);\n      });\n    };\n    var caretRangeFromPoint = function (doc, x, y) {\n      return Option.from(doc.dom().caretRangeFromPoint(x, y));\n    };\n    var searchTextNodes = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rect = r.getBoundingClientRect();\n      var boundedX = Math.max(rect.left, Math.min(rect.right, x));\n      var boundedY = Math.max(rect.top, Math.min(rect.bottom, y));\n      return locate$1(doc, node, boundedX, boundedY);\n    };\n    var searchFromPoint = function (doc, x, y) {\n      return Element.fromPoint(doc, x, y).bind(function (elem) {\n        var fallback = function () {\n          return search(doc, elem, x);\n        };\n        return children(elem).length === 0 ? fallback() : searchTextNodes(doc, elem, x, y).orThunk(fallback);\n      });\n    };\n    var availableSearch = document.caretPositionFromPoint ? caretPositionFromPoint : document.caretRangeFromPoint ? caretRangeFromPoint : searchFromPoint;\n    var fromPoint$1 = function (win, x, y) {\n      var doc = Element.fromDom(win.document);\n      return availableSearch(doc, x, y).map(function (rng) {\n        return range$1(Element.fromDom(rng.startContainer), rng.startOffset, Element.fromDom(rng.endContainer), rng.endOffset);\n      });\n    };\n\n    var beforeSpecial = function (element, offset) {\n      var name$1 = name(element);\n      if ('input' === name$1) {\n        return Situ.after(element);\n      } else if (!contains([\n          'br',\n          'img'\n        ], name$1)) {\n        return Situ.on(element, offset);\n      } else {\n        return offset === 0 ? Situ.before(element) : Situ.after(element);\n      }\n    };\n    var preprocessRelative = function (startSitu, finishSitu) {\n      var start = startSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      var finish = finishSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      return relative(start, finish);\n    };\n    var preprocessExact = function (start, soffset, finish, foffset) {\n      var startSitu = beforeSpecial(start, soffset);\n      var finishSitu = beforeSpecial(finish, foffset);\n      return relative(startSitu, finishSitu);\n    };\n    var preprocess = function (selection) {\n      return selection.match({\n        domRange: function (rng) {\n          var start = Element.fromDom(rng.startContainer);\n          var finish = Element.fromDom(rng.endContainer);\n          return preprocessExact(start, rng.startOffset, finish, rng.endOffset);\n        },\n        relative: preprocessRelative,\n        exact: preprocessExact\n      });\n    };\n\n    var doSetNativeRange = function (win, rng) {\n      Option.from(win.getSelection()).each(function (selection) {\n        selection.removeAllRanges();\n        selection.addRange(rng);\n      });\n    };\n    var doSetRange = function (win, start, soffset, finish, foffset) {\n      var rng = exactToNative(win, start, soffset, finish, foffset);\n      doSetNativeRange(win, rng);\n    };\n    var setLegacyRtlRange = function (win, selection, start, soffset, finish, foffset) {\n      selection.collapse(start.dom(), soffset);\n      selection.extend(finish.dom(), foffset);\n    };\n    var setRangeFromRelative = function (win, relative) {\n      return diagnose(win, relative).match({\n        ltr: function (start, soffset, finish, foffset) {\n          doSetRange(win, start, soffset, finish, foffset);\n        },\n        rtl: function (start, soffset, finish, foffset) {\n          var selection = win.getSelection();\n          if (selection.setBaseAndExtent) {\n            selection.setBaseAndExtent(start.dom(), soffset, finish.dom(), foffset);\n          } else if (selection.extend) {\n            try {\n              setLegacyRtlRange(win, selection, start, soffset, finish, foffset);\n            } catch (e) {\n              doSetRange(win, finish, foffset, start, soffset);\n            }\n          } else {\n            doSetRange(win, finish, foffset, start, soffset);\n          }\n        }\n      });\n    };\n    var setExact = function (win, start, soffset, finish, foffset) {\n      var relative = preprocessExact(start, soffset, finish, foffset);\n      setRangeFromRelative(win, relative);\n    };\n    var setRelative = function (win, startSitu, finishSitu) {\n      var relative = preprocessRelative(startSitu, finishSitu);\n      setRangeFromRelative(win, relative);\n    };\n    var toNative = function (selection) {\n      var win = getWin(selection).dom();\n      var getDomRange = function (start, soffset, finish, foffset) {\n        return exactToNative(win, start, soffset, finish, foffset);\n      };\n      var filtered = preprocess(selection);\n      return diagnose(win, filtered).match({\n        ltr: getDomRange,\n        rtl: getDomRange\n      });\n    };\n    var readRange = function (selection) {\n      if (selection.rangeCount > 0) {\n        var firstRng = selection.getRangeAt(0);\n        var lastRng = selection.getRangeAt(selection.rangeCount - 1);\n        return Option.some(range$1(Element.fromDom(firstRng.startContainer), firstRng.startOffset, Element.fromDom(lastRng.endContainer), lastRng.endOffset));\n      } else {\n        return Option.none();\n      }\n    };\n    var doGetExact = function (selection) {\n      var anchor = Element.fromDom(selection.anchorNode);\n      var focus = Element.fromDom(selection.focusNode);\n      return after$3(anchor, selection.anchorOffset, focus, selection.focusOffset) ? Option.some(range$1(anchor, selection.anchorOffset, focus, selection.focusOffset)) : readRange(selection);\n    };\n    var setToElement = function (win, element) {\n      var rng = selectNodeContents(win, element);\n      doSetNativeRange(win, rng);\n    };\n    var getExact = function (win) {\n      return Option.from(win.getSelection()).filter(function (sel) {\n        return sel.rangeCount > 0;\n      }).bind(doGetExact);\n    };\n    var get$a = function (win) {\n      return getExact(win).map(function (range) {\n        return exact(range.start(), range.soffset(), range.finish(), range.foffset());\n      });\n    };\n    var getFirstRect$1 = function (win, selection) {\n      var rng = asLtrRange(win, selection);\n      return getFirstRect(rng);\n    };\n    var getAtPoint = function (win, x, y) {\n      return fromPoint$1(win, x, y);\n    };\n    var clear$1 = function (win) {\n      var selection = win.getSelection();\n      selection.removeAllRanges();\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var forward = function (editor, isRoot, cell, lazyWire) {\n      return go(editor, isRoot, CellNavigation.next(cell), lazyWire);\n    };\n    var backward = function (editor, isRoot, cell, lazyWire) {\n      return go(editor, isRoot, CellNavigation.prev(cell), lazyWire);\n    };\n    var getCellFirstCursorPosition = function (editor, cell) {\n      var selection = exact(cell, 0, cell, 0);\n      return toNative(selection);\n    };\n    var getNewRowCursorPosition = function (editor, table) {\n      var rows = descendants$1(table, 'tr');\n      return last(rows).bind(function (last) {\n        return descendant$1(last, 'td,th').map(function (first) {\n          return getCellFirstCursorPosition(editor, first);\n        });\n      });\n    };\n    var go = function (editor, isRoot, cell, actions, lazyWire) {\n      return cell.fold(Option.none, Option.none, function (current, next) {\n        return first(next).map(function (cell) {\n          return getCellFirstCursorPosition(editor, cell);\n        });\n      }, function (current) {\n        return TableLookup.table(current, isRoot).bind(function (table) {\n          var targets = TableTargets.noMenu(current);\n          editor.undoManager.transact(function () {\n            actions.insertRowsAfter(table, targets);\n          });\n          return getNewRowCursorPosition(editor, table);\n        });\n      });\n    };\n    var rootElements = [\n      'table',\n      'li',\n      'dl'\n    ];\n    var handle$1 = function (event, editor, actions, lazyWire) {\n      if (event.keyCode === global$3.TAB) {\n        var body_1 = getBody$1(editor);\n        var isRoot_1 = function (element) {\n          var name$1 = name(element);\n          return eq(element, body_1) || contains(rootElements, name$1);\n        };\n        var rng = editor.selection.getRng();\n        if (rng.collapsed) {\n          var start = Element.fromDom(rng.startContainer);\n          TableLookup.cell(start, isRoot_1).each(function (cell) {\n            event.preventDefault();\n            var navigation = event.shiftKey ? backward : forward;\n            var rng = navigation(editor, isRoot_1, cell, actions, lazyWire);\n            rng.each(function (range) {\n              editor.selection.setRng(range);\n            });\n          });\n        }\n      }\n    };\n    var TabContext = { handle: handle$1 };\n\n    var response = Immutable('selection', 'kill');\n    var Responses = { response: response };\n\n    var isKey = function (key) {\n      return function (keycode) {\n        return keycode === key;\n      };\n    };\n    var isUp = isKey(38);\n    var isDown = isKey(40);\n    var isNavigation = function (keycode) {\n      return keycode >= 37 && keycode <= 40;\n    };\n    var SelectionKeys = {\n      ltr: {\n        isBackward: isKey(37),\n        isForward: isKey(39)\n      },\n      rtl: {\n        isBackward: isKey(39),\n        isForward: isKey(37)\n      },\n      isUp: isUp,\n      isDown: isDown,\n      isNavigation: isNavigation\n    };\n\n    var convertToRange = function (win, selection) {\n      var rng = asLtrRange(win, selection);\n      return {\n        start: constant(Element.fromDom(rng.startContainer)),\n        soffset: constant(rng.startOffset),\n        finish: constant(Element.fromDom(rng.endContainer)),\n        foffset: constant(rng.endOffset)\n      };\n    };\n    var makeSitus = function (start, soffset, finish, foffset) {\n      return {\n        start: constant(Situ.on(start, soffset)),\n        finish: constant(Situ.on(finish, foffset))\n      };\n    };\n    var Util$1 = {\n      convertToRange: convertToRange,\n      makeSitus: makeSitus\n    };\n\n    var isSafari = PlatformDetection$1.detect().browser.isSafari();\n    var get$b = function (_DOC) {\n      var doc = _DOC !== undefined ? _DOC.dom() : domGlobals.document;\n      var x = doc.body.scrollLeft || doc.documentElement.scrollLeft;\n      var y = doc.body.scrollTop || doc.documentElement.scrollTop;\n      return Position(x, y);\n    };\n    var by = function (x, y, _DOC) {\n      var doc = _DOC !== undefined ? _DOC.dom() : domGlobals.document;\n      var win = doc.defaultView;\n      win.scrollBy(x, y);\n    };\n\n    function WindowBridge (win) {\n      var elementFromPoint = function (x, y) {\n        return Element.fromPoint(Element.fromDom(win.document), x, y);\n      };\n      var getRect = function (element) {\n        return element.dom().getBoundingClientRect();\n      };\n      var getRangedRect = function (start, soffset, finish, foffset) {\n        var sel = exact(start, soffset, finish, foffset);\n        return getFirstRect$1(win, sel).map(function (structRect) {\n          return map$1(structRect, apply);\n        });\n      };\n      var getSelection = function () {\n        return get$a(win).map(function (exactAdt) {\n          return Util$1.convertToRange(win, exactAdt);\n        });\n      };\n      var fromSitus = function (situs) {\n        var relative$1 = relative(situs.start(), situs.finish());\n        return Util$1.convertToRange(win, relative$1);\n      };\n      var situsFromPoint = function (x, y) {\n        return getAtPoint(win, x, y).map(function (exact) {\n          return {\n            start: constant(Situ.on(exact.start(), exact.soffset())),\n            finish: constant(Situ.on(exact.finish(), exact.foffset()))\n          };\n        });\n      };\n      var clearSelection = function () {\n        clear$1(win);\n      };\n      var selectContents = function (element) {\n        setToElement(win, element);\n      };\n      var setSelection = function (sel) {\n        setExact(win, sel.start(), sel.soffset(), sel.finish(), sel.foffset());\n      };\n      var setRelativeSelection = function (start, finish) {\n        setRelative(win, start, finish);\n      };\n      var getInnerHeight = function () {\n        return win.innerHeight;\n      };\n      var getScrollY = function () {\n        var pos = get$b(Element.fromDom(win.document));\n        return pos.top();\n      };\n      var scrollBy = function (x, y) {\n        by(x, y, Element.fromDom(win.document));\n      };\n      return {\n        elementFromPoint: elementFromPoint,\n        getRect: getRect,\n        getRangedRect: getRangedRect,\n        getSelection: getSelection,\n        fromSitus: fromSitus,\n        situsFromPoint: situsFromPoint,\n        clearSelection: clearSelection,\n        setSelection: setSelection,\n        setRelativeSelection: setRelativeSelection,\n        selectContents: selectContents,\n        getInnerHeight: getInnerHeight,\n        getScrollY: getScrollY,\n        scrollBy: scrollBy\n      };\n    }\n\n    var sync = function (container, isRoot, start, soffset, finish, foffset, selectRange) {\n      if (!(eq(start, finish) && soffset === foffset)) {\n        return closest$1(start, 'td,th', isRoot).bind(function (s) {\n          return closest$1(finish, 'td,th', isRoot).bind(function (f) {\n            return detect$5(container, isRoot, s, f, selectRange);\n          });\n        });\n      } else {\n        return Option.none();\n      }\n    };\n    var detect$5 = function (container, isRoot, start, finish, selectRange) {\n      if (!eq(start, finish)) {\n        return CellSelection.identify(start, finish, isRoot).bind(function (cellSel) {\n          var boxes = cellSel.boxes().getOr([]);\n          if (boxes.length > 0) {\n            selectRange(container, boxes, cellSel.start(), cellSel.finish());\n            return Option.some(Responses.response(Option.some(Util$1.makeSitus(start, 0, start, getEnd(start))), true));\n          } else {\n            return Option.none();\n          }\n        });\n      } else {\n        return Option.none();\n      }\n    };\n    var update = function (rows, columns, container, selected, annotations) {\n      var updateSelection = function (newSels) {\n        annotations.clear(container);\n        annotations.selectRange(container, newSels.boxes(), newSels.start(), newSels.finish());\n        return newSels.boxes();\n      };\n      return CellSelection.shiftSelection(selected, rows, columns, annotations.firstSelectedSelector(), annotations.lastSelectedSelector()).map(updateSelection);\n    };\n    var KeySelection = {\n      sync: sync,\n      detect: detect$5,\n      update: update\n    };\n\n    var nu$3 = MixedBag([\n      'left',\n      'top',\n      'right',\n      'bottom'\n    ], []);\n    var moveDown = function (caret, amount) {\n      return nu$3({\n        left: caret.left(),\n        top: caret.top() + amount,\n        right: caret.right(),\n        bottom: caret.bottom() + amount\n      });\n    };\n    var moveUp = function (caret, amount) {\n      return nu$3({\n        left: caret.left(),\n        top: caret.top() - amount,\n        right: caret.right(),\n        bottom: caret.bottom() - amount\n      });\n    };\n    var moveBottomTo = function (caret, bottom) {\n      var height = caret.bottom() - caret.top();\n      return nu$3({\n        left: caret.left(),\n        top: bottom - height,\n        right: caret.right(),\n        bottom: bottom\n      });\n    };\n    var moveTopTo = function (caret, top) {\n      var height = caret.bottom() - caret.top();\n      return nu$3({\n        left: caret.left(),\n        top: top,\n        right: caret.right(),\n        bottom: top + height\n      });\n    };\n    var translate = function (caret, xDelta, yDelta) {\n      return nu$3({\n        left: caret.left() + xDelta,\n        top: caret.top() + yDelta,\n        right: caret.right() + xDelta,\n        bottom: caret.bottom() + yDelta\n      });\n    };\n    var getTop$1 = function (caret) {\n      return caret.top();\n    };\n    var getBottom = function (caret) {\n      return caret.bottom();\n    };\n    var toString = function (caret) {\n      return '(' + caret.left() + ', ' + caret.top() + ') -> (' + caret.right() + ', ' + caret.bottom() + ')';\n    };\n    var Carets = {\n      nu: nu$3,\n      moveUp: moveUp,\n      moveDown: moveDown,\n      moveBottomTo: moveBottomTo,\n      moveTopTo: moveTopTo,\n      getTop: getTop$1,\n      getBottom: getBottom,\n      translate: translate,\n      toString: toString\n    };\n\n    var getPartialBox = function (bridge, element, offset) {\n      if (offset >= 0 && offset < getEnd(element))\n        return bridge.getRangedRect(element, offset, element, offset + 1);\n      else if (offset > 0)\n        return bridge.getRangedRect(element, offset - 1, element, offset);\n      return Option.none();\n    };\n    var toCaret = function (rect) {\n      return Carets.nu({\n        left: rect.left,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom\n      });\n    };\n    var getElemBox = function (bridge, element) {\n      return Option.some(bridge.getRect(element));\n    };\n    var getBoxAt = function (bridge, element, offset) {\n      if (isElement(element))\n        return getElemBox(bridge, element).map(toCaret);\n      else if (isText(element))\n        return getPartialBox(bridge, element, offset).map(toCaret);\n      else\n        return Option.none();\n    };\n    var getEntireBox = function (bridge, element) {\n      if (isElement(element))\n        return getElemBox(bridge, element).map(toCaret);\n      else if (isText(element))\n        return bridge.getRangedRect(element, 0, element, getEnd(element)).map(toCaret);\n      else\n        return Option.none();\n    };\n    var Rectangles = {\n      getBoxAt: getBoxAt,\n      getEntireBox: getEntireBox\n    };\n\n    var traverse = Immutable('item', 'mode');\n    var backtrack = function (universe, item, _direction, transition) {\n      if (transition === void 0) {\n        transition = sidestep;\n      }\n      return universe.property().parent(item).map(function (p) {\n        return traverse(p, transition);\n      });\n    };\n    var sidestep = function (universe, item, direction, transition) {\n      if (transition === void 0) {\n        transition = advance;\n      }\n      return direction.sibling(universe, item).map(function (p) {\n        return traverse(p, transition);\n      });\n    };\n    var advance = function (universe, item, direction, transition) {\n      if (transition === void 0) {\n        transition = advance;\n      }\n      var children = universe.property().children(item);\n      var result = direction.first(children);\n      return result.map(function (r) {\n        return traverse(r, transition);\n      });\n    };\n    var successors = [\n      {\n        current: backtrack,\n        next: sidestep,\n        fallback: Option.none()\n      },\n      {\n        current: sidestep,\n        next: advance,\n        fallback: Option.some(backtrack)\n      },\n      {\n        current: advance,\n        next: advance,\n        fallback: Option.some(sidestep)\n      }\n    ];\n    var go$1 = function (universe, item, mode, direction, rules) {\n      if (rules === void 0) {\n        rules = successors;\n      }\n      var ruleOpt = find(rules, function (succ) {\n        return succ.current === mode;\n      });\n      return ruleOpt.bind(function (rule) {\n        return rule.current(universe, item, direction, rule.next).orThunk(function () {\n          return rule.fallback.bind(function (fb) {\n            return go$1(universe, item, fb, direction);\n          });\n        });\n      });\n    };\n\n    var left$1 = function () {\n      var sibling = function (universe, item) {\n        return universe.query().prevSibling(item);\n      };\n      var first = function (children) {\n        return children.length > 0 ? Option.some(children[children.length - 1]) : Option.none();\n      };\n      return {\n        sibling: sibling,\n        first: first\n      };\n    };\n    var right$1 = function () {\n      var sibling = function (universe, item) {\n        return universe.query().nextSibling(item);\n      };\n      var first = function (children) {\n        return children.length > 0 ? Option.some(children[0]) : Option.none();\n      };\n      return {\n        sibling: sibling,\n        first: first\n      };\n    };\n    var Walkers = {\n      left: left$1,\n      right: right$1\n    };\n\n    var hone = function (universe, item, predicate, mode, direction, isRoot) {\n      var next = go$1(universe, item, mode, direction);\n      return next.bind(function (n) {\n        if (isRoot(n.item()))\n          return Option.none();\n        else\n          return predicate(n.item()) ? Option.some(n.item()) : hone(universe, n.item(), predicate, n.mode(), direction, isRoot);\n      });\n    };\n    var left$2 = function (universe, item, predicate, isRoot) {\n      return hone(universe, item, predicate, sidestep, Walkers.left(), isRoot);\n    };\n    var right$2 = function (universe, item, predicate, isRoot) {\n      return hone(universe, item, predicate, sidestep, Walkers.right(), isRoot);\n    };\n\n    var isLeaf = function (universe) {\n      return function (element) {\n        return universe.property().children(element).length === 0;\n      };\n    };\n    var before$3 = function (universe, item, isRoot) {\n      return seekLeft(universe, item, isLeaf(universe), isRoot);\n    };\n    var after$4 = function (universe, item, isRoot) {\n      return seekRight(universe, item, isLeaf(universe), isRoot);\n    };\n    var seekLeft = left$2;\n    var seekRight = right$2;\n\n    var universe$2 = DomUniverse();\n    var before$4 = function (element, isRoot) {\n      return before$3(universe$2, element, isRoot);\n    };\n    var after$5 = function (element, isRoot) {\n      return after$4(universe$2, element, isRoot);\n    };\n    var seekLeft$1 = function (element, predicate, isRoot) {\n      return seekLeft(universe$2, element, predicate, isRoot);\n    };\n    var seekRight$1 = function (element, predicate, isRoot) {\n      return seekRight(universe$2, element, predicate, isRoot);\n    };\n\n    var JUMP_SIZE = 5;\n    var NUM_RETRIES = 100;\n    var adt$2 = Adt.generate([\n      { 'none': [] },\n      { 'retry': ['caret'] }\n    ]);\n    var isOutside = function (caret, box) {\n      return caret.left() < box.left() || Math.abs(box.right() - caret.left()) < 1 || caret.left() > box.right();\n    };\n    var inOutsideBlock = function (bridge, element, caret) {\n      return closest(element, DomStructure.isBlock).fold(constant(false), function (cell) {\n        return Rectangles.getEntireBox(bridge, cell).exists(function (box) {\n          return isOutside(caret, box);\n        });\n      });\n    };\n    var adjustDown = function (bridge, element, guessBox, original, caret) {\n      var lowerCaret = Carets.moveDown(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.bottom() - original.bottom()) < 1)\n        return adt$2.retry(lowerCaret);\n      else if (guessBox.top() > caret.bottom())\n        return adt$2.retry(lowerCaret);\n      else if (guessBox.top() === caret.bottom())\n        return adt$2.retry(Carets.moveDown(caret, 1));\n      else\n        return inOutsideBlock(bridge, element, caret) ? adt$2.retry(Carets.translate(lowerCaret, JUMP_SIZE, 0)) : adt$2.none();\n    };\n    var adjustUp = function (bridge, element, guessBox, original, caret) {\n      var higherCaret = Carets.moveUp(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.top() - original.top()) < 1)\n        return adt$2.retry(higherCaret);\n      else if (guessBox.bottom() < caret.top())\n        return adt$2.retry(higherCaret);\n      else if (guessBox.bottom() === caret.top())\n        return adt$2.retry(Carets.moveUp(caret, 1));\n      else\n        return inOutsideBlock(bridge, element, caret) ? adt$2.retry(Carets.translate(higherCaret, JUMP_SIZE, 0)) : adt$2.none();\n    };\n    var upMovement = {\n      point: Carets.getTop,\n      adjuster: adjustUp,\n      move: Carets.moveUp,\n      gather: before$4\n    };\n    var downMovement = {\n      point: Carets.getBottom,\n      adjuster: adjustDown,\n      move: Carets.moveDown,\n      gather: after$5\n    };\n    var isAtTable = function (bridge, x, y) {\n      return bridge.elementFromPoint(x, y).filter(function (elm) {\n        return name(elm) === 'table';\n      }).isSome();\n    };\n    var adjustForTable = function (bridge, movement, original, caret, numRetries) {\n      return adjustTil(bridge, movement, original, movement.move(caret, JUMP_SIZE), numRetries);\n    };\n    var adjustTil = function (bridge, movement, original, caret, numRetries) {\n      if (numRetries === 0)\n        return Option.some(caret);\n      if (isAtTable(bridge, caret.left(), movement.point(caret)))\n        return adjustForTable(bridge, movement, original, caret, numRetries - 1);\n      return bridge.situsFromPoint(caret.left(), movement.point(caret)).bind(function (guess) {\n        return guess.start().fold(Option.none, function (element, offset) {\n          return Rectangles.getEntireBox(bridge, element, offset).bind(function (guessBox) {\n            return movement.adjuster(bridge, element, guessBox, original, caret).fold(Option.none, function (newCaret) {\n              return adjustTil(bridge, movement, original, newCaret, numRetries - 1);\n            });\n          }).orThunk(function () {\n            return Option.some(caret);\n          });\n        }, Option.none);\n      });\n    };\n    var ieTryDown = function (bridge, caret) {\n      return bridge.situsFromPoint(caret.left(), caret.bottom() + JUMP_SIZE);\n    };\n    var ieTryUp = function (bridge, caret) {\n      return bridge.situsFromPoint(caret.left(), caret.top() - JUMP_SIZE);\n    };\n    var checkScroll = function (movement, adjusted, bridge) {\n      if (movement.point(adjusted) > bridge.getInnerHeight())\n        return Option.some(movement.point(adjusted) - bridge.getInnerHeight());\n      else if (movement.point(adjusted) < 0)\n        return Option.some(-movement.point(adjusted));\n      else\n        return Option.none();\n    };\n    var retry = function (movement, bridge, caret) {\n      var moved = movement.move(caret, JUMP_SIZE);\n      var adjusted = adjustTil(bridge, movement, caret, moved, NUM_RETRIES).getOr(moved);\n      return checkScroll(movement, adjusted, bridge).fold(function () {\n        return bridge.situsFromPoint(adjusted.left(), movement.point(adjusted));\n      }, function (delta) {\n        bridge.scrollBy(0, delta);\n        return bridge.situsFromPoint(adjusted.left(), movement.point(adjusted) - delta);\n      });\n    };\n    var Retries = {\n      tryUp: curry(retry, upMovement),\n      tryDown: curry(retry, downMovement),\n      ieTryUp: ieTryUp,\n      ieTryDown: ieTryDown,\n      getJumpSize: constant(JUMP_SIZE)\n    };\n\n    var adt$3 = Adt.generate([\n      { 'none': ['message'] },\n      { 'success': [] },\n      { 'failedUp': ['cell'] },\n      { 'failedDown': ['cell'] }\n    ]);\n    var isOverlapping = function (bridge, before, after) {\n      var beforeBounds = bridge.getRect(before);\n      var afterBounds = bridge.getRect(after);\n      return afterBounds.right > beforeBounds.left && afterBounds.left < beforeBounds.right;\n    };\n    var verify = function (bridge, before, beforeOffset, after, afterOffset, failure, isRoot) {\n      return closest$1(after, 'td,th', isRoot).bind(function (afterCell) {\n        return closest$1(before, 'td,th', isRoot).map(function (beforeCell) {\n          if (!eq(afterCell, beforeCell)) {\n            return DomParent.sharedOne(isRow, [\n              afterCell,\n              beforeCell\n            ]).fold(function () {\n              return isOverlapping(bridge, beforeCell, afterCell) ? adt$3.success() : failure(beforeCell);\n            }, function (sharedRow) {\n              return failure(beforeCell);\n            });\n          } else {\n            return eq(after, afterCell) && getEnd(afterCell) === afterOffset ? failure(beforeCell) : adt$3.none('in same cell');\n          }\n        });\n      }).getOr(adt$3.none('default'));\n    };\n    var isRow = function (elem) {\n      return closest$1(elem, 'tr');\n    };\n    var cata$2 = function (subject, onNone, onSuccess, onFailedUp, onFailedDown) {\n      return subject.fold(onNone, onSuccess, onFailedUp, onFailedDown);\n    };\n    var BeforeAfter = {\n      verify: verify,\n      cata: cata$2,\n      adt: adt$3\n    };\n\n    var point = Immutable('element', 'offset');\n    var delta = Immutable('element', 'deltaOffset');\n    var range$2 = Immutable('element', 'start', 'finish');\n    var points = Immutable('begin', 'end');\n    var text = Immutable('element', 'text');\n\n    var inAncestor = Immutable('ancestor', 'descendants', 'element', 'index');\n    var inParent = Immutable('parent', 'children', 'element', 'index');\n    var indexInParent = function (element) {\n      return parent(element).bind(function (parent) {\n        var children$1 = children(parent);\n        return indexOf(children$1, element).map(function (index) {\n          return inParent(parent, children$1, element, index);\n        });\n      });\n    };\n    var indexOf = function (elements, element) {\n      return findIndex(elements, curry(eq, element));\n    };\n\n    var isBr = function (elem) {\n      return name(elem) === 'br';\n    };\n    var gatherer = function (cand, gather, isRoot) {\n      return gather(cand, isRoot).bind(function (target) {\n        return isText(target) && get$3(target).trim().length === 0 ? gatherer(target, gather, isRoot) : Option.some(target);\n      });\n    };\n    var handleBr = function (isRoot, element, direction) {\n      return direction.traverse(element).orThunk(function () {\n        return gatherer(element, direction.gather, isRoot);\n      }).map(direction.relative);\n    };\n    var findBr = function (element, offset) {\n      return child(element, offset).filter(isBr).orThunk(function () {\n        return child(element, offset - 1).filter(isBr);\n      });\n    };\n    var handleParent = function (isRoot, element, offset, direction) {\n      return findBr(element, offset).bind(function (br) {\n        return direction.traverse(br).fold(function () {\n          return gatherer(br, direction.gather, isRoot).map(direction.relative);\n        }, function (adjacent) {\n          return indexInParent(adjacent).map(function (info) {\n            return Situ.on(info.parent(), info.index());\n          });\n        });\n      });\n    };\n    var tryBr = function (isRoot, element, offset, direction) {\n      var target = isBr(element) ? handleBr(isRoot, element, direction) : handleParent(isRoot, element, offset, direction);\n      return target.map(function (tgt) {\n        return {\n          start: constant(tgt),\n          finish: constant(tgt)\n        };\n      });\n    };\n    var process = function (analysis) {\n      return BeforeAfter.cata(analysis, function (message) {\n        return Option.none();\n      }, function () {\n        return Option.none();\n      }, function (cell) {\n        return Option.some(point(cell, 0));\n      }, function (cell) {\n        return Option.some(point(cell, getEnd(cell)));\n      });\n    };\n    var BrTags = {\n      tryBr: tryBr,\n      process: process\n    };\n\n    var MAX_RETRIES = 20;\n    var platform$1 = PlatformDetection$1.detect();\n    var findSpot = function (bridge, isRoot, direction) {\n      return bridge.getSelection().bind(function (sel) {\n        return BrTags.tryBr(isRoot, sel.finish(), sel.foffset(), direction).fold(function () {\n          return Option.some(point(sel.finish(), sel.foffset()));\n        }, function (brNeighbour) {\n          var range = bridge.fromSitus(brNeighbour);\n          var analysis = BeforeAfter.verify(bridge, sel.finish(), sel.foffset(), range.finish(), range.foffset(), direction.failure, isRoot);\n          return BrTags.process(analysis);\n        });\n      });\n    };\n    var scan = function (bridge, isRoot, element, offset, direction, numRetries) {\n      if (numRetries === 0)\n        return Option.none();\n      return tryCursor(bridge, isRoot, element, offset, direction).bind(function (situs) {\n        var range = bridge.fromSitus(situs);\n        var analysis = BeforeAfter.verify(bridge, element, offset, range.finish(), range.foffset(), direction.failure, isRoot);\n        return BeforeAfter.cata(analysis, function () {\n          return Option.none();\n        }, function () {\n          return Option.some(situs);\n        }, function (cell) {\n          if (eq(element, cell) && offset === 0)\n            return tryAgain(bridge, element, offset, Carets.moveUp, direction);\n          else\n            return scan(bridge, isRoot, cell, 0, direction, numRetries - 1);\n        }, function (cell) {\n          if (eq(element, cell) && offset === getEnd(cell))\n            return tryAgain(bridge, element, offset, Carets.moveDown, direction);\n          else\n            return scan(bridge, isRoot, cell, getEnd(cell), direction, numRetries - 1);\n        });\n      });\n    };\n    var tryAgain = function (bridge, element, offset, move, direction) {\n      return Rectangles.getBoxAt(bridge, element, offset).bind(function (box) {\n        return tryAt(bridge, direction, move(box, Retries.getJumpSize()));\n      });\n    };\n    var tryAt = function (bridge, direction, box) {\n      if (platform$1.browser.isChrome() || platform$1.browser.isSafari() || platform$1.browser.isFirefox() || platform$1.browser.isEdge())\n        return direction.otherRetry(bridge, box);\n      else if (platform$1.browser.isIE())\n        return direction.ieRetry(bridge, box);\n      else\n        return Option.none();\n    };\n    var tryCursor = function (bridge, isRoot, element, offset, direction) {\n      return Rectangles.getBoxAt(bridge, element, offset).bind(function (box) {\n        return tryAt(bridge, direction, box);\n      });\n    };\n    var handle$2 = function (bridge, isRoot, direction) {\n      return findSpot(bridge, isRoot, direction).bind(function (spot) {\n        return scan(bridge, isRoot, spot.element(), spot.offset(), direction, MAX_RETRIES).map(bridge.fromSitus);\n      });\n    };\n    var TableKeys = { handle: handle$2 };\n\n    var ancestor$2 = function (scope, predicate, isRoot) {\n      return ancestor(scope, predicate, isRoot).isSome();\n    };\n\n    var detection = PlatformDetection$1.detect();\n    var inSameTable = function (elem, table) {\n      return ancestor$2(elem, function (e) {\n        return parent(e).exists(function (p) {\n          return eq(p, table);\n        });\n      });\n    };\n    var simulate = function (bridge, isRoot, direction, initial, anchor) {\n      return closest$1(initial, 'td,th', isRoot).bind(function (start) {\n        return closest$1(start, 'table', isRoot).bind(function (table) {\n          if (!inSameTable(anchor, table))\n            return Option.none();\n          return TableKeys.handle(bridge, isRoot, direction).bind(function (range) {\n            return closest$1(range.finish(), 'td,th', isRoot).map(function (finish) {\n              return {\n                start: constant(start),\n                finish: constant(finish),\n                range: constant(range)\n              };\n            });\n          });\n        });\n      });\n    };\n    var navigate = function (bridge, isRoot, direction, initial, anchor, precheck) {\n      if (detection.browser.isIE()) {\n        return Option.none();\n      } else {\n        return precheck(initial, isRoot).orThunk(function () {\n          return simulate(bridge, isRoot, direction, initial, anchor).map(function (info) {\n            var range = info.range();\n            return Responses.response(Option.some(Util$1.makeSitus(range.start(), range.soffset(), range.finish(), range.foffset())), true);\n          });\n        });\n      }\n    };\n    var firstUpCheck = function (initial, isRoot) {\n      return closest$1(initial, 'tr', isRoot).bind(function (startRow) {\n        return closest$1(startRow, 'table', isRoot).bind(function (table) {\n          var rows = descendants$1(table, 'tr');\n          if (eq(startRow, rows[0])) {\n            return seekLeft$1(table, function (element) {\n              return last$1(element).isSome();\n            }, isRoot).map(function (last) {\n              var lastOffset = getEnd(last);\n              return Responses.response(Option.some(Util$1.makeSitus(last, lastOffset, last, lastOffset)), true);\n            });\n          } else {\n            return Option.none();\n          }\n        });\n      });\n    };\n    var lastDownCheck = function (initial, isRoot) {\n      return closest$1(initial, 'tr', isRoot).bind(function (startRow) {\n        return closest$1(startRow, 'table', isRoot).bind(function (table) {\n          var rows = descendants$1(table, 'tr');\n          if (eq(startRow, rows[rows.length - 1])) {\n            return seekRight$1(table, function (element) {\n              return first(element).isSome();\n            }, isRoot).map(function (first) {\n              return Responses.response(Option.some(Util$1.makeSitus(first, 0, first, 0)), true);\n            });\n          } else {\n            return Option.none();\n          }\n        });\n      });\n    };\n    var select = function (bridge, container, isRoot, direction, initial, anchor, selectRange) {\n      return simulate(bridge, isRoot, direction, initial, anchor).bind(function (info) {\n        return KeySelection.detect(container, isRoot, info.start(), info.finish(), selectRange);\n      });\n    };\n    var VerticalMovement = {\n      navigate: navigate,\n      select: select,\n      firstUpCheck: firstUpCheck,\n      lastDownCheck: lastDownCheck\n    };\n\n    var findCell = function (target, isRoot) {\n      return closest$1(target, 'td,th', isRoot);\n    };\n    function MouseSelection (bridge, container, isRoot, annotations) {\n      var cursor = Option.none();\n      var clearState = function () {\n        cursor = Option.none();\n      };\n      var mousedown = function (event) {\n        annotations.clear(container);\n        cursor = findCell(event.target(), isRoot);\n      };\n      var mouseover = function (event) {\n        cursor.each(function (start) {\n          annotations.clear(container);\n          findCell(event.target(), isRoot).each(function (finish) {\n            CellSelection.identify(start, finish, isRoot).each(function (cellSel) {\n              var boxes = cellSel.boxes().getOr([]);\n              if (boxes.length > 1 || boxes.length === 1 && !eq(start, finish)) {\n                annotations.selectRange(container, boxes, cellSel.start(), cellSel.finish());\n                bridge.selectContents(finish);\n              }\n            });\n          });\n        });\n      };\n      var mouseup = function () {\n        cursor.each(clearState);\n      };\n      return {\n        mousedown: mousedown,\n        mouseover: mouseover,\n        mouseup: mouseup\n      };\n    }\n\n    var KeyDirection = {\n      down: {\n        traverse: nextSibling,\n        gather: after$5,\n        relative: Situ.before,\n        otherRetry: Retries.tryDown,\n        ieRetry: Retries.ieTryDown,\n        failure: BeforeAfter.adt.failedDown\n      },\n      up: {\n        traverse: prevSibling,\n        gather: before$4,\n        relative: Situ.before,\n        otherRetry: Retries.tryUp,\n        ieRetry: Retries.ieTryUp,\n        failure: BeforeAfter.adt.failedUp\n      }\n    };\n\n    var rc = Immutable('rows', 'cols');\n    var mouse = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      var handlers = MouseSelection(bridge, container, isRoot, annotations);\n      return {\n        mousedown: handlers.mousedown,\n        mouseover: handlers.mouseover,\n        mouseup: handlers.mouseup\n      };\n    };\n    var keyboard = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      var clearToNavigate = function () {\n        annotations.clear(container);\n        return Option.none();\n      };\n      var keydown = function (event, start, soffset, finish, foffset, direction) {\n        var keycode = event.raw().which;\n        var shiftKey = event.raw().shiftKey === true;\n        var handler = CellSelection.retrieve(container, annotations.selectedSelector()).fold(function () {\n          if (SelectionKeys.isDown(keycode) && shiftKey) {\n            return curry(VerticalMovement.select, bridge, container, isRoot, KeyDirection.down, finish, start, annotations.selectRange);\n          } else if (SelectionKeys.isUp(keycode) && shiftKey) {\n            return curry(VerticalMovement.select, bridge, container, isRoot, KeyDirection.up, finish, start, annotations.selectRange);\n          } else if (SelectionKeys.isDown(keycode)) {\n            return curry(VerticalMovement.navigate, bridge, isRoot, KeyDirection.down, finish, start, VerticalMovement.lastDownCheck);\n          } else if (SelectionKeys.isUp(keycode)) {\n            return curry(VerticalMovement.navigate, bridge, isRoot, KeyDirection.up, finish, start, VerticalMovement.firstUpCheck);\n          } else {\n            return Option.none;\n          }\n        }, function (selected) {\n          var update = function (attempts) {\n            return function () {\n              var navigation = findMap(attempts, function (delta) {\n                return KeySelection.update(delta.rows(), delta.cols(), container, selected, annotations);\n              });\n              return navigation.fold(function () {\n                return CellSelection.getEdges(container, annotations.firstSelectedSelector(), annotations.lastSelectedSelector()).map(function (edges) {\n                  var relative = SelectionKeys.isDown(keycode) || direction.isForward(keycode) ? Situ.after : Situ.before;\n                  bridge.setRelativeSelection(Situ.on(edges.first(), 0), relative(edges.table()));\n                  annotations.clear(container);\n                  return Responses.response(Option.none(), true);\n                });\n              }, function (_) {\n                return Option.some(Responses.response(Option.none(), true));\n              });\n            };\n          };\n          if (SelectionKeys.isDown(keycode) && shiftKey)\n            return update([rc(+1, 0)]);\n          else if (SelectionKeys.isUp(keycode) && shiftKey)\n            return update([rc(-1, 0)]);\n          else if (direction.isBackward(keycode) && shiftKey)\n            return update([\n              rc(0, -1),\n              rc(-1, 0)\n            ]);\n          else if (direction.isForward(keycode) && shiftKey)\n            return update([\n              rc(0, +1),\n              rc(+1, 0)\n            ]);\n          else if (SelectionKeys.isNavigation(keycode) && shiftKey === false)\n            return clearToNavigate;\n          else\n            return Option.none;\n        });\n        return handler();\n      };\n      var keyup = function (event, start, soffset, finish, foffset) {\n        return CellSelection.retrieve(container, annotations.selectedSelector()).fold(function () {\n          var keycode = event.raw().which;\n          var shiftKey = event.raw().shiftKey === true;\n          if (shiftKey === false)\n            return Option.none();\n          if (SelectionKeys.isNavigation(keycode))\n            return KeySelection.sync(container, isRoot, start, soffset, finish, foffset, annotations.selectRange);\n          else\n            return Option.none();\n        }, Option.none);\n      };\n      return {\n        keydown: keydown,\n        keyup: keyup\n      };\n    };\n    var InputHandlers = {\n      mouse: mouse,\n      keyboard: keyboard\n    };\n\n    var remove$7 = function (element, classes) {\n      each(classes, function (x) {\n        remove$5(element, x);\n      });\n    };\n\n    var addClass = function (clazz) {\n      return function (element) {\n        add$2(element, clazz);\n      };\n    };\n    var removeClasses = function (classes) {\n      return function (element) {\n        remove$7(element, classes);\n      };\n    };\n\n    var byClass = function (ephemera) {\n      var addSelectionClass = addClass(ephemera.selected());\n      var removeSelectionClasses = removeClasses([\n        ephemera.selected(),\n        ephemera.lastSelected(),\n        ephemera.firstSelected()\n      ]);\n      var clear = function (container) {\n        var sels = descendants$1(container, ephemera.selectedSelector());\n        each(sels, removeSelectionClasses);\n      };\n      var selectRange = function (container, cells, start, finish) {\n        clear(container);\n        each(cells, addSelectionClass);\n        add$2(start, ephemera.firstSelected());\n        add$2(finish, ephemera.lastSelected());\n      };\n      return {\n        clear: clear,\n        selectRange: selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    var byAttr = function (ephemera) {\n      var removeSelectionAttributes = function (element) {\n        remove(element, ephemera.selected());\n        remove(element, ephemera.firstSelected());\n        remove(element, ephemera.lastSelected());\n      };\n      var addSelectionAttribute = function (element) {\n        set(element, ephemera.selected(), '1');\n      };\n      var clear = function (container) {\n        var sels = descendants$1(container, ephemera.selectedSelector());\n        each(sels, removeSelectionAttributes);\n      };\n      var selectRange = function (container, cells, start, finish) {\n        clear(container);\n        each(cells, addSelectionAttribute);\n        set(start, ephemera.firstSelected(), '1');\n        set(finish, ephemera.lastSelected(), '1');\n      };\n      return {\n        clear: clear,\n        selectRange: selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    var SelectionAnnotation = {\n      byClass: byClass,\n      byAttr: byAttr\n    };\n\n    var hasInternalTarget = function (e) {\n      return has$2(Element.fromDom(e.target), 'ephox-snooker-resizer-bar') === false;\n    };\n    function CellSelection$1 (editor, lazyResize) {\n      var handlerStruct = MixedBag([\n        'mousedown',\n        'mouseover',\n        'mouseup',\n        'keyup',\n        'keydown'\n      ], []);\n      var handlers = Option.none();\n      var annotations = SelectionAnnotation.byAttr(Ephemera);\n      editor.on('init', function (e) {\n        var win = editor.getWin();\n        var body = getBody$1(editor);\n        var isRoot = getIsRoot(editor);\n        var syncSelection = function () {\n          var sel = editor.selection;\n          var start = Element.fromDom(sel.getStart());\n          var end = Element.fromDom(sel.getEnd());\n          var shared = DomParent.sharedOne(TableLookup.table, [\n            start,\n            end\n          ]);\n          shared.fold(function () {\n            annotations.clear(body);\n          }, noop);\n        };\n        var mouseHandlers = InputHandlers.mouse(win, body, isRoot, annotations);\n        var keyHandlers = InputHandlers.keyboard(win, body, isRoot, annotations);\n        var hasShiftKey = function (event) {\n          return event.raw().shiftKey === true;\n        };\n        var handleResponse = function (event, response) {\n          if (!hasShiftKey(event)) {\n            return;\n          }\n          if (response.kill()) {\n            event.kill();\n          }\n          response.selection().each(function (ns) {\n            var relative$1 = relative(ns.start(), ns.finish());\n            var rng = asLtrRange(win, relative$1);\n            editor.selection.setRng(rng);\n          });\n        };\n        var keyup = function (event) {\n          var wrappedEvent = wrapEvent(event);\n          if (wrappedEvent.raw().shiftKey && SelectionKeys.isNavigation(wrappedEvent.raw().which)) {\n            var rng = editor.selection.getRng();\n            var start = Element.fromDom(rng.startContainer);\n            var end = Element.fromDom(rng.endContainer);\n            keyHandlers.keyup(wrappedEvent, start, rng.startOffset, end, rng.endOffset).each(function (response) {\n              handleResponse(wrappedEvent, response);\n            });\n          }\n        };\n        var keydown = function (event) {\n          var wrappedEvent = wrapEvent(event);\n          lazyResize().each(function (resize) {\n            resize.hideBars();\n          });\n          var rng = editor.selection.getRng();\n          var startContainer = Element.fromDom(editor.selection.getStart());\n          var start = Element.fromDom(rng.startContainer);\n          var end = Element.fromDom(rng.endContainer);\n          var direction = Direction.directionAt(startContainer).isRtl() ? SelectionKeys.rtl : SelectionKeys.ltr;\n          keyHandlers.keydown(wrappedEvent, start, rng.startOffset, end, rng.endOffset, direction).each(function (response) {\n            handleResponse(wrappedEvent, response);\n          });\n          lazyResize().each(function (resize) {\n            resize.showBars();\n          });\n        };\n        var isMouseEvent = function (event) {\n          return event.hasOwnProperty('x') && event.hasOwnProperty('y');\n        };\n        var wrapEvent = function (event) {\n          var target = Element.fromDom(event.target);\n          var stop = function () {\n            event.stopPropagation();\n          };\n          var prevent = function () {\n            event.preventDefault();\n          };\n          var kill = compose(prevent, stop);\n          return {\n            target: constant(target),\n            x: constant(isMouseEvent(event) ? event.x : null),\n            y: constant(isMouseEvent(event) ? event.y : null),\n            stop: stop,\n            prevent: prevent,\n            kill: kill,\n            raw: constant(event)\n          };\n        };\n        var isLeftMouse = function (raw) {\n          return raw.button === 0;\n        };\n        var isLeftButtonPressed = function (raw) {\n          if (raw.buttons === undefined) {\n            return true;\n          }\n          return (raw.buttons & 1) !== 0;\n        };\n        var mouseDown = function (e) {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mousedown(wrapEvent(e));\n          }\n        };\n        var mouseOver = function (e) {\n          if (isLeftButtonPressed(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseover(wrapEvent(e));\n          }\n        };\n        var mouseUp = function (e) {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseup(wrapEvent(e));\n          }\n        };\n        editor.on('mousedown', mouseDown);\n        editor.on('mouseover', mouseOver);\n        editor.on('mouseup', mouseUp);\n        editor.on('keyup', keyup);\n        editor.on('keydown', keydown);\n        editor.on('nodechange', syncSelection);\n        handlers = Option.some(handlerStruct({\n          mousedown: mouseDown,\n          mouseover: mouseOver,\n          mouseup: mouseUp,\n          keyup: keyup,\n          keydown: keydown\n        }));\n      });\n      var destroy = function () {\n        handlers.each(function (handlers) {\n        });\n      };\n      return {\n        clear: annotations.clear,\n        destroy: destroy\n      };\n    }\n\n    var Selections = function (editor) {\n      var get = function () {\n        var body = getBody$1(editor);\n        return TableSelection.retrieve(body, Ephemera.selectedSelector()).fold(function () {\n          if (editor.selection.getStart() === undefined) {\n            return SelectionTypes.none();\n          } else {\n            return SelectionTypes.single(editor.selection);\n          }\n        }, function (cells) {\n          return SelectionTypes.multiple(cells);\n        });\n      };\n      return { get: get };\n    };\n\n    var SelectionTargets = function (editor, selections) {\n      var targets = Cell(Option.none());\n      var changeHandlers = Cell([]);\n      var findTargets = function () {\n        return getSelectionStartCellOrCaption(editor).bind(function (cellOrCaption) {\n          var table = TableLookup.table(cellOrCaption);\n          return table.map(function (table) {\n            if (name(cellOrCaption) === 'caption') {\n              return TableTargets.notCell(cellOrCaption);\n            } else {\n              return TableTargets.forMenu(selections, table, cellOrCaption);\n            }\n          });\n        });\n      };\n      var resetTargets = function () {\n        targets.set(cached(findTargets)());\n        each(changeHandlers.get(), function (handler) {\n          return handler();\n        });\n      };\n      var onSetup = function (api, isDisabled) {\n        var handler = function () {\n          return targets.get().fold(function () {\n            api.setDisabled(true);\n          }, function (targets) {\n            api.setDisabled(isDisabled(targets));\n          });\n        };\n        handler();\n        changeHandlers.set(changeHandlers.get().concat([handler]));\n        return function () {\n          changeHandlers.set(filter(changeHandlers.get(), function (h) {\n            return h !== handler;\n          }));\n        };\n      };\n      var onSetupTable = function (api) {\n        return onSetup(api, function (_) {\n          return false;\n        });\n      };\n      var onSetupCellOrRow = function (api) {\n        return onSetup(api, function (targets) {\n          return name(targets.element()) === 'caption';\n        });\n      };\n      var onSetupMergeable = function (api) {\n        return onSetup(api, function (targets) {\n          return targets.mergable().isNone();\n        });\n      };\n      var onSetupUnmergeable = function (api) {\n        return onSetup(api, function (targets) {\n          return targets.unmergable().isNone();\n        });\n      };\n      editor.on('nodechange', resetTargets);\n      return {\n        onSetupTable: onSetupTable,\n        onSetupCellOrRow: onSetupCellOrRow,\n        onSetupMergeable: onSetupMergeable,\n        onSetupUnmergeable: onSetupUnmergeable,\n        resetTargets: resetTargets,\n        targets: function () {\n          return targets.get();\n        }\n      };\n    };\n\n    var addButtons = function (editor, selectionTargets) {\n      editor.ui.registry.addMenuButton('table', {\n        tooltip: 'Table',\n        icon: 'table',\n        fetch: function (callback) {\n          return callback('inserttable tableprops deletetable | cell row column');\n        }\n      });\n      var cmd = function (command) {\n        return function () {\n          return editor.execCommand(command);\n        };\n      };\n      editor.ui.registry.addButton('tableprops', {\n        tooltip: 'Table properties',\n        onAction: cmd('mceTableProps'),\n        icon: 'table',\n        onSetup: selectionTargets.onSetupTable\n      });\n      editor.ui.registry.addButton('tabledelete', {\n        tooltip: 'Delete table',\n        onAction: cmd('mceTableDelete'),\n        icon: 'table-delete-table',\n        onSetup: selectionTargets.onSetupTable\n      });\n      editor.ui.registry.addButton('tablecellprops', {\n        tooltip: 'Cell properties',\n        onAction: cmd('mceTableCellProps'),\n        icon: 'table-cell-properties',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablemergecells', {\n        tooltip: 'Merge cells',\n        onAction: cmd('mceTableMergeCells'),\n        icon: 'table-merge-cells',\n        onSetup: selectionTargets.onSetupMergeable\n      });\n      editor.ui.registry.addButton('tablesplitcells', {\n        tooltip: 'Split cell',\n        onAction: cmd('mceTableSplitCells'),\n        icon: 'table-split-cells',\n        onSetup: selectionTargets.onSetupUnmergeable\n      });\n      editor.ui.registry.addButton('tableinsertrowbefore', {\n        tooltip: 'Insert row before',\n        onAction: cmd('mceTableInsertRowBefore'),\n        icon: 'table-insert-row-above',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tableinsertrowafter', {\n        tooltip: 'Insert row after',\n        onAction: cmd('mceTableInsertRowAfter'),\n        icon: 'table-insert-row-after',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tabledeleterow', {\n        tooltip: 'Delete row',\n        onAction: cmd('mceTableDeleteRow'),\n        icon: 'table-delete-row',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablerowprops', {\n        tooltip: 'Row properties',\n        onAction: cmd('mceTableRowProps'),\n        icon: 'table-row-properties',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tableinsertcolbefore', {\n        tooltip: 'Insert column before',\n        onAction: cmd('mceTableInsertColBefore'),\n        icon: 'table-insert-column-before',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tableinsertcolafter', {\n        tooltip: 'Insert column after',\n        onAction: cmd('mceTableInsertColAfter'),\n        icon: 'table-insert-column-after',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tabledeletecol', {\n        tooltip: 'Delete column',\n        onAction: cmd('mceTableDeleteCol'),\n        icon: 'table-delete-column',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablecutrow', {\n        tooltip: 'Cut row',\n        onAction: cmd('mceTableCutRow'),\n        icon: 'temporary-placeholder',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablecopyrow', {\n        tooltip: 'Copy row',\n        onAction: cmd('mceTableCopyRow'),\n        icon: 'temporary-placeholder',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablepasterowbefore', {\n        tooltip: 'Paste row before',\n        onAction: cmd('mceTablePasteRowBefore'),\n        icon: 'temporary-placeholder',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablepasterowafter', {\n        tooltip: 'Paste row after',\n        onAction: cmd('mceTablePasteRowAfter'),\n        icon: 'temporary-placeholder',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n    };\n    var addToolbars = function (editor) {\n      var isTable = function (table) {\n        return editor.dom.is(table, 'table') && editor.getBody().contains(table);\n      };\n      var toolbar = getToolbar(editor);\n      if (toolbar.length > 0) {\n        editor.ui.registry.addContextToolbar('table', {\n          predicate: isTable,\n          items: toolbar,\n          scope: 'node',\n          position: 'node'\n        });\n      }\n    };\n    var Buttons = {\n      addButtons: addButtons,\n      addToolbars: addToolbars\n    };\n\n    var addMenuItems = function (editor, selectionTargets) {\n      var cmd = function (command) {\n        return function () {\n          return editor.execCommand(command);\n        };\n      };\n      var insertTableAction = function (_a) {\n        var numRows = _a.numRows, numColumns = _a.numColumns;\n        editor.undoManager.transact(function () {\n          InsertTable.insert(editor, numColumns, numRows);\n        });\n        editor.addVisual();\n      };\n      var tableProperties = {\n        text: 'Table properties',\n        onSetup: selectionTargets.onSetupTable,\n        onAction: cmd('mceTableProps')\n      };\n      var deleteTable = {\n        text: 'Delete table',\n        icon: 'table-delete-table',\n        onSetup: selectionTargets.onSetupTable,\n        onAction: cmd('mceTableDelete')\n      };\n      var row = {\n        type: 'nestedmenuitem',\n        text: 'Row',\n        getSubmenuItems: function () {\n          return [\n            {\n              type: 'menuitem',\n              text: 'Insert row before',\n              icon: 'table-insert-row-above',\n              onAction: cmd('mceTableInsertRowBefore'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Insert row after',\n              icon: 'table-insert-row-after',\n              onAction: cmd('mceTableInsertRowAfter'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Delete row',\n              icon: 'table-delete-row',\n              onAction: cmd('mceTableDeleteRow'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Row properties',\n              icon: 'table-row-properties',\n              onAction: cmd('mceTableRowProps'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            { type: 'separator' },\n            {\n              type: 'menuitem',\n              text: 'Cut row',\n              onAction: cmd('mceTableCutRow'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Copy row',\n              onAction: cmd('mceTableCopyRow'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Paste row before',\n              onAction: cmd('mceTablePasteRowBefore'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Paste row after',\n              onAction: cmd('mceTablePasteRowAfter'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            }\n          ];\n        }\n      };\n      var column = {\n        type: 'nestedmenuitem',\n        text: 'Column',\n        getSubmenuItems: function () {\n          return [\n            {\n              type: 'menuitem',\n              text: 'Insert column before',\n              icon: 'table-insert-column-before',\n              onAction: cmd('mceTableInsertColBefore'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Insert column after',\n              icon: 'table-insert-column-after',\n              onAction: cmd('mceTableInsertColAfter'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Delete column',\n              icon: 'table-delete-column',\n              onAction: cmd('mceTableDeleteCol'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            }\n          ];\n        }\n      };\n      var cell = {\n        type: 'nestedmenuitem',\n        text: 'Cell',\n        getSubmenuItems: function () {\n          return [\n            {\n              type: 'menuitem',\n              text: 'Cell properties',\n              icon: 'table-cell-properties',\n              onAction: cmd('mceTableCellProps'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Merge cells',\n              icon: 'table-merge-cells',\n              onAction: cmd('mceTableMergeCells'),\n              onSetup: selectionTargets.onSetupMergeable\n            },\n            {\n              type: 'menuitem',\n              text: 'Split cell',\n              icon: 'table-split-cells',\n              onAction: cmd('mceTableSplitCells'),\n              onSetup: selectionTargets.onSetupUnmergeable\n            }\n          ];\n        }\n      };\n      if (hasTableGrid(editor) === false) {\n        editor.ui.registry.addMenuItem('inserttable', {\n          text: 'Table',\n          icon: 'table',\n          onAction: cmd('mceInsertTable')\n        });\n      } else {\n        editor.ui.registry.addNestedMenuItem('inserttable', {\n          text: 'Table',\n          icon: 'table',\n          getSubmenuItems: function () {\n            return [{\n                type: 'fancymenuitem',\n                fancytype: 'inserttable',\n                onAction: insertTableAction\n              }];\n          }\n        });\n      }\n      editor.ui.registry.addMenuItem('tableprops', tableProperties);\n      editor.ui.registry.addMenuItem('deletetable', deleteTable);\n      editor.ui.registry.addNestedMenuItem('row', row);\n      editor.ui.registry.addNestedMenuItem('column', column);\n      editor.ui.registry.addNestedMenuItem('cell', cell);\n      editor.ui.registry.addContextMenu('table', {\n        update: function () {\n          selectionTargets.resetTargets();\n          return selectionTargets.targets().fold(function () {\n            return '';\n          }, function (targets) {\n            if (name(targets.element()) === 'caption') {\n              return 'tableprops deletetable';\n            } else {\n              return 'cell row column | tableprops deletetable';\n            }\n          });\n        }\n      });\n    };\n    var MenuItems = { addMenuItems: addMenuItems };\n\n    var getClipboardRows = function (clipboardRows) {\n      return clipboardRows.get().fold(function () {\n        return;\n      }, function (rows) {\n        return map(rows, function (row) {\n          return row.dom();\n        });\n      });\n    };\n    var setClipboardRows = function (rows, clipboardRows) {\n      var sugarRows = map(rows, Element.fromDom);\n      clipboardRows.set(Option.from(sugarRows));\n    };\n    var getApi = function (editor, clipboardRows) {\n      return {\n        insertTable: function (columns, rows) {\n          return InsertTable.insert(editor, columns, rows);\n        },\n        setClipboardRows: function (rows) {\n          return setClipboardRows(rows, clipboardRows);\n        },\n        getClipboardRows: function () {\n          return getClipboardRows(clipboardRows);\n        }\n      };\n    };\n\n    function Plugin(editor) {\n      var resizeHandler = ResizeHandler(editor);\n      var cellSelection = CellSelection$1(editor, resizeHandler.lazyResize);\n      var actions = TableActions(editor, resizeHandler.lazyWire);\n      var selections = Selections(editor);\n      var selectionTargets = SelectionTargets(editor, selections);\n      var clipboardRows = Cell(Option.none());\n      Commands.registerCommands(editor, actions, cellSelection, selections, clipboardRows);\n      Clipboard.registerEvents(editor, selections, actions, cellSelection);\n      MenuItems.addMenuItems(editor, selectionTargets);\n      Buttons.addButtons(editor, selectionTargets);\n      Buttons.addToolbars(editor);\n      editor.on('PreInit', function () {\n        editor.serializer.addTempAttr(Ephemera.firstSelected());\n        editor.serializer.addTempAttr(Ephemera.lastSelected());\n      });\n      if (hasTabNavigation(editor)) {\n        editor.on('keydown', function (e) {\n          TabContext.handle(e, editor, actions, resizeHandler.lazyWire);\n        });\n      }\n      editor.on('remove', function () {\n        resizeHandler.destroy();\n        cellSelection.destroy();\n      });\n      return getApi(editor, clipboardRows);\n    }\n    global.add('table', Plugin);\n    function Plugin$1 () {\n    }\n\n    return Plugin$1;\n\n}(window));\n})();\n","// Exports the \"link\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/link')\n//   ES2015:\n//     import 'tinymce/plugins/link'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.0.2 (2019-03-05)\n */\n(function () {\nvar link = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var assumeExternalTargets = function (editorSettings) {\n      return typeof editorSettings.link_assume_external_targets === 'boolean' ? editorSettings.link_assume_external_targets : false;\n    };\n    var hasContextToolbar = function (editorSettings) {\n      return typeof editorSettings.link_context_toolbar === 'boolean' ? editorSettings.link_context_toolbar : false;\n    };\n    var getLinkList = function (editorSettings) {\n      return editorSettings.link_list;\n    };\n    var hasDefaultLinkTarget = function (editorSettings) {\n      return typeof editorSettings.default_link_target === 'string';\n    };\n    var useQuickLink = function (editorSettings) {\n      return editorSettings.link_quicklink === true;\n    };\n    var getDefaultLinkTarget = function (editorSettings) {\n      return editorSettings.default_link_target;\n    };\n    var getTargetList = function (editorSettings) {\n      return editorSettings.target_list;\n    };\n    var setTargetList = function (editor, list) {\n      editor.settings.target_list = list;\n    };\n    var shouldShowTargetList = function (editorSettings) {\n      return getTargetList(editorSettings) !== false;\n    };\n    var getRelList = function (editorSettings) {\n      return editorSettings.rel_list;\n    };\n    var hasRelList = function (editorSettings) {\n      return getRelList(editorSettings) !== undefined;\n    };\n    var getLinkClassList = function (editorSettings) {\n      return editorSettings.link_class_list;\n    };\n    var hasLinkClassList = function (editorSettings) {\n      return getLinkClassList(editorSettings) !== undefined;\n    };\n    var shouldShowLinkTitle = function (editorSettings) {\n      return editorSettings.link_title !== false;\n    };\n    var allowUnsafeLinkTarget = function (editorSettings) {\n      return typeof editorSettings.allow_unsafe_link_target === 'boolean' ? editorSettings.allow_unsafe_link_target : false;\n    };\n    var Settings = {\n      assumeExternalTargets: assumeExternalTargets,\n      hasContextToolbar: hasContextToolbar,\n      getLinkList: getLinkList,\n      hasDefaultLinkTarget: hasDefaultLinkTarget,\n      getDefaultLinkTarget: getDefaultLinkTarget,\n      getTargetList: getTargetList,\n      setTargetList: setTargetList,\n      shouldShowTargetList: shouldShowTargetList,\n      getRelList: getRelList,\n      hasRelList: hasRelList,\n      getLinkClassList: getLinkClassList,\n      hasLinkClassList: hasLinkClassList,\n      shouldShowLinkTitle: shouldShowLinkTitle,\n      allowUnsafeLinkTarget: allowUnsafeLinkTarget,\n      useQuickLink: useQuickLink\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var appendClickRemove = function (link, evt) {\n      domGlobals.document.body.appendChild(link);\n      link.dispatchEvent(evt);\n      domGlobals.document.body.removeChild(link);\n    };\n    var open = function (url) {\n      if (!global$3.ie || global$3.ie > 10) {\n        var link = domGlobals.document.createElement('a');\n        link.target = '_blank';\n        link.href = url;\n        link.rel = 'noreferrer noopener';\n        var evt = domGlobals.document.createEvent('MouseEvents');\n        evt.initMouseEvent('click', true, true, domGlobals.window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        appendClickRemove(link, evt);\n      } else {\n        var win = domGlobals.window.open('', '_blank');\n        if (win) {\n          win.opener = null;\n          var doc = win.document;\n          doc.open();\n          doc.write('<meta http-equiv=\"refresh\" content=\"0; url=' + global$2.DOM.encode(url) + '\">');\n          doc.close();\n        }\n      }\n    };\n    var OpenUrl = { open: open };\n\n    var noop = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var never$1 = never;\n    var always$1 = always;\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var noop = function () {\n      };\n      var nul = function () {\n        return null;\n      };\n      var undef = function () {\n        return undefined;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never$1,\n        isSome: never$1,\n        isNone: always$1,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: nul,\n        getOrUndefined: undef,\n        or: id,\n        orThunk: call,\n        map: none,\n        ap: none,\n        each: noop,\n        bind: none,\n        flatten: none,\n        exists: never$1,\n        forall: always$1,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze)\n        Object.freeze(me);\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = function () {\n        return a;\n      };\n      var self = function () {\n        return me;\n      };\n      var map = function (f) {\n        return some(f(a));\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always$1,\n        isNone: never$1,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: map,\n        ap: function (optfab) {\n          return optfab.fold(none, function (fab) {\n            return some(fab(a));\n          });\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        flatten: constant_a,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never$1, function (b) {\n            return elementEq(a, b);\n          });\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null)\n        return 'null';\n      var t = typeof x;\n      if (t === 'object' && Array.prototype.isPrototypeOf(x))\n        return 'array';\n      if (t === 'object' && String.prototype.isPrototypeOf(x))\n        return 'string';\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isFunction = isType('function');\n\n    var rawIndexOf = function () {\n      var pIndexOf = Array.prototype.indexOf;\n      var fastIndex = function (xs, x) {\n        return pIndexOf.call(xs, x);\n      };\n      var slowIndex = function (xs, x) {\n        return slowIndexOf(xs, x);\n      };\n      return pIndexOf === undefined ? slowIndex : fastIndex;\n    }();\n    var contains = function (xs, x) {\n      return rawIndexOf(xs, x) > -1;\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i, xs);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i, xs);\n      }\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var slowIndexOf = function (xs, x) {\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (xs[i] === x) {\n          return i;\n        }\n      }\n      return -1;\n    };\n    var push = Array.prototype.push;\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!Array.prototype.isPrototypeOf(xs[i]))\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        push.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var bind = function (xs, f) {\n      var output = map(xs, f);\n      return flatten(output);\n    };\n    var slice = Array.prototype.slice;\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return slice.call(x);\n    };\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getHref = function (elm) {\n      var href = elm.getAttribute('data-mce-href');\n      return href ? href : elm.getAttribute('href');\n    };\n    var applyRelTargetRules = function (rel, isUnsafe) {\n      var rules = ['noopener'];\n      var rels = rel ? rel.split(/\\s+/) : [];\n      var toString = function (rels) {\n        return global$4.trim(rels.sort().join(' '));\n      };\n      var addTargetRules = function (rels) {\n        rels = removeTargetRules(rels);\n        return rels.length > 0 ? rels.concat(rules) : rules;\n      };\n      var removeTargetRules = function (rels) {\n        return rels.filter(function (val) {\n          return global$4.inArray(rules, val) === -1;\n        });\n      };\n      var newRels = isUnsafe ? addTargetRules(rels) : removeTargetRules(rels);\n      return newRels.length > 0 ? toString(newRels) : '';\n    };\n    var trimCaretContainers = function (text) {\n      return text.replace(/\\uFEFF/g, '');\n    };\n    var getAnchorElement = function (editor, selectedElm) {\n      selectedElm = selectedElm || editor.selection.getNode();\n      if (isImageFigure(selectedElm)) {\n        return editor.dom.select('a[href]', selectedElm)[0];\n      } else {\n        return editor.dom.getParent(selectedElm, 'a[href]');\n      }\n    };\n    var getAnchorText = function (selection, anchorElm) {\n      var text = anchorElm ? anchorElm.innerText || anchorElm.textContent : selection.getContent({ format: 'text' });\n      return trimCaretContainers(text);\n    };\n    var isLink = function (elm) {\n      return elm && elm.nodeName === 'A' && !!elm.href;\n    };\n    var hasLinks = function (elements) {\n      return global$4.grep(elements, isLink).length > 0;\n    };\n    var isOnlyTextSelected = function (html) {\n      if (/</.test(html) && (!/^<a [^>]+>[^<]+<\\/a>$/.test(html) || html.indexOf('href=') === -1)) {\n        return false;\n      }\n      return true;\n    };\n    var isImageFigure = function (elm) {\n      return elm && elm.nodeName === 'FIGURE' && /\\bimage\\b/i.test(elm.className);\n    };\n    var getLinkAttrs = function (data) {\n      return foldl([\n        'title',\n        'rel',\n        'class',\n        'target'\n      ], function (acc, key) {\n        data[key].each(function (value) {\n          acc[key] = value.length > 0 ? value : null;\n        });\n        return acc;\n      }, { href: data.href });\n    };\n    var updateLink = function (editor, anchorElm, text, linkAttrs) {\n      text.each(function (text) {\n        if (anchorElm.hasOwnProperty('innerText')) {\n          anchorElm.innerText = text;\n        } else {\n          anchorElm.textContent = text;\n        }\n      });\n      editor.dom.setAttribs(anchorElm, linkAttrs);\n      editor.selection.select(anchorElm);\n    };\n    var createLink = function (editor, selectedElm, text, linkAttrs) {\n      if (isImageFigure(selectedElm)) {\n        linkImageFigure(editor, selectedElm, linkAttrs);\n      } else {\n        text.fold(function () {\n          return editor.execCommand('mceInsertLink', false, linkAttrs);\n        }, function (text) {\n          return editor.insertContent(editor.dom.createHTML('a', linkAttrs, editor.dom.encode(text)));\n        });\n      }\n    };\n    var link = function (editor, attachState, data) {\n      editor.undoManager.transact(function () {\n        var selectedElm = editor.selection.getNode();\n        var anchorElm = getAnchorElement(editor, selectedElm);\n        var linkAttrs = getLinkAttrs(data);\n        if (!Settings.hasRelList(editor.settings) && Settings.allowUnsafeLinkTarget(editor.settings) === false) {\n          var newRel = applyRelTargetRules(linkAttrs.rel, linkAttrs.target === '_blank');\n          linkAttrs.rel = newRel ? newRel : null;\n        }\n        if (data.href === attachState.href) {\n          attachState.attach();\n        }\n        if (anchorElm) {\n          editor.focus();\n          updateLink(editor, anchorElm, data.text, linkAttrs);\n        } else {\n          createLink(editor, selectedElm, data.text, linkAttrs);\n        }\n      });\n    };\n    var unlink = function (editor) {\n      editor.undoManager.transact(function () {\n        var node = editor.selection.getNode();\n        if (isImageFigure(node)) {\n          unlinkImageFigure(editor, node);\n        } else {\n          var anchorElm = editor.dom.getParent(node, 'a[href]', editor.getBody());\n          if (anchorElm) {\n            editor.dom.remove(anchorElm, true);\n          }\n        }\n        editor.focus();\n      });\n    };\n    var unlinkImageFigure = function (editor, fig) {\n      var img = editor.dom.select('img', fig)[0];\n      if (img) {\n        var a = editor.dom.getParents(img, 'a[href]', fig)[0];\n        if (a) {\n          a.parentNode.insertBefore(img, a);\n          editor.dom.remove(a);\n        }\n      }\n    };\n    var linkImageFigure = function (editor, fig, attrs) {\n      var img = editor.dom.select('img', fig)[0];\n      if (img) {\n        var a = editor.dom.create('a', attrs);\n        img.parentNode.insertBefore(a, img);\n        a.appendChild(img);\n      }\n    };\n    var Utils = {\n      link: link,\n      unlink: unlink,\n      isLink: isLink,\n      hasLinks: hasLinks,\n      getHref: getHref,\n      isOnlyTextSelected: isOnlyTextSelected,\n      getAnchorElement: getAnchorElement,\n      getAnchorText: getAnchorText,\n      applyRelTargetRules: applyRelTargetRules\n    };\n\n    var cat = function (arr) {\n      var r = [];\n      var push = function (x) {\n        r.push(x);\n      };\n      for (var i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    var findMap = function (arr, f) {\n      for (var i = 0; i < arr.length; i++) {\n        var r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Option.none();\n    };\n\n    var getValue = function (item) {\n      return isString(item.value) ? item.value : '';\n    };\n    var sanitizeList = function (list, extractValue) {\n      var out = [];\n      global$4.each(list, function (item) {\n        var text = isString(item.text) ? item.text : isString(item.title) ? item.title : '';\n        if (item.menu !== undefined) ; else {\n          var value = extractValue(item);\n          out.push({\n            text: text,\n            value: value\n          });\n        }\n      });\n      return out;\n    };\n    var sanitizeWith = function (extracter) {\n      if (extracter === void 0) {\n        extracter = getValue;\n      }\n      return function (list) {\n        return Option.from(list).map(function (list) {\n          return sanitizeList(list, extracter);\n        });\n      };\n    };\n    var sanitize = function (list) {\n      return sanitizeWith(getValue)(list);\n    };\n    var createUi = function (name, label) {\n      return function (items) {\n        return {\n          name: name,\n          type: 'selectbox',\n          label: label,\n          items: items\n        };\n      };\n    };\n    var ListOptions = {\n      sanitize: sanitize,\n      sanitizeWith: sanitizeWith,\n      createUi: createUi,\n      getValue: getValue\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var findTextByValue = function (value, catalog) {\n      return findMap(catalog, function (item) {\n        return Option.some(item).filter(function (i) {\n          return i.value === value;\n        });\n      });\n    };\n    var getDelta = function (persistentText, fieldName, catalog, data) {\n      var value = data[fieldName];\n      var hasPersistentText = persistentText.length > 0;\n      return value !== undefined ? findTextByValue(value, catalog).map(function (i) {\n        return {\n          url: {\n            value: i.value,\n            meta: {\n              text: hasPersistentText ? persistentText : i.text,\n              attach: noop\n            }\n          },\n          text: hasPersistentText ? persistentText : i.text\n        };\n      }) : Option.none();\n    };\n    var findCatalog = function (settings, fieldName) {\n      if (fieldName === 'link') {\n        return settings.catalogs.link;\n      } else if (fieldName === 'anchor') {\n        return settings.catalogs.anchor;\n      } else {\n        return Option.none();\n      }\n    };\n    var init = function (initialData, linkSettings) {\n      var persistentText = Cell(initialData.text);\n      var onUrlChange = function (data) {\n        if (persistentText.get().length <= 0) {\n          var urlText = data.url.meta.text !== undefined ? data.url.meta.text : data.url.value;\n          return Option.some({ text: urlText });\n        } else {\n          return Option.none();\n        }\n      };\n      var onCatalogChange = function (data, change) {\n        var catalog = findCatalog(linkSettings, change.name).getOr([]);\n        return getDelta(persistentText.get(), change.name, catalog, data);\n      };\n      var onChange = function (getData, change) {\n        if (change.name === 'url') {\n          return onUrlChange(getData());\n        } else if (contains([\n            'anchor',\n            'link'\n          ], change.name)) {\n          return onCatalogChange(getData(), change);\n        } else if (change.name === 'text') {\n          persistentText.set(getData().text);\n          return Option.none();\n        } else {\n          return Option.none();\n        }\n      };\n      return { onChange: onChange };\n    };\n    var DialogChanges = {\n      init: init,\n      getDelta: getDelta\n    };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var nu = function (baseFn) {\n      var data = Option.none();\n      var callbacks = [];\n      var map = function (f) {\n        return nu(function (nCallback) {\n          get(function (data) {\n            nCallback(f(data));\n          });\n        });\n      };\n      var get = function (nCallback) {\n        if (isReady())\n          call(nCallback);\n        else\n          callbacks.push(nCallback);\n      };\n      var set = function (x) {\n        data = Option.some(x);\n        run(callbacks);\n        callbacks = [];\n      };\n      var isReady = function () {\n        return data.isSome();\n      };\n      var run = function (cbs) {\n        each(cbs, call);\n      };\n      var call = function (cb) {\n        data.each(function (x) {\n          setTimeout(function () {\n            cb(x);\n          }, 0);\n        });\n      };\n      baseFn(set);\n      return {\n        get: get,\n        map: map,\n        isReady: isReady\n      };\n    };\n    var pure = function (a) {\n      return nu(function (callback) {\n        callback(a);\n      });\n    };\n    var LazyValue = {\n      nu: nu,\n      pure: pure\n    };\n\n    var bounce = function (f) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var me = this;\n        setTimeout(function () {\n          f.apply(me, args);\n        }, 0);\n      };\n    };\n\n    var nu$1 = function (baseFn) {\n      var get = function (callback) {\n        baseFn(bounce(callback));\n      };\n      var map = function (fab) {\n        return nu$1(function (callback) {\n          get(function (a) {\n            var value = fab(a);\n            callback(value);\n          });\n        });\n      };\n      var bind = function (aFutureB) {\n        return nu$1(function (callback) {\n          get(function (a) {\n            aFutureB(a).get(callback);\n          });\n        });\n      };\n      var anonBind = function (futureB) {\n        return nu$1(function (callback) {\n          get(function (a) {\n            futureB.get(callback);\n          });\n        });\n      };\n      var toLazy = function () {\n        return LazyValue.nu(get);\n      };\n      var toCached = function () {\n        var cache = null;\n        return nu$1(function (callback) {\n          if (cache === null) {\n            cache = toLazy();\n          }\n          cache.get(callback);\n        });\n      };\n      return {\n        map: map,\n        bind: bind,\n        anonBind: anonBind,\n        toLazy: toLazy,\n        toCached: toCached,\n        get: get\n      };\n    };\n    var pure$1 = function (a) {\n      return nu$1(function (callback) {\n        callback(a);\n      });\n    };\n    var Future = {\n      nu: nu$1,\n      pure: pure$1\n    };\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var delayedConfirm = function (editor, message, callback) {\n      var rng = editor.selection.getRng();\n      global$5.setEditorTimeout(editor, function () {\n        editor.windowManager.confirm(message, function (state) {\n          editor.selection.setRng(rng);\n          callback(state);\n        });\n      });\n    };\n    var tryEmailTransform = function (data) {\n      var url = data.href;\n      var suggestMailTo = url.indexOf('@') > 0 && url.indexOf('//') === -1 && url.indexOf('mailto:') === -1;\n      return suggestMailTo ? Option.some({\n        message: 'The URL you entered seems to be an email address. Do you want to add the required mailto: prefix?',\n        preprocess: function (oldData) {\n          return __assign({}, oldData, { href: 'mailto:' + url });\n        }\n      }) : Option.none();\n    };\n    var tryProtocolTransform = function (assumeExternalTargets) {\n      return function (data) {\n        var url = data.href;\n        var suggestProtocol = assumeExternalTargets === true && !/^\\w+:/i.test(url) || assumeExternalTargets === false && /^\\s*www[\\.|\\d\\.]/i.test(url);\n        return suggestProtocol ? Option.some({\n          message: 'The URL you entered seems to be an external link. Do you want to add the required http:// prefix?',\n          preprocess: function (oldData) {\n            return __assign({}, oldData, { href: 'http://' + url });\n          }\n        }) : Option.none();\n      };\n    };\n    var preprocess = function (editor, assumeExternalTargets, data) {\n      return findMap([\n        tryEmailTransform,\n        tryProtocolTransform(assumeExternalTargets)\n      ], function (f) {\n        return f(data);\n      }).fold(function () {\n        return Future.pure(data);\n      }, function (transform) {\n        return Future.nu(function (callback) {\n          delayedConfirm(editor, transform.message, function (state) {\n            console.log('state', state);\n            callback(state ? transform.preprocess(data) : data);\n          });\n        });\n      });\n    };\n    var DialogConfirms = { preprocess: preprocess };\n\n    var getAnchors = function (editor) {\n      var anchorNodes = editor.dom.select('a:not([href])');\n      var anchors = bind(anchorNodes, function (anchor) {\n        var id = anchor.name || anchor.id;\n        return id ? [{\n            text: id,\n            value: '#' + id\n          }] : [];\n      });\n      return anchors.length > 0 ? Option.some([{\n          text: 'None',\n          value: ''\n        }].concat(anchors)) : Option.none();\n    };\n    var AnchorListOptions = { getAnchors: getAnchors };\n\n    var getClasses = function (editor) {\n      if (Settings.hasLinkClassList(editor.settings)) {\n        var list = Settings.getLinkClassList(editor.settings);\n        return ListOptions.sanitize(list);\n      }\n      return Option.none();\n    };\n    var ClassListOptions = { getClasses: getClasses };\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var parseJson = function (text) {\n      try {\n        return Option.some(JSON.parse(text));\n      } catch (err) {\n        return Option.none();\n      }\n    };\n    var getLinks = function (editor) {\n      var extractor = function (item) {\n        return editor.convertURL(item.value || item.url, 'href');\n      };\n      var linkList = Settings.getLinkList(editor.settings);\n      return Future.nu(function (callback) {\n        if (typeof linkList === 'string') {\n          global$6.send({\n            url: linkList,\n            success: function (text) {\n              return callback(parseJson(text));\n            },\n            error: function (_) {\n              return callback(Option.none());\n            }\n          });\n        } else if (typeof linkList === 'function') {\n          linkList(function (output) {\n            return callback(Option.some(output));\n          });\n        } else {\n          callback(Option.from(linkList));\n        }\n      }).map(function (opt) {\n        return opt.bind(ListOptions.sanitizeWith(extractor));\n      });\n    };\n    var LinkListOptions = { getLinks: getLinks };\n\n    var getRels = function (editor, initialTarget) {\n      if (Settings.hasRelList(editor.settings)) {\n        var list = Settings.getRelList(editor.settings);\n        var isTargetBlank_1 = initialTarget.is('_blank');\n        var enforceSafe = Settings.allowUnsafeLinkTarget(editor.settings) === false;\n        var safeRelExtractor = function (item) {\n          return Utils.applyRelTargetRules(ListOptions.getValue(item), isTargetBlank_1);\n        };\n        var sanitizer = enforceSafe ? ListOptions.sanitizeWith(safeRelExtractor) : ListOptions.sanitize;\n        return sanitizer(list);\n      }\n      return Option.none();\n    };\n    var RelOptions = { getRels: getRels };\n\n    var fallbacks = [\n      {\n        text: 'Current window',\n        value: ''\n      },\n      {\n        text: 'New window',\n        value: '_blank'\n      }\n    ];\n    var getTargets = function (editor) {\n      if (Settings.shouldShowTargetList(editor.settings)) {\n        var list = Settings.getTargetList(editor.settings);\n        return ListOptions.sanitize(list).orThunk(function () {\n          return Option.some(fallbacks);\n        });\n      }\n      return Option.none();\n    };\n    var TargetOptions = { getTargets: getTargets };\n\n    var nonEmptyAttr = function (dom, elem, name) {\n      var val = dom.getAttrib(elem, name);\n      return val !== null && val.length > 0 ? Option.some(val) : Option.none();\n    };\n    var extractFromAnchor = function (editor, settings, anchor, selection) {\n      var dom = editor.dom;\n      var onlyText = Utils.isOnlyTextSelected(selection.getContent());\n      var text = onlyText ? Option.some(Utils.getAnchorText(selection, anchor)) : Option.none();\n      var url = anchor ? Option.some(dom.getAttrib(anchor, 'href')) : Option.none();\n      var defaultTarget = Settings.hasDefaultLinkTarget(settings) ? Option.some(Settings.getDefaultLinkTarget(settings)) : Option.none();\n      var target = anchor ? Option.from(dom.getAttrib(anchor, 'target')) : defaultTarget;\n      var rel = nonEmptyAttr(dom, anchor, 'rel');\n      var linkClass = nonEmptyAttr(dom, anchor, 'class');\n      var title = nonEmptyAttr(dom, anchor, 'title');\n      return {\n        url: url,\n        text: text,\n        title: title,\n        target: target,\n        rel: rel,\n        linkClass: linkClass\n      };\n    };\n    var collect = function (editor, settings, linkNode) {\n      return LinkListOptions.getLinks(editor).map(function (links) {\n        var anchor = extractFromAnchor(editor, settings, linkNode, editor.selection);\n        return {\n          anchor: anchor,\n          catalogs: {\n            targets: TargetOptions.getTargets(editor),\n            rels: RelOptions.getRels(editor, anchor.target),\n            classes: ClassListOptions.getClasses(editor),\n            anchor: AnchorListOptions.getAnchors(editor),\n            link: links\n          },\n          optNode: Option.from(linkNode),\n          flags: { titleEnabled: Settings.shouldShowLinkTitle(settings) }\n        };\n      });\n    };\n    var DialogInfo = { collect: collect };\n\n    var handleSubmit = function (editor, info, assumeExternalTargets) {\n      return function (api) {\n        var data = api.getData();\n        if (!data.url.value) {\n          Utils.unlink(editor);\n          api.close();\n          return;\n        }\n        var getChangedValue = function (key) {\n          return Option.from(data[key]).filter(function (value) {\n            return !info.anchor[key].is(value);\n          });\n        };\n        var changedData = {\n          href: data.url.value,\n          text: getChangedValue('text'),\n          target: getChangedValue('target'),\n          rel: getChangedValue('rel'),\n          class: getChangedValue('linkClass'),\n          title: getChangedValue('title')\n        };\n        var attachState = {\n          href: data.url.value,\n          attach: data.url.meta !== undefined && data.url.meta.attach ? data.url.meta.attach : function () {\n          }\n        };\n        DialogConfirms.preprocess(editor, assumeExternalTargets, changedData).get(function (pData) {\n          Utils.link(editor, attachState, pData);\n        });\n        api.close();\n      };\n    };\n    var collectData = function (editor) {\n      var settings = editor.settings;\n      var anchorNode = Utils.getAnchorElement(editor);\n      return DialogInfo.collect(editor, settings, anchorNode);\n    };\n    var getInitialData = function (info) {\n      return {\n        url: {\n          value: info.anchor.url.getOr(''),\n          meta: {\n            attach: function () {\n            },\n            text: info.anchor.url.fold(function () {\n              return '';\n            }, function () {\n              return info.anchor.text.getOr('');\n            }),\n            original: { value: info.anchor.url.getOr('') }\n          }\n        },\n        text: info.anchor.text.getOr(''),\n        title: info.anchor.title.getOr(''),\n        anchor: info.anchor.url.getOr(''),\n        link: info.anchor.url.getOr(''),\n        rel: info.anchor.rel.getOr(''),\n        target: info.anchor.target.getOr(''),\n        linkClass: info.anchor.linkClass.getOr('')\n      };\n    };\n    var makeDialog = function (settings, onSubmit) {\n      var urlInput = [{\n          name: 'url',\n          type: 'urlinput',\n          filetype: 'file',\n          label: 'URL'\n        }];\n      var displayText = settings.anchor.text.map(function () {\n        return {\n          name: 'text',\n          type: 'input',\n          label: 'Text to display'\n        };\n      }).toArray();\n      var titleText = settings.flags.titleEnabled ? [{\n          name: 'title',\n          type: 'input',\n          label: 'Title'\n        }] : [];\n      var initialData = getInitialData(settings);\n      var dialogDelta = DialogChanges.init(initialData, settings);\n      var catalogs = settings.catalogs;\n      var body = {\n        type: 'panel',\n        items: flatten([\n          urlInput,\n          displayText,\n          titleText,\n          cat([\n            catalogs.anchor.map(ListOptions.createUi('anchor', 'Anchors')),\n            catalogs.rels.map(ListOptions.createUi('rel', 'Rel')),\n            catalogs.targets.map(ListOptions.createUi('target', 'Open link in...')),\n            catalogs.link.map(ListOptions.createUi('link', 'Link list')),\n            catalogs.classes.map(ListOptions.createUi('linkClass', 'Class'))\n          ])\n        ])\n      };\n      return {\n        title: 'Insert/Edit Link',\n        size: 'normal',\n        body: body,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: initialData,\n        onChange: function (api, _a) {\n          var name = _a.name;\n          dialogDelta.onChange(api.getData, { name: name }).each(function (newData) {\n            api.setData(newData);\n          });\n        },\n        onSubmit: onSubmit\n      };\n    };\n    var open$1 = function (editor) {\n      var data = collectData(editor);\n      data.map(function (info) {\n        var onSubmit = handleSubmit(editor, info, Settings.assumeExternalTargets(editor.settings));\n        return makeDialog(info, onSubmit);\n      }).get(function (spec) {\n        editor.windowManager.open(spec);\n      });\n    };\n    var Dialog = { open: open$1 };\n\n    var getLink = function (editor, elm) {\n      return editor.dom.getParent(elm, 'a[href]');\n    };\n    var getSelectedLink = function (editor) {\n      return getLink(editor, editor.selection.getStart());\n    };\n    var hasOnlyAltModifier = function (e) {\n      return e.altKey === true && e.shiftKey === false && e.ctrlKey === false && e.metaKey === false;\n    };\n    var gotoLink = function (editor, a) {\n      if (a) {\n        var href = Utils.getHref(a);\n        if (/^#/.test(href)) {\n          var targetEl = editor.$(href);\n          if (targetEl.length) {\n            editor.selection.scrollIntoView(targetEl[0], true);\n          }\n        } else {\n          OpenUrl.open(a.href);\n        }\n      }\n    };\n    var openDialog = function (editor) {\n      return function () {\n        Dialog.open(editor);\n      };\n    };\n    var gotoSelectedLink = function (editor) {\n      return function () {\n        gotoLink(editor, getSelectedLink(editor));\n      };\n    };\n    var leftClickedOnAHref = function (editor) {\n      return function (elm) {\n        var sel, rng, node;\n        if (Settings.hasContextToolbar(editor.settings) && Utils.isLink(elm)) {\n          sel = editor.selection;\n          rng = sel.getRng();\n          node = rng.startContainer;\n          if (node.nodeType === 3 && sel.isCollapsed() && rng.startOffset > 0 && rng.startOffset < node.data.length) {\n            return true;\n          }\n        }\n        return false;\n      };\n    };\n    var setupGotoLinks = function (editor) {\n      editor.on('click', function (e) {\n        var link = getLink(editor, e.target);\n        if (link && global$1.metaKeyPressed(e)) {\n          e.preventDefault();\n          gotoLink(editor, link);\n        }\n      });\n      editor.on('keydown', function (e) {\n        var link = getSelectedLink(editor);\n        if (link && e.keyCode === 13 && hasOnlyAltModifier(e)) {\n          e.preventDefault();\n          gotoLink(editor, link);\n        }\n      });\n    };\n    var toggleActiveState = function (editor) {\n      return function (api) {\n        var nodeChangeHandler = function (e) {\n          return api.setActive(!editor.readonly && !!Utils.getAnchorElement(editor, e.element));\n        };\n        editor.on('nodechange', nodeChangeHandler);\n        return function () {\n          return editor.off('nodechange', nodeChangeHandler);\n        };\n      };\n    };\n    var toggleEnabledState = function (editor) {\n      return function (api) {\n        api.setDisabled(!Utils.hasLinks(editor.dom.getParents(editor.selection.getStart())));\n        var nodeChangeHandler = function (e) {\n          return api.setDisabled(!Utils.hasLinks(e.parents));\n        };\n        editor.on('nodechange', nodeChangeHandler);\n        return function () {\n          return editor.off('nodechange', nodeChangeHandler);\n        };\n      };\n    };\n    var Actions = {\n      openDialog: openDialog,\n      gotoSelectedLink: gotoSelectedLink,\n      leftClickedOnAHref: leftClickedOnAHref,\n      setupGotoLinks: setupGotoLinks,\n      toggleActiveState: toggleActiveState,\n      toggleEnabledState: toggleEnabledState\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mceLink', function () {\n        if (Settings.useQuickLink(editor.settings)) {\n          editor.fire('contexttoolbar-show', { toolbarKey: 'quicklink' });\n        } else {\n          Actions.openDialog(editor)();\n        }\n      });\n    };\n    var Commands = { register: register };\n\n    var setup = function (editor) {\n      editor.addShortcut('Meta+K', '', function () {\n        editor.execCommand('mceLink');\n      });\n    };\n    var Keyboard = { setup: setup };\n\n    var setupButtons = function (editor) {\n      editor.ui.registry.addToggleButton('link', {\n        icon: 'link',\n        tooltip: 'Insert/edit link',\n        onAction: Actions.openDialog(editor),\n        onSetup: Actions.toggleActiveState(editor)\n      });\n      editor.ui.registry.addButton('unlink', {\n        icon: 'unlink',\n        tooltip: 'Remove link',\n        onAction: function () {\n          return Utils.unlink(editor);\n        },\n        onSetup: Actions.toggleEnabledState(editor)\n      });\n    };\n    var setupMenuItems = function (editor) {\n      editor.ui.registry.addMenuItem('openlink', {\n        text: 'Open link',\n        icon: 'new-tab',\n        onAction: Actions.gotoSelectedLink(editor),\n        onSetup: Actions.toggleEnabledState(editor)\n      });\n      editor.ui.registry.addMenuItem('link', {\n        icon: 'link',\n        text: 'Link...',\n        shortcut: 'Meta+K',\n        onAction: Actions.openDialog(editor)\n      });\n      editor.ui.registry.addMenuItem('unlink', {\n        icon: 'unlink',\n        text: 'Remove link',\n        onAction: function () {\n          return Utils.unlink(editor);\n        },\n        onSetup: Actions.toggleEnabledState(editor)\n      });\n    };\n    var setupContextMenu = function (editor) {\n      var noLink = 'link';\n      var inLink = 'link unlink openlink';\n      editor.ui.registry.addContextMenu('link', {\n        update: function (element) {\n          return Utils.hasLinks(editor.dom.getParents(element, 'a')) ? inLink : noLink;\n        }\n      });\n    };\n    var setupContextToolbars = function (editor) {\n      var collapseSelectionToEnd = function (editor) {\n        editor.selection.collapse(false);\n      };\n      editor.ui.registry.addContextForm('quicklink', {\n        launch: {\n          type: 'contextformtogglebutton',\n          icon: 'link',\n          tooltip: 'Link',\n          onSetup: Actions.toggleActiveState(editor)\n        },\n        label: 'Link',\n        predicate: function (node) {\n          return !!Utils.getAnchorElement(editor, node) && Settings.hasContextToolbar(editor.settings);\n        },\n        initValue: function () {\n          var elm = Utils.getAnchorElement(editor);\n          return !!elm ? Utils.getHref(elm) : '';\n        },\n        commands: [\n          {\n            type: 'contextformtogglebutton',\n            icon: 'link',\n            tooltip: 'Link',\n            primary: true,\n            onSetup: function (buttonApi) {\n              var node = editor.selection.getNode();\n              buttonApi.setActive(!!Utils.getAnchorElement(editor, node));\n              return Actions.toggleActiveState(editor)(buttonApi);\n            },\n            onAction: function (formApi) {\n              var anchor = Utils.getAnchorElement(editor);\n              var value = formApi.getValue();\n              if (!anchor) {\n                var attachState = {\n                  href: value,\n                  attach: function () {\n                  }\n                };\n                var onlyText = Utils.isOnlyTextSelected(editor.selection.getContent());\n                var text = onlyText ? Option.some(Utils.getAnchorText(editor.selection, anchor)).filter(function (t) {\n                  return t.length > 0;\n                }).or(Option.from(value)) : Option.none();\n                Utils.link(editor, attachState, {\n                  href: value,\n                  text: text,\n                  title: Option.none(),\n                  rel: Option.none(),\n                  target: Option.none(),\n                  class: Option.none()\n                });\n                formApi.hide();\n              } else {\n                editor.dom.setAttrib(anchor, 'href', value);\n                collapseSelectionToEnd(editor);\n                formApi.hide();\n              }\n            }\n          },\n          {\n            type: 'contextformtogglebutton',\n            icon: 'unlink',\n            tooltip: 'Remove link',\n            active: false,\n            onSetup: function () {\n              return function () {\n              };\n            },\n            onAction: function (formApi) {\n              Utils.unlink(editor);\n              formApi.hide();\n            }\n          }\n        ]\n      });\n    };\n    var Controls = {\n      setupButtons: setupButtons,\n      setupMenuItems: setupMenuItems,\n      setupContextMenu: setupContextMenu,\n      setupContextToolbars: setupContextToolbars\n    };\n\n    global.add('link', function (editor) {\n      Controls.setupButtons(editor);\n      Controls.setupMenuItems(editor);\n      Controls.setupContextMenu(editor);\n      Controls.setupContextToolbars(editor);\n      Actions.setupGotoLinks(editor);\n      Commands.register(editor);\n      Keyboard.setup(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n","// Exports the \"image\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/image')\n//   ES2015:\n//     import 'tinymce/plugins/image'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.0.2 (2019-03-05)\n */\n(function () {\nvar image = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var noop = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var identity = function (x) {\n      return x;\n    };\n    var die = function (msg) {\n      return function () {\n        throw new Error(msg);\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var never$1 = never;\n    var always$1 = always;\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var noop = function () {\n      };\n      var nul = function () {\n        return null;\n      };\n      var undef = function () {\n        return undefined;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never$1,\n        isSome: never$1,\n        isNone: always$1,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: nul,\n        getOrUndefined: undef,\n        or: id,\n        orThunk: call,\n        map: none,\n        ap: none,\n        each: noop,\n        bind: none,\n        flatten: none,\n        exists: never$1,\n        forall: always$1,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze)\n        Object.freeze(me);\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = function () {\n        return a;\n      };\n      var self = function () {\n        return me;\n      };\n      var map = function (f) {\n        return some(f(a));\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always$1,\n        isNone: never$1,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: map,\n        ap: function (optfab) {\n          return optfab.fold(none, function (fab) {\n            return some(fab(a));\n          });\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        flatten: constant_a,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never$1, function (b) {\n            return elementEq(a, b);\n          });\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null)\n        return 'null';\n      var t = typeof x;\n      if (t === 'object' && Array.prototype.isPrototypeOf(x))\n        return 'array';\n      if (t === 'object' && String.prototype.isPrototypeOf(x))\n        return 'string';\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isObject = isType('object');\n    var isFunction = isType('function');\n    var isNumber = isType('number');\n\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i, xs);\n      }\n    };\n    var find = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i, xs)) {\n          return Option.some(x);\n        }\n      }\n      return Option.none();\n    };\n    var push = Array.prototype.push;\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!Array.prototype.isPrototypeOf(xs[i]))\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        push.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var slice = Array.prototype.slice;\n    var head = function (xs) {\n      return xs.length === 0 ? Option.none() : Option.some(xs[0]);\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return slice.call(x);\n    };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var nu = function (baseFn) {\n      var data = Option.none();\n      var callbacks = [];\n      var map = function (f) {\n        return nu(function (nCallback) {\n          get(function (data) {\n            nCallback(f(data));\n          });\n        });\n      };\n      var get = function (nCallback) {\n        if (isReady())\n          call(nCallback);\n        else\n          callbacks.push(nCallback);\n      };\n      var set = function (x) {\n        data = Option.some(x);\n        run(callbacks);\n        callbacks = [];\n      };\n      var isReady = function () {\n        return data.isSome();\n      };\n      var run = function (cbs) {\n        each(cbs, call);\n      };\n      var call = function (cb) {\n        data.each(function (x) {\n          setTimeout(function () {\n            cb(x);\n          }, 0);\n        });\n      };\n      baseFn(set);\n      return {\n        get: get,\n        map: map,\n        isReady: isReady\n      };\n    };\n    var pure = function (a) {\n      return nu(function (callback) {\n        callback(a);\n      });\n    };\n    var LazyValue = {\n      nu: nu,\n      pure: pure\n    };\n\n    var bounce = function (f) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var me = this;\n        setTimeout(function () {\n          f.apply(me, args);\n        }, 0);\n      };\n    };\n\n    var nu$1 = function (baseFn) {\n      var get = function (callback) {\n        baseFn(bounce(callback));\n      };\n      var map = function (fab) {\n        return nu$1(function (callback) {\n          get(function (a) {\n            var value = fab(a);\n            callback(value);\n          });\n        });\n      };\n      var bind = function (aFutureB) {\n        return nu$1(function (callback) {\n          get(function (a) {\n            aFutureB(a).get(callback);\n          });\n        });\n      };\n      var anonBind = function (futureB) {\n        return nu$1(function (callback) {\n          get(function (a) {\n            futureB.get(callback);\n          });\n        });\n      };\n      var toLazy = function () {\n        return LazyValue.nu(get);\n      };\n      var toCached = function () {\n        var cache = null;\n        return nu$1(function (callback) {\n          if (cache === null) {\n            cache = toLazy();\n          }\n          cache.get(callback);\n        });\n      };\n      return {\n        map: map,\n        bind: bind,\n        anonBind: anonBind,\n        toLazy: toLazy,\n        toCached: toCached,\n        get: get\n      };\n    };\n    var pure$1 = function (a) {\n      return nu$1(function (callback) {\n        callback(a);\n      });\n    };\n    var Future = {\n      nu: nu$1,\n      pure: pure$1\n    };\n\n    var value = function (o) {\n      var is = function (v) {\n        return o === v;\n      };\n      var or = function (opt) {\n        return value(o);\n      };\n      var orThunk = function (f) {\n        return value(o);\n      };\n      var map = function (f) {\n        return value(f(o));\n      };\n      var mapError = function (f) {\n        return value(o);\n      };\n      var each = function (f) {\n        f(o);\n      };\n      var bind = function (f) {\n        return f(o);\n      };\n      var fold = function (_, onValue) {\n        return onValue(o);\n      };\n      var exists = function (f) {\n        return f(o);\n      };\n      var forall = function (f) {\n        return f(o);\n      };\n      var toOption = function () {\n        return Option.some(o);\n      };\n      return {\n        is: is,\n        isValue: always,\n        isError: never,\n        getOr: constant(o),\n        getOrThunk: constant(o),\n        getOrDie: constant(o),\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: each,\n        bind: bind,\n        exists: exists,\n        forall: forall,\n        toOption: toOption\n      };\n    };\n    var error = function (message) {\n      var getOrThunk = function (f) {\n        return f();\n      };\n      var getOrDie = function () {\n        return die(String(message))();\n      };\n      var or = function (opt) {\n        return opt;\n      };\n      var orThunk = function (f) {\n        return f();\n      };\n      var map = function (f) {\n        return error(message);\n      };\n      var mapError = function (f) {\n        return error(f(message));\n      };\n      var bind = function (f) {\n        return error(message);\n      };\n      var fold = function (onError, _) {\n        return onError(message);\n      };\n      return {\n        is: never,\n        isValue: never,\n        isError: always,\n        getOr: identity,\n        getOrThunk: getOrThunk,\n        getOrDie: getOrDie,\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: noop,\n        bind: bind,\n        exists: never,\n        forall: always,\n        toOption: Option.none\n      };\n    };\n    var Result = {\n      value: value,\n      error: error\n    };\n\n    var wrap = function (delegate) {\n      var toCached = function () {\n        return wrap(delegate.toCached());\n      };\n      var bindFuture = function (f) {\n        return wrap(delegate.bind(function (resA) {\n          return resA.fold(function (err) {\n            return Future.pure(Result.error(err));\n          }, function (a) {\n            return f(a);\n          });\n        }));\n      };\n      var bindResult = function (f) {\n        return wrap(delegate.map(function (resA) {\n          return resA.bind(f);\n        }));\n      };\n      var mapResult = function (f) {\n        return wrap(delegate.map(function (resA) {\n          return resA.map(f);\n        }));\n      };\n      var mapError = function (f) {\n        return wrap(delegate.map(function (resA) {\n          return resA.mapError(f);\n        }));\n      };\n      var foldResult = function (whenError, whenValue) {\n        return delegate.map(function (res) {\n          return res.fold(whenError, whenValue);\n        });\n      };\n      var withTimeout = function (timeout, errorThunk) {\n        return wrap(Future.nu(function (callback) {\n          var timedOut = false;\n          var timer = window.setTimeout(function () {\n            timedOut = true;\n            callback(Result.error(errorThunk()));\n          }, timeout);\n          delegate.get(function (result) {\n            if (!timedOut) {\n              window.clearTimeout(timer);\n              callback(result);\n            }\n          });\n        }));\n      };\n      return __assign({}, delegate, {\n        toCached: toCached,\n        bindFuture: bindFuture,\n        bindResult: bindResult,\n        mapResult: mapResult,\n        mapError: mapError,\n        foldResult: foldResult,\n        withTimeout: withTimeout\n      });\n    };\n    var nu$2 = function (worker) {\n      return wrap(Future.nu(worker));\n    };\n    var value$1 = function (value) {\n      return wrap(Future.pure(Result.value(value)));\n    };\n    var error$1 = function (error) {\n      return wrap(Future.pure(Result.error(error)));\n    };\n    var fromResult = function (result) {\n      return wrap(Future.pure(result));\n    };\n    var fromFuture = function (future) {\n      return wrap(future.map(Result.value));\n    };\n    var fromPromise = function (promise) {\n      return nu$2(function (completer) {\n        promise.then(function (value) {\n          completer(Result.value(value));\n        }, function (error) {\n          completer(Result.error(error));\n        });\n      });\n    };\n    var FutureResult = {\n      nu: nu$2,\n      wrap: wrap,\n      pure: value$1,\n      value: value$1,\n      error: error$1,\n      fromResult: fromResult,\n      fromFuture: fromFuture,\n      fromPromise: fromPromise\n    };\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var shallow = function (old, nu) {\n      return nu;\n    };\n    var deep = function (old, nu) {\n      var bothObjects = isObject(old) && isObject(nu);\n      return bothObjects ? deepMerge(old, nu) : nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++)\n          objects[i] = arguments[i];\n        if (objects.length === 0)\n          throw new Error('Can\\'t merge zero objects');\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject)\n            if (hasOwnProperty.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n        }\n        return ret;\n      };\n    };\n    var deepMerge = baseMerge(deep);\n    var merge = baseMerge(shallow);\n\n    var Global = typeof window !== 'undefined' ? window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i)\n        o = o[parts[i]];\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null)\n        throw name + ' not available on this browser';\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    var url = function () {\n      return Global$1.getOrDie('URL');\n    };\n    var createObjectURL = function (blob) {\n      return url().createObjectURL(blob);\n    };\n    var revokeObjectURL = function (u) {\n      url().revokeObjectURL(u);\n    };\n    var URL = {\n      createObjectURL: createObjectURL,\n      revokeObjectURL: revokeObjectURL\n    };\n\n    var makeItems = function (info) {\n      var imageUrl = {\n        name: 'src',\n        type: 'urlinput',\n        filetype: 'image',\n        label: 'Source'\n      };\n      var imageList = info.imageList.map(function (items) {\n        return {\n          name: 'images',\n          type: 'selectbox',\n          label: 'Image list',\n          items: items\n        };\n      });\n      var imageDescription = {\n        name: 'alt',\n        type: 'input',\n        label: 'Image description'\n      };\n      var imageTitle = {\n        name: 'title',\n        type: 'input',\n        label: 'Image title'\n      };\n      var imageDimensions = {\n        name: 'dimensions',\n        type: 'sizeinput'\n      };\n      var classList = info.classList.map(function (items) {\n        return {\n          name: 'classes',\n          type: 'selectbox',\n          label: 'Class',\n          items: items\n        };\n      });\n      var caption = {\n        type: 'label',\n        label: 'Caption',\n        items: [{\n            type: 'checkbox',\n            name: 'caption',\n            label: 'Show caption'\n          }]\n      };\n      return flatten([\n        [imageUrl],\n        imageList.toArray(),\n        info.hasDescription ? [imageDescription] : [],\n        info.hasImageTitle ? [imageTitle] : [],\n        info.hasDimensions ? [imageDimensions] : [],\n        [{\n            type: 'grid',\n            columns: 2,\n            items: flatten([\n              classList.toArray(),\n              info.hasImageCaption ? [caption] : []\n            ])\n          }]\n      ]);\n    };\n    var makeTab = function (info) {\n      return {\n        title: 'General',\n        items: makeItems(info)\n      };\n    };\n    var MainTab = {\n      makeTab: makeTab,\n      makeItems: makeItems\n    };\n\n    function FileReader () {\n      var f = Global$1.getOrDie('FileReader');\n      return new f();\n    }\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Promise');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var hasDimensions = function (editor) {\n      return editor.settings.image_dimensions === false ? false : true;\n    };\n    var hasAdvTab = function (editor) {\n      return editor.settings.image_advtab === true ? true : false;\n    };\n    var getPrependUrl = function (editor) {\n      return editor.getParam('image_prepend_url', '');\n    };\n    var getClassList = function (editor) {\n      return editor.getParam('image_class_list');\n    };\n    var hasDescription = function (editor) {\n      return editor.settings.image_description === false ? false : true;\n    };\n    var hasImageTitle = function (editor) {\n      return editor.settings.image_title === true ? true : false;\n    };\n    var hasImageCaption = function (editor) {\n      return editor.settings.image_caption === true ? true : false;\n    };\n    var getImageList = function (editor) {\n      return editor.getParam('image_list', false);\n    };\n    var hasUploadUrl = function (editor) {\n      return !!editor.getParam('images_upload_url', false);\n    };\n    var hasUploadHandler = function (editor) {\n      return !!editor.getParam('images_upload_handler', false);\n    };\n    var getUploadUrl = function (editor) {\n      return editor.getParam('images_upload_url');\n    };\n    var getUploadHandler = function (editor) {\n      return editor.getParam('images_upload_handler');\n    };\n    var getUploadBasePath = function (editor) {\n      return editor.getParam('images_upload_base_path');\n    };\n    var getUploadCredentials = function (editor) {\n      return editor.getParam('images_upload_credentials');\n    };\n    var Settings = {\n      hasDimensions: hasDimensions,\n      hasAdvTab: hasAdvTab,\n      getPrependUrl: getPrependUrl,\n      getClassList: getClassList,\n      hasDescription: hasDescription,\n      hasImageTitle: hasImageTitle,\n      hasImageCaption: hasImageCaption,\n      getImageList: getImageList,\n      hasUploadUrl: hasUploadUrl,\n      hasUploadHandler: hasUploadHandler,\n      getUploadUrl: getUploadUrl,\n      getUploadHandler: getUploadHandler,\n      getUploadBasePath: getUploadBasePath,\n      getUploadCredentials: getUploadCredentials\n    };\n\n    var parseIntAndGetMax = function (val1, val2) {\n      return Math.max(parseInt(val1, 10), parseInt(val2, 10));\n    };\n    var getImageSize = function (url, callback) {\n      var img = domGlobals.document.createElement('img');\n      function done(dimensions) {\n        if (img.parentNode) {\n          img.parentNode.removeChild(img);\n        }\n        callback(dimensions);\n      }\n      img.onload = function () {\n        var width = parseIntAndGetMax(img.width, img.clientWidth);\n        var height = parseIntAndGetMax(img.height, img.clientHeight);\n        var dimensions = {\n          width: width,\n          height: height\n        };\n        done(Result.value(dimensions));\n      };\n      img.onerror = function () {\n        done(Result.error(undefined));\n      };\n      var style = img.style;\n      style.visibility = 'hidden';\n      style.position = 'fixed';\n      style.bottom = style.left = '0px';\n      style.width = style.height = 'auto';\n      domGlobals.document.body.appendChild(img);\n      img.src = url;\n    };\n    var buildListItems = function (inputList, itemCallback, startItems) {\n      function appendItems(values, output) {\n        output = output || [];\n        global$2.each(values, function (item) {\n          var menuItem = { text: item.text || item.title };\n          if (item.menu) {\n            menuItem.menu = appendItems(item.menu);\n          } else {\n            menuItem.value = item.value;\n            itemCallback(menuItem);\n          }\n          output.push(menuItem);\n        });\n        return output;\n      }\n      return appendItems(inputList, startItems || []);\n    };\n    var removePixelSuffix = function (value) {\n      if (value) {\n        value = value.replace(/px$/, '');\n      }\n      return value;\n    };\n    var addPixelSuffix = function (value) {\n      if (value.length > 0 && /^[0-9]+$/.test(value)) {\n        value += 'px';\n      }\n      return value;\n    };\n    var mergeMargins = function (css) {\n      if (css.margin) {\n        var splitMargin = String(css.margin).split(' ');\n        switch (splitMargin.length) {\n        case 1:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[0];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[0];\n          break;\n        case 2:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 3:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 4:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[3];\n        }\n        delete css.margin;\n      }\n      return css;\n    };\n    var createImageList = function (editor, callback) {\n      var imageList = Settings.getImageList(editor);\n      if (typeof imageList === 'string') {\n        global$3.send({\n          url: imageList,\n          success: function (text) {\n            callback(JSON.parse(text));\n          }\n        });\n      } else if (typeof imageList === 'function') {\n        imageList(callback);\n      } else {\n        callback(imageList);\n      }\n    };\n    var waitLoadImage = function (editor, data, imgElm) {\n      function selectImage() {\n        imgElm.onload = imgElm.onerror = null;\n        if (editor.selection) {\n          editor.selection.select(imgElm);\n          editor.nodeChanged();\n        }\n      }\n      imgElm.onload = function () {\n        if (!data.width && !data.height && Settings.hasDimensions(editor)) {\n          editor.dom.setAttribs(imgElm, {\n            width: imgElm.clientWidth,\n            height: imgElm.clientHeight\n          });\n        }\n        selectImage();\n      };\n      imgElm.onerror = selectImage;\n    };\n    var blobToDataUri = function (blob) {\n      return new global$1(function (resolve, reject) {\n        var reader = FileReader();\n        reader.onload = function () {\n          resolve(reader.result);\n        };\n        reader.onerror = function () {\n          reject(reader.error.message);\n        };\n        reader.readAsDataURL(blob);\n      });\n    };\n    var Utils = {\n      getImageSize: getImageSize,\n      buildListItems: buildListItems,\n      removePixelSuffix: removePixelSuffix,\n      addPixelSuffix: addPixelSuffix,\n      mergeMargins: mergeMargins,\n      createImageList: createImageList,\n      waitLoadImage: waitLoadImage,\n      blobToDataUri: blobToDataUri\n    };\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var DOM = global$4.DOM;\n    var getHspace = function (image) {\n      if (image.style.marginLeft && image.style.marginRight && image.style.marginLeft === image.style.marginRight) {\n        return Utils.removePixelSuffix(image.style.marginLeft);\n      } else {\n        return '';\n      }\n    };\n    var getVspace = function (image) {\n      if (image.style.marginTop && image.style.marginBottom && image.style.marginTop === image.style.marginBottom) {\n        return Utils.removePixelSuffix(image.style.marginTop);\n      } else {\n        return '';\n      }\n    };\n    var getBorder = function (image) {\n      if (image.style.borderWidth) {\n        return Utils.removePixelSuffix(image.style.borderWidth);\n      } else {\n        return '';\n      }\n    };\n    var getAttrib = function (image, name) {\n      if (image.hasAttribute(name)) {\n        return image.getAttribute(name);\n      } else {\n        return '';\n      }\n    };\n    var getStyle = function (image, name) {\n      return image.style[name] ? image.style[name] : '';\n    };\n    var hasCaption = function (image) {\n      return image.parentNode !== null && image.parentNode.nodeName === 'FIGURE';\n    };\n    var setAttrib = function (image, name, value) {\n      image.setAttribute(name, value);\n    };\n    var wrapInFigure = function (image) {\n      var figureElm = DOM.create('figure', { class: 'image' });\n      DOM.insertAfter(figureElm, image);\n      figureElm.appendChild(image);\n      figureElm.appendChild(DOM.create('figcaption', { contentEditable: true }, 'Caption'));\n      figureElm.contentEditable = 'false';\n    };\n    var removeFigure = function (image) {\n      var figureElm = image.parentNode;\n      DOM.insertAfter(image, figureElm);\n      DOM.remove(figureElm);\n    };\n    var toggleCaption = function (image) {\n      if (hasCaption(image)) {\n        removeFigure(image);\n      } else {\n        wrapInFigure(image);\n      }\n    };\n    var normalizeStyle = function (image, normalizeCss) {\n      var attrValue = image.getAttribute('style');\n      var value = normalizeCss(attrValue !== null ? attrValue : '');\n      if (value.length > 0) {\n        image.setAttribute('style', value);\n        image.setAttribute('data-mce-style', value);\n      } else {\n        image.removeAttribute('style');\n      }\n    };\n    var setSize = function (name, normalizeCss) {\n      return function (image, name, value) {\n        if (image.style[name]) {\n          image.style[name] = Utils.addPixelSuffix(value);\n          normalizeStyle(image, normalizeCss);\n        } else {\n          setAttrib(image, name, value);\n        }\n      };\n    };\n    var getSize = function (image, name) {\n      if (image.style[name]) {\n        return Utils.removePixelSuffix(image.style[name]);\n      } else {\n        return getAttrib(image, name);\n      }\n    };\n    var setHspace = function (image, value) {\n      var pxValue = Utils.addPixelSuffix(value);\n      image.style.marginLeft = pxValue;\n      image.style.marginRight = pxValue;\n    };\n    var setVspace = function (image, value) {\n      var pxValue = Utils.addPixelSuffix(value);\n      image.style.marginTop = pxValue;\n      image.style.marginBottom = pxValue;\n    };\n    var setBorder = function (image, value) {\n      var pxValue = Utils.addPixelSuffix(value);\n      image.style.borderWidth = pxValue;\n    };\n    var setBorderStyle = function (image, value) {\n      image.style.borderStyle = value;\n    };\n    var getBorderStyle = function (image) {\n      return getStyle(image, 'borderStyle');\n    };\n    var isFigure = function (elm) {\n      return elm.nodeName === 'FIGURE';\n    };\n    var isImage = function (elm) {\n      return elm.nodeName === 'IMG';\n    };\n    var defaultData = function () {\n      return {\n        src: '',\n        alt: '',\n        title: '',\n        width: '',\n        height: '',\n        class: '',\n        style: '',\n        caption: false,\n        hspace: '',\n        vspace: '',\n        border: '',\n        borderStyle: ''\n      };\n    };\n    var getStyleValue = function (normalizeCss, data) {\n      var image = domGlobals.document.createElement('img');\n      setAttrib(image, 'style', data.style);\n      if (getHspace(image) || data.hspace !== '') {\n        setHspace(image, data.hspace);\n      }\n      if (getVspace(image) || data.vspace !== '') {\n        setVspace(image, data.vspace);\n      }\n      if (getBorder(image) || data.border !== '') {\n        setBorder(image, data.border);\n      }\n      if (getBorderStyle(image) || data.borderStyle !== '') {\n        setBorderStyle(image, data.borderStyle);\n      }\n      return normalizeCss(image.getAttribute('style'));\n    };\n    var create = function (normalizeCss, data) {\n      var image = domGlobals.document.createElement('img');\n      write(normalizeCss, merge(data, { caption: false }), image);\n      setAttrib(image, 'alt', data.alt);\n      if (data.caption) {\n        var figure = DOM.create('figure', { class: 'image' });\n        figure.appendChild(image);\n        figure.appendChild(DOM.create('figcaption', { contentEditable: true }, 'Caption'));\n        figure.contentEditable = 'false';\n        return figure;\n      } else {\n        return image;\n      }\n    };\n    var read = function (normalizeCss, image) {\n      return {\n        src: getAttrib(image, 'src'),\n        alt: getAttrib(image, 'alt'),\n        title: getAttrib(image, 'title'),\n        width: getSize(image, 'width'),\n        height: getSize(image, 'height'),\n        class: getAttrib(image, 'class'),\n        style: normalizeCss(getAttrib(image, 'style')),\n        caption: hasCaption(image),\n        hspace: getHspace(image),\n        vspace: getVspace(image),\n        border: getBorder(image),\n        borderStyle: getStyle(image, 'borderStyle')\n      };\n    };\n    var updateProp = function (image, oldData, newData, name, set) {\n      if (newData[name] !== oldData[name]) {\n        set(image, name, newData[name]);\n      }\n    };\n    var normalized = function (set, normalizeCss) {\n      return function (image, name, value) {\n        set(image, value);\n        normalizeStyle(image, normalizeCss);\n      };\n    };\n    var write = function (normalizeCss, newData, image) {\n      var oldData = read(normalizeCss, image);\n      updateProp(image, oldData, newData, 'caption', function (image, _name, _value) {\n        return toggleCaption(image);\n      });\n      updateProp(image, oldData, newData, 'src', setAttrib);\n      updateProp(image, oldData, newData, 'alt', setAttrib);\n      updateProp(image, oldData, newData, 'title', setAttrib);\n      updateProp(image, oldData, newData, 'width', setSize('width', normalizeCss));\n      updateProp(image, oldData, newData, 'height', setSize('height', normalizeCss));\n      updateProp(image, oldData, newData, 'class', setAttrib);\n      updateProp(image, oldData, newData, 'style', normalized(function (image, value) {\n        return setAttrib(image, 'style', value);\n      }, normalizeCss));\n      updateProp(image, oldData, newData, 'hspace', normalized(setHspace, normalizeCss));\n      updateProp(image, oldData, newData, 'vspace', normalized(setVspace, normalizeCss));\n      updateProp(image, oldData, newData, 'border', normalized(setBorder, normalizeCss));\n      updateProp(image, oldData, newData, 'borderStyle', normalized(setBorderStyle, normalizeCss));\n    };\n\n    var normalizeCss = function (editor, cssText) {\n      var css = editor.dom.styles.parse(cssText);\n      var mergedCss = Utils.mergeMargins(css);\n      var compressed = editor.dom.styles.parse(editor.dom.styles.serialize(mergedCss));\n      return editor.dom.styles.serialize(compressed);\n    };\n    var getSelectedImage = function (editor) {\n      var imgElm = editor.selection.getNode();\n      var figureElm = editor.dom.getParent(imgElm, 'figure.image');\n      if (figureElm) {\n        return editor.dom.select('img', figureElm)[0];\n      }\n      if (imgElm && (imgElm.nodeName !== 'IMG' || imgElm.getAttribute('data-mce-object') || imgElm.getAttribute('data-mce-placeholder'))) {\n        return null;\n      }\n      return imgElm;\n    };\n    var splitTextBlock = function (editor, figure) {\n      var dom = editor.dom;\n      var textBlock = dom.getParent(figure.parentNode, function (node) {\n        return editor.schema.getTextBlockElements()[node.nodeName];\n      }, editor.getBody());\n      if (textBlock) {\n        return dom.split(textBlock, figure);\n      } else {\n        return figure;\n      }\n    };\n    var readImageDataFromSelection = function (editor) {\n      var image = getSelectedImage(editor);\n      return image ? read(function (css) {\n        return normalizeCss(editor, css);\n      }, image) : defaultData();\n    };\n    var insertImageAtCaret = function (editor, data) {\n      var elm = create(function (css) {\n        return normalizeCss(editor, css);\n      }, data);\n      editor.dom.setAttrib(elm, 'data-mce-id', '__mcenew');\n      editor.focus();\n      editor.selection.setContent(elm.outerHTML);\n      var insertedElm = editor.dom.select('*[data-mce-id=\"__mcenew\"]')[0];\n      editor.dom.setAttrib(insertedElm, 'data-mce-id', null);\n      if (isFigure(insertedElm)) {\n        var figure = splitTextBlock(editor, insertedElm);\n        editor.selection.select(figure);\n      } else {\n        editor.selection.select(insertedElm);\n      }\n    };\n    var syncSrcAttr = function (editor, image) {\n      editor.dom.setAttrib(image, 'src', image.getAttribute('src'));\n    };\n    var deleteImage = function (editor, image) {\n      if (image) {\n        var elm = editor.dom.is(image.parentNode, 'figure.image') ? image.parentNode : image;\n        editor.dom.remove(elm);\n        editor.focus();\n        editor.nodeChanged();\n        if (editor.dom.isEmpty(editor.getBody())) {\n          editor.setContent('');\n          editor.selection.setCursorLocation();\n        }\n      }\n    };\n    var writeImageDataToSelection = function (editor, data) {\n      var image = getSelectedImage(editor);\n      write(function (css) {\n        return normalizeCss(editor, css);\n      }, data, image);\n      syncSrcAttr(editor, image);\n      if (isFigure(image.parentNode)) {\n        var figure = image.parentNode;\n        splitTextBlock(editor, figure);\n        editor.selection.select(image.parentNode);\n      } else {\n        editor.selection.select(image);\n        Utils.waitLoadImage(editor, data, image);\n      }\n    };\n    var insertOrUpdateImage = function (editor, data) {\n      var image = getSelectedImage(editor);\n      if (image) {\n        if (data.src) {\n          writeImageDataToSelection(editor, data);\n        } else {\n          deleteImage(editor, image);\n        }\n      } else if (data.src) {\n        insertImageAtCaret(editor, data);\n      }\n    };\n\n    var findMap = function (arr, f) {\n      for (var i = 0; i < arr.length; i++) {\n        var r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Option.none();\n    };\n\n    var getValue = function (item) {\n      return isString(item.value) ? item.value : '';\n    };\n    var sanitizeList = function (list, extractValue) {\n      var out = [];\n      global$2.each(list, function (item) {\n        var text = isString(item.text) ? item.text : isString(item.title) ? item.title : '';\n        if (item.menu !== undefined) {\n          var items = sanitizeList(item.menu, extractValue);\n          out.push({\n            text: text,\n            items: items\n          });\n        } else {\n          var value = extractValue(item);\n          out.push({\n            text: text,\n            value: value\n          });\n        }\n      });\n      return out;\n    };\n    var sanitizer = function (extracter) {\n      if (extracter === void 0) {\n        extracter = getValue;\n      }\n      return function (list) {\n        if (list) {\n          return Option.from(list).map(function (list) {\n            return sanitizeList(list, extracter);\n          });\n        } else {\n          return Option.none();\n        }\n      };\n    };\n    var sanitize = function (list) {\n      return sanitizer(getValue)(list);\n    };\n    var isGroup = function (item) {\n      return Object.prototype.hasOwnProperty.call(item, 'items');\n    };\n    var findEntryDelegate = function (list, value) {\n      return findMap(list, function (item) {\n        if (isGroup(item)) {\n          return findEntryDelegate(item.items, value);\n        } else if (item.value === value) {\n          return Option.some(item);\n        } else {\n          return Option.none();\n        }\n      });\n    };\n    var findEntry = function (optList, value) {\n      return optList.bind(function (list) {\n        return findEntryDelegate(list, value);\n      });\n    };\n    var ListUtils = {\n      sanitizer: sanitizer,\n      sanitize: sanitize,\n      findEntry: findEntry\n    };\n\n    function XMLHttpRequest () {\n      var f = Global$1.getOrDie('XMLHttpRequest');\n      return new f();\n    }\n\n    var noop$1 = function () {\n    };\n    var pathJoin = function (path1, path2) {\n      if (path1) {\n        return path1.replace(/\\/$/, '') + '/' + path2.replace(/^\\//, '');\n      }\n      return path2;\n    };\n    function Uploader (settings) {\n      var defaultHandler = function (blobInfo, success, failure, progress) {\n        var xhr, formData;\n        xhr = XMLHttpRequest();\n        xhr.open('POST', settings.url);\n        xhr.withCredentials = settings.credentials;\n        xhr.upload.onprogress = function (e) {\n          progress(e.loaded / e.total * 100);\n        };\n        xhr.onerror = function () {\n          failure('Image upload failed due to a XHR Transport error. Code: ' + xhr.status);\n        };\n        xhr.onload = function () {\n          var json;\n          if (xhr.status < 200 || xhr.status >= 300) {\n            failure('HTTP Error: ' + xhr.status);\n            return;\n          }\n          json = JSON.parse(xhr.responseText);\n          if (!json || typeof json.location !== 'string') {\n            failure('Invalid JSON: ' + xhr.responseText);\n            return;\n          }\n          success(pathJoin(settings.basePath, json.location));\n        };\n        formData = new domGlobals.FormData();\n        formData.append('file', blobInfo.blob(), blobInfo.filename());\n        xhr.send(formData);\n      };\n      var uploadBlob = function (blobInfo, handler) {\n        return new global$1(function (resolve, reject) {\n          try {\n            handler(blobInfo, resolve, reject, noop$1);\n          } catch (ex) {\n            reject(ex.message);\n          }\n        });\n      };\n      var isDefaultHandler = function (handler) {\n        return handler === defaultHandler;\n      };\n      var upload = function (blobInfo) {\n        return !settings.url && isDefaultHandler(settings.handler) ? global$1.reject('Upload url missing from the settings.') : uploadBlob(blobInfo, settings.handler);\n      };\n      settings = global$2.extend({\n        credentials: false,\n        handler: defaultHandler\n      }, settings);\n      return { upload: upload };\n    }\n\n    var makeTab$1 = function (info) {\n      return {\n        title: 'Advanced',\n        items: [\n          {\n            type: 'input',\n            label: 'Style',\n            name: 'style'\n          },\n          {\n            type: 'grid',\n            columns: 2,\n            items: [\n              {\n                type: 'input',\n                label: 'Vertical space',\n                name: 'vspace'\n              },\n              {\n                type: 'input',\n                label: 'Horizontal space',\n                name: 'hspace'\n              },\n              {\n                type: 'input',\n                label: 'Border width',\n                name: 'border'\n              },\n              {\n                type: 'selectbox',\n                name: 'borderstyle',\n                label: 'Border style',\n                items: [\n                  {\n                    text: 'Select...',\n                    value: ''\n                  },\n                  {\n                    text: 'Solid',\n                    value: 'solid'\n                  },\n                  {\n                    text: 'Dotted',\n                    value: 'dotted'\n                  },\n                  {\n                    text: 'Dashed',\n                    value: 'dashed'\n                  },\n                  {\n                    text: 'Double',\n                    value: 'double'\n                  },\n                  {\n                    text: 'Groove',\n                    value: 'groove'\n                  },\n                  {\n                    text: 'Ridge',\n                    value: 'ridge'\n                  },\n                  {\n                    text: 'Inset',\n                    value: 'inset'\n                  },\n                  {\n                    text: 'Outset',\n                    value: 'outset'\n                  },\n                  {\n                    text: 'None',\n                    value: 'none'\n                  },\n                  {\n                    text: 'Hidden',\n                    value: 'hidden'\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      };\n    };\n    var AdvTab = { makeTab: makeTab$1 };\n\n    var collect = function (editor) {\n      var urlListSanitizer = ListUtils.sanitizer(function (item) {\n        return editor.convertURL(item.value || item.url, 'src');\n      });\n      var futureImageList = Future.nu(function (completer) {\n        Utils.createImageList(editor, function (imageList) {\n          completer(urlListSanitizer(imageList).map(function (items) {\n            return flatten([\n              [{\n                  text: 'None',\n                  value: ''\n                }],\n              items\n            ]);\n          }));\n        });\n      });\n      var classList = ListUtils.sanitize(Settings.getClassList(editor));\n      var hasAdvTab = Settings.hasAdvTab(editor);\n      var hasUploadUrl = Settings.hasUploadUrl(editor);\n      var hasUploadHandler = Settings.hasUploadHandler(editor);\n      var image = readImageDataFromSelection(editor);\n      var hasDescription = Settings.hasDescription(editor);\n      var hasImageTitle = Settings.hasImageTitle(editor);\n      var hasDimensions = Settings.hasDimensions(editor);\n      var hasImageCaption = Settings.hasImageCaption(editor);\n      var url = Settings.getUploadUrl(editor);\n      var basePath = Settings.getUploadBasePath(editor);\n      var credentials = Settings.getUploadCredentials(editor);\n      var handler = Settings.getUploadHandler(editor);\n      var prependURL = Option.some(Settings.getPrependUrl(editor)).filter(function (preUrl) {\n        return isString(preUrl) && preUrl.length > 0;\n      });\n      return futureImageList.map(function (imageList) {\n        return {\n          image: image,\n          imageList: imageList,\n          classList: classList,\n          hasAdvTab: hasAdvTab,\n          hasUploadUrl: hasUploadUrl,\n          hasUploadHandler: hasUploadHandler,\n          hasDescription: hasDescription,\n          hasImageTitle: hasImageTitle,\n          hasDimensions: hasDimensions,\n          hasImageCaption: hasImageCaption,\n          url: url,\n          basePath: basePath,\n          credentials: credentials,\n          handler: handler,\n          prependURL: prependURL\n        };\n      });\n    };\n\n    var makeTab$2 = function (info) {\n      var items = [{\n          type: 'dropzone',\n          name: 'fileinput'\n        }];\n      return {\n        title: 'Upload',\n        items: items\n      };\n    };\n    var UploadTab = { makeTab: makeTab$2 };\n\n    var createState = function (info) {\n      return {\n        prevImage: ListUtils.findEntry(info.imageList, info.image.src),\n        prevAlt: info.image.alt,\n        open: true\n      };\n    };\n    var fromImageData = function (image) {\n      return {\n        src: {\n          value: image.src,\n          meta: {}\n        },\n        images: image.src,\n        alt: image.alt,\n        title: image.title,\n        dimensions: {\n          width: image.width,\n          height: image.height\n        },\n        classes: image.class,\n        caption: image.caption,\n        style: image.style,\n        vspace: image.vspace,\n        border: image.border,\n        hspace: image.hspace,\n        borderstyle: image.borderStyle,\n        fileinput: []\n      };\n    };\n    var toImageData = function (data) {\n      return {\n        src: data.src.value,\n        alt: data.alt,\n        title: data.title,\n        width: data.dimensions.width,\n        height: data.dimensions.height,\n        class: data.classes,\n        style: data.style,\n        caption: data.caption,\n        hspace: data.hspace,\n        vspace: data.vspace,\n        border: data.border,\n        borderStyle: data.borderstyle\n      };\n    };\n    var addPrependUrl2 = function (info, srcURL) {\n      if (!/^(?:[a-zA-Z]+:)?\\/\\//.test(srcURL)) {\n        return info.prependURL.bind(function (prependUrl) {\n          if (srcURL.substring(0, prependUrl.length) !== prependUrl) {\n            return Option.some(prependUrl + srcURL);\n          }\n          return Option.none();\n        });\n      }\n      return Option.none();\n    };\n    var addPrependUrl = function (info, api) {\n      var data = api.getData();\n      addPrependUrl2(info, data.src.value).each(function (srcURL) {\n        api.setData({\n          src: {\n            value: srcURL,\n            meta: data.src.meta\n          }\n        });\n      });\n    };\n    var formFillFromMeta2 = function (info, data) {\n      var meta = data.src.meta;\n      if (meta !== undefined) {\n        var dataCopy_1 = deepMerge({}, data);\n        if (info.hasDescription && isString(meta.alt)) {\n          dataCopy_1.alt = meta.alt;\n        }\n        if (info.hasImageTitle && isString(meta.title)) {\n          dataCopy_1.title = meta.title;\n        }\n        if (info.hasDimensions) {\n          if (isString(meta.width)) {\n            dataCopy_1.dimensions.width = meta.width;\n          }\n          if (isString(meta.height)) {\n            dataCopy_1.dimensions.height = meta.height;\n          }\n        }\n        if (isString(meta.class)) {\n          ListUtils.findEntry(info.classList, meta.class).each(function (entry) {\n            dataCopy_1.classes = entry.value;\n          });\n        }\n        if (info.hasAdvTab) {\n          if (isString(meta.vspace)) {\n            dataCopy_1.vspace = meta.vspace;\n          }\n          if (isString(meta.border)) {\n            dataCopy_1.border = meta.border;\n          }\n          if (isString(meta.hspace)) {\n            dataCopy_1.hspace = meta.hspace;\n          }\n          if (isString(meta.borderstyle)) {\n            dataCopy_1.borderstyle = meta.borderstyle;\n          }\n        }\n        return Option.some(dataCopy_1);\n      }\n      return Option.none();\n    };\n    var formFillFromMeta = function (info, api) {\n      formFillFromMeta2(info, api.getData()).each(function (data) {\n        return api.setData(data);\n      });\n    };\n    var calculateImageSize = function (helpers, info, state, api) {\n      var data = api.getData();\n      var url = data.src.value;\n      var meta = data.src.meta || {};\n      if (!meta.width && !meta.height && info.hasDimensions) {\n        helpers.imageSize(url).get(function (result) {\n          result.each(function (size) {\n            if (state.open) {\n              api.setData({ dimensions: size });\n            }\n          });\n        });\n      }\n    };\n    var updateImagesDropdown = function (info, state, api) {\n      var data = api.getData();\n      var image = ListUtils.findEntry(info.imageList, data.src.value);\n      state.prevImage = image;\n      api.setData({\n        images: image.map(function (entry) {\n          return entry.value;\n        }).getOr('')\n      });\n    };\n    var changeSrc = function (helpers, info, state, api) {\n      addPrependUrl(info, api);\n      formFillFromMeta(info, api);\n      calculateImageSize(helpers, info, state, api);\n      updateImagesDropdown(info, state, api);\n    };\n    var changeImages = function (helpers, info, state, api) {\n      var data = api.getData();\n      var image = ListUtils.findEntry(info.imageList, data.images);\n      image.each(function (img) {\n        var updateAlt = data.alt === '' || state.prevImage.map(function (image) {\n          return image.text === data.alt;\n        }).getOr(false);\n        if (updateAlt) {\n          if (img.value === '') {\n            api.setData({\n              src: img,\n              alt: state.prevAlt\n            });\n          } else {\n            api.setData({\n              src: img,\n              alt: img.text\n            });\n          }\n        } else {\n          api.setData({ src: img });\n        }\n      });\n      state.prevImage = image;\n      changeSrc(helpers, info, state, api);\n    };\n    var calcVSpace = function (css) {\n      var matchingTopBottom = css['margin-top'] && css['margin-bottom'] && css['margin-top'] === css['margin-bottom'];\n      return matchingTopBottom ? Utils.removePixelSuffix(String(css['margin-top'])) : '';\n    };\n    var calcHSpace = function (css) {\n      var matchingLeftRight = css['margin-right'] && css['margin-left'] && css['margin-right'] === css['margin-left'];\n      return matchingLeftRight ? Utils.removePixelSuffix(String(css['margin-right'])) : '';\n    };\n    var calcBorderWidth = function (css) {\n      return css['border-width'] ? Utils.removePixelSuffix(String(css['border-width'])) : '';\n    };\n    var calcBorderStyle = function (css) {\n      return css['border-style'] ? String(css['border-style']) : '';\n    };\n    var calcStyle = function (parseStyle, serializeStyle, css) {\n      return serializeStyle(parseStyle(serializeStyle(css)));\n    };\n    var changeStyle2 = function (parseStyle, serializeStyle, data) {\n      var css = Utils.mergeMargins(parseStyle(data.style));\n      var dataCopy = deepMerge({}, data);\n      dataCopy.vspace = calcVSpace(css);\n      dataCopy.hspace = calcHSpace(css);\n      dataCopy.border = calcBorderWidth(css);\n      dataCopy.borderstyle = calcBorderStyle(css);\n      dataCopy.style = calcStyle(parseStyle, serializeStyle, css);\n      return dataCopy;\n    };\n    var changeStyle = function (helpers, api) {\n      var data = api.getData();\n      var newData = changeStyle2(helpers.parseStyle, helpers.serializeStyle, data);\n      api.setData(newData);\n    };\n    var changeAStyle = function (helpers, info, api) {\n      var data = deepMerge(fromImageData(info.image), api.getData());\n      var style = getStyleValue(helpers.normalizeCss, toImageData(data));\n      api.setData({ style: style });\n    };\n    var changeFileInput = function (helpers, info, state, api) {\n      var data = api.getData();\n      api.block('Uploading image');\n      head(data.fileinput).fold(function () {\n        api.unblock();\n      }, function (file) {\n        var blobUri = URL.createObjectURL(file);\n        var uploader = Uploader({\n          url: info.url,\n          basePath: info.basePath,\n          credentials: info.credentials,\n          handler: info.handler\n        });\n        var finalize = function () {\n          api.unblock();\n          URL.revokeObjectURL(blobUri);\n        };\n        Utils.blobToDataUri(file).then(function (dataUrl) {\n          var blobInfo = helpers.createBlobCache(file, blobUri, dataUrl);\n          uploader.upload(blobInfo).then(function (url) {\n            api.setData({\n              src: {\n                value: url,\n                meta: {}\n              }\n            });\n            api.showTab('General');\n            changeSrc(helpers, info, state, api);\n            finalize();\n          }).catch(function (err) {\n            finalize();\n            helpers.alertErr(api, err);\n          });\n        });\n      });\n    };\n    var changeHandler = function (helpers, info, state) {\n      return function (api, evt) {\n        if (evt.name === 'src') {\n          changeSrc(helpers, info, state, api);\n        } else if (evt.name === 'images') {\n          changeImages(helpers, info, state, api);\n        } else if (evt.name === 'alt') {\n          state.prevAlt = api.getData().alt;\n        } else if (evt.name === 'style') {\n          changeStyle(helpers, api);\n        } else if (evt.name === 'vspace' || evt.name === 'hspace' || evt.name === 'border' || evt.name === 'borderstyle') {\n          changeAStyle(helpers, info, api);\n        } else if (evt.name === 'fileinput') {\n          changeFileInput(helpers, info, state, api);\n        }\n      };\n    };\n    var closeHandler = function (state) {\n      return function () {\n        state.open = false;\n      };\n    };\n    var makeDialogBody = function (info) {\n      if (info.hasAdvTab || info.hasUploadUrl || info.hasUploadHandler) {\n        var tabPanel = {\n          type: 'tabpanel',\n          tabs: flatten([\n            [MainTab.makeTab(info)],\n            info.hasAdvTab ? [AdvTab.makeTab(info)] : [],\n            info.hasUploadUrl || info.hasUploadHandler ? [UploadTab.makeTab(info)] : []\n          ])\n        };\n        return tabPanel;\n      } else {\n        var panel = {\n          type: 'panel',\n          items: MainTab.makeItems(info)\n        };\n        return panel;\n      }\n    };\n    var makeDialog = function (helpers) {\n      return function (info) {\n        var state = createState(info);\n        return {\n          title: 'Insert/Edit Image',\n          size: 'normal',\n          body: makeDialogBody(info),\n          buttons: [\n            {\n              type: 'cancel',\n              name: 'cancel',\n              text: 'Cancel'\n            },\n            {\n              type: 'submit',\n              name: 'save',\n              text: 'Save',\n              primary: true\n            }\n          ],\n          initialData: fromImageData(info.image),\n          onSubmit: helpers.onSubmit(info),\n          onChange: changeHandler(helpers, info, state),\n          onClose: closeHandler(state)\n        };\n      };\n    };\n    var submitHandler = function (editor) {\n      return function (info) {\n        return function (api) {\n          var data = deepMerge(fromImageData(info.image), api.getData());\n          editor.undoManager.transact(function () {\n            insertOrUpdateImage(editor, toImageData(data));\n          });\n          editor.editorUpload.uploadImagesAuto();\n          api.close();\n        };\n      };\n    };\n    var imageSize = function (editor) {\n      return function (url) {\n        return FutureResult.nu(function (completer) {\n          Utils.getImageSize(editor.documentBaseURI.toAbsolute(url), function (data) {\n            var result = data.bind(function (dimensions) {\n              return (isString(dimensions.width) || isNumber(dimensions.width)) && (isString(dimensions.height) || isNumber(dimensions.height)) ? Result.value({\n                width: String(dimensions.width),\n                height: String(dimensions.height)\n              }) : Result.error(undefined);\n            });\n            completer(result);\n          });\n        });\n      };\n    };\n    var createBlobCache = function (editor) {\n      return function (file, blobUri, dataUrl) {\n        return editor.editorUpload.blobCache.create({\n          blob: file,\n          blobUri: blobUri,\n          name: file.name ? file.name.replace(/\\.[^\\.]+$/, '') : null,\n          base64: dataUrl.split(',')[1]\n        });\n      };\n    };\n    var alertErr = function (editor) {\n      return function (api, message) {\n        editor.windowManager.alert(message, api.close);\n      };\n    };\n    var normalizeCss$1 = function (editor) {\n      return function (cssText) {\n        return normalizeCss(editor, cssText);\n      };\n    };\n    var parseStyle = function (editor) {\n      return function (cssText) {\n        return editor.dom.parseStyle(cssText);\n      };\n    };\n    var serializeStyle = function (editor) {\n      return function (stylesArg, name) {\n        return editor.dom.serializeStyle(stylesArg, name);\n      };\n    };\n    var Dialog = function (editor) {\n      var helpers = {\n        onSubmit: submitHandler(editor),\n        imageSize: imageSize(editor),\n        createBlobCache: createBlobCache(editor),\n        alertErr: alertErr(editor),\n        normalizeCss: normalizeCss$1(editor),\n        parseStyle: parseStyle(editor),\n        serializeStyle: serializeStyle(editor)\n      };\n      var open = function () {\n        return collect(editor).map(makeDialog(helpers)).get(function (spec) {\n          editor.windowManager.open(spec);\n        });\n      };\n      return { open: open };\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mceImage', Dialog(editor).open);\n    };\n    var Commands = { register: register };\n\n    var hasImageClass = function (node) {\n      var className = node.attr('class');\n      return className && /\\bimage\\b/.test(className);\n    };\n    var toggleContentEditableState = function (state) {\n      return function (nodes) {\n        var i = nodes.length, node;\n        var toggleContentEditable = function (node) {\n          node.attr('contenteditable', state ? 'true' : null);\n        };\n        while (i--) {\n          node = nodes[i];\n          if (hasImageClass(node)) {\n            node.attr('contenteditable', state ? 'false' : null);\n            global$2.each(node.getAll('figcaption'), toggleContentEditable);\n          }\n        }\n      };\n    };\n    var setup = function (editor) {\n      editor.on('preInit', function () {\n        editor.parser.addNodeFilter('figure', toggleContentEditableState(true));\n        editor.serializer.addNodeFilter('figure', toggleContentEditableState(false));\n      });\n    };\n    var FilterContent = { setup: setup };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var name = function (element) {\n      var r = element.dom().nodeName;\n      return r.toLowerCase();\n    };\n\n    var Immutable = function () {\n      var fields = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        fields[_i] = arguments[_i];\n      }\n      return function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          values[_i] = arguments[_i];\n        }\n        if (fields.length !== values.length) {\n          throw new Error('Wrong number of arguments to struct. Expected \"[' + fields.length + ']\", got ' + values.length + ' arguments');\n        }\n        var struct = {};\n        each(fields, function (name, i) {\n          struct[name] = constant(values[i]);\n        });\n        return struct;\n      };\n    };\n\n    var node = function () {\n      var f = Global$1.getOrDie('Node');\n      return f;\n    };\n    var compareDocumentPosition = function (a, b, match) {\n      return (a.compareDocumentPosition(b) & match) !== 0;\n    };\n    var documentPositionPreceding = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_PRECEDING);\n    };\n    var documentPositionContainedBy = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_CONTAINED_BY);\n    };\n    var Node = {\n      documentPositionPreceding: documentPositionPreceding,\n      documentPositionContainedBy: documentPositionContainedBy\n    };\n\n    var cached = function (f) {\n      var called = false;\n      var r;\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    var firstMatch = function (regexes, s) {\n      for (var i = 0; i < regexes.length; i++) {\n        var x = regexes[i];\n        if (x.test(s))\n          return x;\n      }\n      return undefined;\n    };\n    var find$1 = function (regexes, agent) {\n      var r = firstMatch(regexes, agent);\n      if (!r)\n        return {\n          major: 0,\n          minor: 0\n        };\n      var group = function (i) {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu$3(group(1), group(2));\n    };\n    var detect = function (versionRegexes, agent) {\n      var cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0)\n        return unknown();\n      return find$1(versionRegexes, cleanedAgent);\n    };\n    var unknown = function () {\n      return nu$3(0, 0);\n    };\n    var nu$3 = function (major, minor) {\n      return {\n        major: major,\n        minor: minor\n      };\n    };\n    var Version = {\n      nu: nu$3,\n      detect: detect,\n      unknown: unknown\n    };\n\n    var edge = 'Edge';\n    var chrome = 'Chrome';\n    var ie = 'IE';\n    var opera = 'Opera';\n    var firefox = 'Firefox';\n    var safari = 'Safari';\n    var isBrowser = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$1 = function () {\n      return nu$4({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$4 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isEdge: isBrowser(edge, current),\n        isChrome: isBrowser(chrome, current),\n        isIE: isBrowser(ie, current),\n        isOpera: isBrowser(opera, current),\n        isFirefox: isBrowser(firefox, current),\n        isSafari: isBrowser(safari, current)\n      };\n    };\n    var Browser = {\n      unknown: unknown$1,\n      nu: nu$4,\n      edge: constant(edge),\n      chrome: constant(chrome),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    var windows = 'Windows';\n    var ios = 'iOS';\n    var android = 'Android';\n    var linux = 'Linux';\n    var osx = 'OSX';\n    var solaris = 'Solaris';\n    var freebsd = 'FreeBSD';\n    var isOS = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$2 = function () {\n      return nu$5({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$5 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isWindows: isOS(windows, current),\n        isiOS: isOS(ios, current),\n        isAndroid: isOS(android, current),\n        isOSX: isOS(osx, current),\n        isLinux: isOS(linux, current),\n        isSolaris: isOS(solaris, current),\n        isFreeBSD: isOS(freebsd, current)\n      };\n    };\n    var OperatingSystem = {\n      unknown: unknown$2,\n      nu: nu$5,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      osx: constant(osx),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd)\n    };\n\n    var DeviceType = function (os, browser, userAgent) {\n      var isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      var isiPhone = os.isiOS() && !isiPad;\n      var isAndroid3 = os.isAndroid() && os.version.major === 3;\n      var isAndroid4 = os.isAndroid() && os.version.major === 4;\n      var isTablet = isiPad || isAndroid3 || isAndroid4 && /mobile/i.test(userAgent) === true;\n      var isTouch = os.isiOS() || os.isAndroid();\n      var isPhone = isTouch && !isTablet;\n      var iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview)\n      };\n    };\n\n    var detect$1 = function (candidates, userAgent) {\n      var agent = String(userAgent).toLowerCase();\n      return find(candidates, function (candidate) {\n        return candidate.search(agent);\n      });\n    };\n    var detectBrowser = function (browsers, userAgent) {\n      return detect$1(browsers, userAgent).map(function (browser) {\n        var version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version: version\n        };\n      });\n    };\n    var detectOs = function (oses, userAgent) {\n      return detect$1(oses, userAgent).map(function (os) {\n        var version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version: version\n        };\n      });\n    };\n    var UaString = {\n      detectBrowser: detectBrowser,\n      detectOs: detectOs\n    };\n\n    var contains = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n\n    var normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    var checkContains = function (target) {\n      return function (uastring) {\n        return contains(uastring, target);\n      };\n    };\n    var browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function (uastring) {\n          var monstrosity = contains(uastring, 'edge/') && contains(uastring, 'chrome') && contains(uastring, 'safari') && contains(uastring, 'applewebkit');\n          return monstrosity;\n        }\n      },\n      {\n        name: 'Chrome',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: function (uastring) {\n          return contains(uastring, 'chrome') && !contains(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return contains(uastring, 'msie') || contains(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return (contains(uastring, 'safari') || contains(uastring, 'mobile/')) && contains(uastring, 'applewebkit');\n        }\n      }\n    ];\n    var oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: function (uastring) {\n          return contains(uastring, 'iphone') || contains(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'OSX',\n        search: checkContains('os x'),\n        versionRegexes: [/.*?os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      }\n    ];\n    var PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    var detect$2 = function (userAgent) {\n      var browsers = PlatformInfo.browsers();\n      var oses = PlatformInfo.oses();\n      var browser = UaString.detectBrowser(browsers, userAgent).fold(Browser.unknown, Browser.nu);\n      var os = UaString.detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      var deviceType = DeviceType(os, browser, userAgent);\n      return {\n        browser: browser,\n        os: os,\n        deviceType: deviceType\n      };\n    };\n    var PlatformDetection = { detect: detect$2 };\n\n    var detect$3 = cached(function () {\n      var userAgent = domGlobals.navigator.userAgent;\n      return PlatformDetection.detect(userAgent);\n    });\n    var PlatformDetection$1 = { detect: detect$3 };\n\n    var regularContains = function (e1, e2) {\n      var d1 = e1.dom();\n      var d2 = e2.dom();\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    var ieContains = function (e1, e2) {\n      return Node.documentPositionContainedBy(e1.dom(), e2.dom());\n    };\n    var browser = PlatformDetection$1.detect().browser;\n    var contains$1 = browser.isIE() ? ieContains : regularContains;\n\n    var parent = function (element) {\n      var dom = element.dom();\n      return Option.from(dom.parentNode).map(Element.fromDom);\n    };\n    var spot = Immutable('element', 'offset');\n\n    var getRootElement = function (elm) {\n      return parent(elm).filter(function (parentElm) {\n        return name(parentElm) === 'figure';\n      }).getOr(elm);\n    };\n    var register$1 = function (editor) {\n      var makeContextMenuItem = function (node) {\n        return {\n          text: 'Image',\n          icon: 'image',\n          onAction: function () {\n            var rootElm = getRootElement(Element.fromDom(node));\n            editor.selection.select(rootElm.dom());\n            Dialog(editor).open();\n          }\n        };\n      };\n      editor.ui.registry.addToggleButton('image', {\n        icon: 'image',\n        tooltip: 'Insert/edit image',\n        onAction: Dialog(editor).open,\n        onSetup: function (buttonApi) {\n          return editor.selection.selectorChangedWithUnbind('img:not([data-mce-object],[data-mce-placeholder]),figure.image', buttonApi.setActive).unbind;\n        }\n      });\n      editor.ui.registry.addMenuItem('image', {\n        icon: 'image',\n        text: 'Image...',\n        onAction: Dialog(editor).open\n      });\n      editor.ui.registry.addContextMenu('image', {\n        update: function (element) {\n          return isFigure(element) || isImage(element) ? [makeContextMenuItem(element)] : [];\n        }\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('image', function (editor) {\n      FilterContent.setup(editor);\n      Buttons.register(editor);\n      Commands.register(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n","// Exports the \"code\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/code')\n//   ES2015:\n//     import 'tinymce/plugins/code'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.0.2 (2019-03-05)\n */\n(function () {\nvar code = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var setContent = function (editor, html) {\n      editor.focus();\n      editor.undoManager.transact(function () {\n        editor.setContent(html);\n      });\n      editor.selection.setCursorLocation();\n      editor.nodeChanged();\n    };\n    var getContent = function (editor) {\n      return editor.getContent({ source_view: true });\n    };\n    var Content = {\n      setContent: setContent,\n      getContent: getContent\n    };\n\n    var open = function (editor) {\n      var editorContent = Content.getContent(editor);\n      editor.windowManager.open({\n        title: 'Source Code',\n        size: 'large',\n        body: {\n          type: 'panel',\n          items: [{\n              type: 'textarea',\n              name: 'code'\n            }]\n        },\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: { code: editorContent },\n        onSubmit: function (api) {\n          Content.setContent(editor, api.getData().code);\n          api.close();\n        }\n      });\n    };\n    var Dialog = { open: open };\n\n    var register = function (editor) {\n      editor.addCommand('mceCodeEditor', function () {\n        Dialog.open(editor);\n      });\n    };\n    var Commands = { register: register };\n\n    var register$1 = function (editor) {\n      editor.ui.registry.addButton('code', {\n        icon: 'sourcecode',\n        tooltip: 'Source code',\n        onAction: function () {\n          return Dialog.open(editor);\n        }\n      });\n      editor.ui.registry.addMenuItem('code', {\n        icon: 'sourcecode',\n        text: 'Source code',\n        onAction: function () {\n          return Dialog.open(editor);\n        }\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('code', function (editor) {\n      Commands.register(editor);\n      Buttons.register(editor);\n      return {};\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nvar getGlobal = function () { return (typeof window !== 'undefined' ? window : global); };\nvar getTinymce = function () {\n    var global = getGlobal();\n    return global && global.tinymce ? global.tinymce : null;\n};\nexport { getTinymce };\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as ScriptLoader from '../ScriptLoader';\nimport { getTinymce } from '../TinyMCE';\nimport { bindHandlers, isFunction, isTextarea, mergePlugins, uuid } from '../Utils';\nimport { EditorPropTypes } from './EditorPropTypes';\nvar scriptState = ScriptLoader.create();\nvar Editor = /** @class */ (function (_super) {\n    __extends(Editor, _super);\n    function Editor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = null;\n        _this.initialise = function () {\n            var finalInit = __assign({}, _this.props.init, { target: _this.element, readonly: _this.props.disabled, inline: _this.inline, plugins: mergePlugins(_this.props.init && _this.props.init.plugins, _this.props.plugins), toolbar: _this.props.toolbar || (_this.props.init && _this.props.init.toolbar), setup: function (editor) {\n                    _this.editor = editor;\n                    editor.on('init', function (e) {\n                        _this.initEditor(e, editor);\n                    });\n                    if (_this.props.init && typeof _this.props.init.setup === 'function') {\n                        _this.props.init.setup(editor);\n                    }\n                } });\n            if (isTextarea(_this.element)) {\n                _this.element.style.visibility = '';\n            }\n            getTinymce().init(finalInit);\n        };\n        return _this;\n    }\n    Editor.prototype.componentWillMount = function () {\n        this.id = this.id || this.props.id || uuid('tiny-react');\n        this.inline = this.props.inline ? this.props.inline : this.props.init && this.props.init.inline;\n    };\n    Editor.prototype.componentDidMount = function () {\n        if (getTinymce() !== null) {\n            this.initialise();\n        }\n        else if (this.element && this.element.ownerDocument) {\n            var doc = this.element.ownerDocument;\n            var channel = this.props.cloudChannel;\n            var apiKey = this.props.apiKey ? this.props.apiKey : '';\n            ScriptLoader.load(scriptState, doc, \"https://cloud.tinymce.com/\" + channel + \"/tinymce.min.js?apiKey=\" + apiKey, this.initialise);\n        }\n    };\n    Editor.prototype.componentWillUnmount = function () {\n        if (getTinymce() !== null) {\n            getTinymce().remove(this.editor);\n        }\n    };\n    Editor.prototype.componentWillReceiveProps = function (nextProps) {\n        if (this.editor && this.editor.initialized) {\n            this.currentContent = this.currentContent || this.editor.getContent();\n            if (typeof nextProps.value === 'string' && nextProps.value !== this.props.value && nextProps.value !== this.currentContent) {\n                this.editor.setContent(nextProps.value);\n            }\n            if (typeof nextProps.disabled === 'boolean' && nextProps.disabled !== this.props.disabled) {\n                this.editor.setMode(nextProps.disabled ? 'readonly' : 'design');\n            }\n        }\n    };\n    Editor.prototype.render = function () {\n        return this.inline ? this.renderInline() : this.renderIframe();\n    };\n    Editor.prototype.initEditor = function (initEvent, editor) {\n        var _this = this;\n        var value = typeof this.props.value === 'string' ? this.props.value : typeof this.props.initialValue === 'string' ? this.props.initialValue : '';\n        editor.setContent(value);\n        if (isFunction(this.props.onEditorChange)) {\n            editor.on('change keyup setcontent', function (e) {\n                _this.currentContent = editor.getContent();\n                if (isFunction(_this.props.onEditorChange)) {\n                    _this.props.onEditorChange(_this.currentContent);\n                }\n            });\n        }\n        bindHandlers(this.props, editor, initEvent);\n    };\n    Editor.prototype.renderInline = function () {\n        var _this = this;\n        var _a = this.props.tagName, tagName = _a === void 0 ? 'div' : _a;\n        return React.createElement(tagName, {\n            ref: function (elm) { return (_this.element = elm); },\n            id: this.id\n        });\n    };\n    Editor.prototype.renderIframe = function () {\n        var _this = this;\n        return React.createElement(\"textarea\", { ref: function (elm) { return (_this.element = elm); }, style: { visibility: 'hidden' }, id: this.id, name: this.props.textareaName });\n    };\n    Editor.propTypes = EditorPropTypes;\n    Editor.defaultProps = {\n        cloudChannel: '5'\n    };\n    return Editor;\n}(React.Component));\nexport { Editor };\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as PropTypes from 'prop-types';\nexport var eventPropTypes = {\n    onActivate: PropTypes.func,\n    onAddUndo: PropTypes.func,\n    onBeforeAddUndo: PropTypes.func,\n    onBeforeExecCommand: PropTypes.func,\n    onBeforeGetContent: PropTypes.func,\n    onBeforeRenderUI: PropTypes.func,\n    onBeforeSetContent: PropTypes.func,\n    onBeforePaste: PropTypes.func,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onClearUndos: PropTypes.func,\n    onClick: PropTypes.func,\n    onContextMenu: PropTypes.func,\n    onCopy: PropTypes.func,\n    onCut: PropTypes.func,\n    onDblclick: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onDirty: PropTypes.func,\n    onDrag: PropTypes.func,\n    onDragDrop: PropTypes.func,\n    onDragEnd: PropTypes.func,\n    onDragGesture: PropTypes.func,\n    onDragOver: PropTypes.func,\n    onDrop: PropTypes.func,\n    onExecCommand: PropTypes.func,\n    onFocus: PropTypes.func,\n    onFocusIn: PropTypes.func,\n    onFocusOut: PropTypes.func,\n    onGetContent: PropTypes.func,\n    onHide: PropTypes.func,\n    onInit: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyPress: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    onLoadContent: PropTypes.func,\n    onMouseDown: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseOut: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    onMouseUp: PropTypes.func,\n    onNodeChange: PropTypes.func,\n    onObjectResizeStart: PropTypes.func,\n    onObjectResized: PropTypes.func,\n    onObjectSelected: PropTypes.func,\n    onPaste: PropTypes.func,\n    onPostProcess: PropTypes.func,\n    onPostRender: PropTypes.func,\n    onPreProcess: PropTypes.func,\n    onProgressState: PropTypes.func,\n    onRedo: PropTypes.func,\n    onRemove: PropTypes.func,\n    onReset: PropTypes.func,\n    onSaveContent: PropTypes.func,\n    onSelectionChange: PropTypes.func,\n    onSetAttrib: PropTypes.func,\n    onSetContent: PropTypes.func,\n    onShow: PropTypes.func,\n    onSubmit: PropTypes.func,\n    onUndo: PropTypes.func,\n    onVisualAid: PropTypes.func\n};\nexport var EditorPropTypes = __assign({ apiKey: PropTypes.string, id: PropTypes.string, inline: PropTypes.bool, init: PropTypes.object, initialValue: PropTypes.string, onEditorChange: PropTypes.func, value: PropTypes.string, tagName: PropTypes.string, cloudChannel: PropTypes.string, plugins: PropTypes.oneOfType([PropTypes.string, PropTypes.array]), toolbar: PropTypes.oneOfType([PropTypes.string, PropTypes.array]), disabled: PropTypes.bool, textareaName: PropTypes.string }, eventPropTypes);\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { eventPropTypes } from './components/EditorPropTypes';\nvar isValidKey = function (keys) { return function (key) { return keys.indexOf(key) !== -1; }; };\n// tslint:disable-next-line:ban-types\nexport var isFunction = function (x) { return typeof x === 'function'; };\nexport var bindHandlers = function (props, editor, initEvent) {\n    Object.keys(props)\n        .filter(isValidKey(Object.keys(eventPropTypes)))\n        .forEach(function (key) {\n        var handler = props[key];\n        if (isFunction(handler)) {\n            if (key === 'onInit') {\n                handler(initEvent, editor);\n            }\n            else {\n                editor.on(key.substring(2), function (e) { return handler(e, editor); });\n            }\n        }\n    });\n};\nvar unique = 0;\nexport var uuid = function (prefix) {\n    var date = new Date();\n    var time = date.getTime();\n    var random = Math.floor(Math.random() * 1000000000);\n    unique++;\n    return prefix + '_' + random + unique + String(time);\n};\nexport var isTextarea = function (element) {\n    return element !== null && element.tagName.toLowerCase() === 'textarea';\n};\nvar normalizePluginArray = function (plugins) {\n    if (typeof plugins === 'undefined' || plugins === '') {\n        return [];\n    }\n    return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\nexport var mergePlugins = function (initPlugins, inputPlugins) {\n    return normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n};\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { uuid } from './Utils';\nvar injectScriptTag = function (scriptId, doc, url, callback) {\n    var scriptTag = doc.createElement('script');\n    scriptTag.type = 'application/javascript';\n    scriptTag.id = scriptId;\n    scriptTag.addEventListener('load', callback);\n    scriptTag.src = url;\n    if (doc.head) {\n        doc.head.appendChild(scriptTag);\n    }\n};\nexport var create = function () {\n    return {\n        listeners: [],\n        scriptId: uuid('tiny-script'),\n        scriptLoaded: false\n    };\n};\nexport var load = function (state, doc, url, callback) {\n    if (state.scriptLoaded) {\n        callback();\n    }\n    else {\n        state.listeners.push(callback);\n        if (!doc.getElementById(state.scriptId)) {\n            injectScriptTag(state.scriptId, doc, url, function () {\n                state.listeners.forEach(function (fn) { return fn(); });\n                state.scriptLoaded = true;\n            });\n        }\n    }\n};\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { Editor } from './components/Editor';\nexport { Editor };\n"],"sourceRoot":""}