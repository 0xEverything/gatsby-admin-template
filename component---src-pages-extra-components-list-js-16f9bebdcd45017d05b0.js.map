{"version":3,"sources":["webpack:///./src/pages/extra-components/list.js","webpack:///./src/components/SEO.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["ListPage","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Fragment","_components_SEO__WEBPACK_IMPORTED_MODULE_3__","title","keywords","oah_ui__WEBPACK_IMPORTED_MODULE_1__","xs","md","size","map","fruit","index","key","name","user","SEO","_ref","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"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","file":"component---src-pages-extra-components-list-js-16f9bebdcd45017d05b0.js","sourcesContent":["import { Row, Col, Card, List, ListItem, User } from 'oah-ui';\nimport React from 'react';\nimport SEO from '../../components/SEO';\n\nconst ListPage = () => {\n  const userList = [\n    { name: 'Carla Espinosa', title: 'Nurse' },\n    { name: 'Bob Kelso', title: 'Doctor of Medicine' },\n    { name: 'Janitor', title: 'Janitor' },\n    { name: 'Perry Cox', title: 'Doctor of Medicine' },\n    { name: 'Ben Sullivan', title: 'Carpenter and photographer' }\n  ];\n  const fruits = [\n    'Lemons',\n    'Raspberries',\n    'Strawberries',\n    'Blackberries',\n    'Kiwis',\n    'Grapefruit',\n    'Avocado',\n    'Watermelon',\n    'Cantaloupe',\n    'Oranges',\n    'Peaches'\n  ];\n  return (\n    <>\n      <SEO title=\"List\" keywords={['OAH', 'application', 'react']} />\n      <Row>\n        <Col xs={12} md={6}>\n          <Card size=\"SM\">\n            <header>Fruit List</header>\n            <List>\n              {fruits.map((fruit, index) => (\n                <ListItem key={index}>{fruit}</ListItem>\n              ))}\n            </List>\n          </Card>\n        </Col>\n        <Col xs={12} md={6}>\n          <Card size=\"SM\">\n            <header>Users List</header>\n            <List>\n              {userList.map((user, index) => (\n                <ListItem key={index}>\n                  <User title={user.title} name={user.name} />\n                </ListItem>\n              ))}\n            </List>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\nexport default ListPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription\n              },\n              {\n                property: 'og:title',\n                content: title\n              },\n              {\n                property: 'og:description',\n                content: metaDescription\n              },\n              {\n                property: 'og:type',\n                content: 'website'\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary'\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: 'twitter:title',\n                content: title\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', ')\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}