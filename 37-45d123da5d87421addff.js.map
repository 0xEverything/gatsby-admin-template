{"version":3,"sources":["webpack:///./node_modules/@tinymce/tinymce-react/node_modules/prop-types/index.js","webpack:///./node_modules/@tinymce/tinymce-react/node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/@tinymce/tinymce-react/node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/@tinymce/tinymce-react/lib/es2015/TinyMCE.js","webpack:///./node_modules/tinymce/plugins/table/index.js","webpack:///./node_modules/tinymce/plugins/table/plugin.js","webpack:///./node_modules/tinymce/plugins/link/index.js","webpack:///./node_modules/tinymce/plugins/link/plugin.js","webpack:///./node_modules/tinymce/plugins/image/index.js","webpack:///./node_modules/tinymce/plugins/image/plugin.js","webpack:///./node_modules/tinymce/plugins/code/index.js","webpack:///./node_modules/tinymce/plugins/code/plugin.js","webpack:///./node_modules/@tinymce/tinymce-react/lib/es2015/components/Editor.js","webpack:///./node_modules/@tinymce/tinymce-react/lib/es2015/components/EditorPropTypes.js","webpack:///./node_modules/@tinymce/tinymce-react/lib/es2015/Utils.js","webpack:///./node_modules/@tinymce/tinymce-react/lib/es2015/ScriptLoader.js","webpack:///./node_modules/@tinymce/tinymce-react/lib/es2015/index.js"],"names":["module","exports","__webpack_require__","ReactPropTypesSecret","emptyFunction","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","global","d","__webpack_exports__","getTinymce","getGlobal","window","tinymce","domGlobals","Cell","initial","value","get","set","v","clone","noop","args","_i","arguments","length","compose","fa","fb","apply","constant","identity","x","curry","fn","initialArgs","restArgs","all","concat","pIndexOf","not","f","never","always","never$1","always$1","none","NONE","eq","o","isNone","call","thunk","id","n","me","fold","s","is","isSome","getOr","getOrThunk","getOrDie","msg","getOrNull","getOrUndefined","or","orThunk","map","ap","each","bind","flatten","exists","forall","filter","equals","equals_","toArray","toString","Object","freeze","some","a","constant_a","self","optfab","fab","elementEq","b","Option","from","util","Tools","resolve","isType","type","t","Array","prototype","isPrototypeOf","String","typeOf","isString","isArray","isBoolean","isFunction","isNumber","rawIndexOf","undefined","indexOf","xs","slowIndexOf","contains","pred","findIndex","len","r","i","push","foldr","acc","eachr","foldl","find","output","slice","reverse","keys","hasOwnProperty","each$1","obj","k","map$1","tupleMap","tuple","key","has","Immutable","fields","values","struct","sort","arr","reqMessage","required","join","unsuppMessage","unsupported","validateStrArr","label","checkDupes","everything","sorted","MixedBag","optional","keys$1","req","opt","COMMENT","Node","ATTRIBUTE_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT","DOCUMENT_NODE","ELEMENT","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","ELEMENT_NODE","TEXT","TEXT_NODE","PROCESSING_INSTRUCTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","NOTATION_NODE","dom","nodeName","toLowerCase","nodeType","isType$1","isComment","isElement","isText","isDocument","rawSet","console","error","setAttribute","setAll","attrs","get$1","getAttribute","has$1","hasAttribute","remove","removeAttribute","attributes","attr","checkRange","str","substr","start","contains$1","startsWith","prefix","isSupported","style","cached","called","fromDom","Element","fromHtml","html","scope","div","document","createElement","innerHTML","hasChildNodes","childNodes","fromTag","tag","fromText","text","createTextNode","fromPoint","docElm","y","doc","elementFromPoint","inBody","parentNode","ownerDocument","body","getBody","internalSet","property","setProperty","set$1","setAll$1","css","get$2","getComputedStyle","getPropertyValue","getUnsafeProperty","getRaw","raw","remove$1","removeProperty","internalRemove","replace","Global","Function","p","parts","path","split","Global$1","actual","unsafe","compareDocumentPosition","match","DOCUMENT_POSITION_CONTAINED_BY","unknown","nu","major","minor","Version","detect","versionRegexes","agent","cleanedAgent","regexes","test","firstMatch","group","Number","find$1","isBrowser","current","nu$1","info","version","isEdge","isChrome","isIE","isOpera","isFirefox","isSafari","Browser","edge","chrome","ie","opera","firefox","safari","isOS","nu$2","isWindows","isiOS","isAndroid","isOSX","isLinux","isSolaris","isFreeBSD","OperatingSystem","windows","ios","android","linux","osx","solaris","freebsd","detect$1","candidates","userAgent","candidate","search","UaString","browsers","browser","oses","os","normalVersionRegex","checkContains","target","uastring","PlatformInfo","PlatformDetection","deviceType","isiPad","isiPhone","isAndroid3","isAndroid4","isTablet","isTouch","isPhone","iOSwebview","isWebView","DeviceType","PlatformDetection$1","navigator","ELEMENT$1","DOCUMENT$1","selector","elem","matches","msMatchesSelector","webkitMatchesSelector","mozMatchesSelector","bypassSelector","childElementCount","e1","e2","contains$2","d1","d2","is$1","owner","parent","parents","isRoot","stop","ret","rawParent","prevSibling","previousSibling","nextSibling","children","child","index","cs","before","marker","insertBefore","after","append","prepend","firstChild","appendChild","wrap","wrapper","after$1","elements","e","append$1","empty","textContent","rogue","remove$2","removeChild","unwrap","children$1","dimensions","grid","address","coords","detail","detailnew","Structs","extended","rowdata","elementnew","rowdatanew","rowcells","rowdetails","bounds","descendants","predicate","result","ancestors$1","ancestors","children$2","descendants$1","base","querySelectorAll","ClosestOrAncestor","ancestor","el","ancestor$1","child$2","child$1","descendant$1","querySelector","one","closest$1","filterFirstLayer","LayerSelector","firstLayer","lookup","tags","_isRoot","elm","neighbours","neighbourCells","neighbourRows","parseInt","TableLookup","cell","firstCell","cells","table","row","rows","notCell","rowProp","colProp","rowsCount","cols","DetailsList","parentSection","parentName","rowspan","colspan","example","section","column","filterItems","warehouse","Warehouse","generate","list","access","maxRows","maxColumns","details","currentRow","c","j","cc","newpos","Math","max","getAt","findItem","item","comparator","filtered","justCells","w","statsStruct","makeCell","seenSelected","rowIndex","td","CopySelected","selectedSelector","isSelected","house","stats","totalColumns","columns","minRow","minCol","maxRow","maxCol","startRow","endRow","startCol","endCol","findSelectedStats","unselectedCells","totalRows","fillInGaps","emptyRows","clean","api","getOptionSafe","nodeValue","getOption","NodeValue","get$3","set$2","getEnd","elementsWithCursorPosition","isCursorPosition","trim","first","descend","res","last$1","descendantRtl","clone$1","original","isDeep","cloneNode","shallow","deep","copy$1","shallowAs","cloneChildren","createCell","replica","pasteReplace","cellContent","newRow","TableFill","mutate","formatsToClone","prev","source","sourceDom","targetDom","docu","formats","lastNode","oldCell","newCell","firstText","formatSelector","last","clonedFormat","cloneFormats","cssText","gap","TagBoundaries","DomUniverse","up","closest","down","styles","copyTo","destination","as","insert","afterAll","appendAll","create","query","comparePosition","other","getText","setText","isBoundary","isEmptyTag","leftRight","bisect","universe","ind","Breaker","prior","second","isTop","breaker","next","splits","fallback","breakage","extra","left","right","nextChild","unsafeOne","look","head","tail","commonElement","end","Shared","all$1","eq$1","ancestors$2","ps1","ps2","prune","pruned1","pruned2","shared","firstpath","secondpath","Subset","ancs","common","finder","ps","topDown","startIndex","endIndex","sIndex","eIndex","min","unsafeSubset","Parent","finish","DomParent","sharedOne","subset","breakToLeft","breakToRight","breakPath","u","isWithin","finishCol","finishRow","CellBounds","leftEdge","rightEdge","topEdge","bottomEdge","isRect","detailIsWithin","getAnyBox","startCell","finishCell","startCoords","finishCoords","sc","fc","detailA","detailB","CellGroup","CellFinder","inside","innerCell","c1","c2","getWarehouse","TablePositions","deltaRow","deltaColumn","firstTable","lastTable","lastCell","lookupTable","container","identified","identify","getIsRoot","rootTable","boxes","startTable","finishTable","ancestorCells","lca","lcaTable","finishAncestorCells","startAncestorCells","CellSelection","retrieve","sels","shiftSelection","firstSelectedSelector","lastSelectedSelector","box","getLast","expandTo","getEdges","tbl","TableSelection","edges","firstAncestor","lastAncestor","fA","lA","selected","Ephemera","attributeSelector","firstSelected","lastSelected","Adt","cases","constructors","adt","acase","count","argLength","branches","branchKeys","reqKey","log","constructor","params","type$1","multiple","single","SelectionTypes","cata","subject","onNone","onMultiple","onSingle","selection","selections","CellOperations","_env","noMenu","mergable","unmergable","paste$1","TableTargets","forMenu","paste","pasteRows","clipboard","generators","Clipboard","registerEvents","editor","actions","cellSelection","on","preventDefault","extractSelected","content","format","innerText","getTextContent","serializer","serialize","serializeElements","getParent","getStart","domCell","getDoc","targets","pasteCells","rng","setRng","focus","clear","Dimension","getOffset","parseFloat","aggregate","properties","val","isNaN","h","getOuter","cumulativeInclusions","api$1","getBoundingClientRect","height","offsetHeight","get$4","api$2","offsetWidth","get$5","getOuter$1","platform","getProp","px","num","toNumber","RuntimeSize","paddingTop","paddingBottom","borderTop","borderBottom","getCalculatedHeight","genericSizeRegex","percentageBasedSizeRegex","pixelBasedSizeRegex","setHeight","amount","normalizePixelSize","getter","setter","suffix","newSize","total","floor","convert","getTotalHeight","getHeightValue","getSpan","getRawWidth","width","normalizePercentageWidth","cellWidth","tableSize","pixelWidth","Sizes","setPixelWidth","setPercentageWidth","getPixelWidth","pixelMatch","exec","percentMatch","normalizePixelWidth","choosePixelSize","getPercentageWidth","intWidth","choosePercentageSize","getGenericWidth","unit","setGenericWidth","getHeight","get$6","CellMutations","main","newWidth","top","translate","Position","firstDefinedOrZero","absolute","win","Window","defaultView","parentWindow","windowOf","documentElement","scrollTop","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","viewport","offsetLeft","offsetTop","attached","boxPosition","rowInfo","colInfo","rtlEdge","ltrEdge","getLeftEdge","getRightEdge","getTop","findPositions","getInnerEdge","getOuterEdge","lines","cellOption","lastLine","delta","positions","ltr","BarPositions","rtl","step","_table","ResizeDirection","TableDirection","directionAt","auto","isRtl","merger","TableGridSize","input","hasOwnProperty$1","merge","old","objects","curObject","cat","findMap","setIfNot","ignore","Redraw","newRows","newCells","renderOrRemoveSection","gridSection","sectionName","tb","isNew","tr","renderSection","removeSection","headSection","bodySection","footSection","clonedCell","read","supports","classList","add$1","clazz","add","remove$4","remove$3","add$2","cleanClass","get$7","has$2","Util","repititions","rest","aa","extras","abs","decide","getBlock","isSingle","getFallback","inBlock","Blocks","rowsArr","col","namespace","dashNamespace","Styles","Bar","blocker","position","data-column","role","data-row","resizeBar","resizeRowBar","resizeColBar","wire","previous","drawBar","origin","cpOption","cp","bar","refreshGrid","hdirection","vdirection","rowPositions","tableWidth","rowBar","refreshRow","colPositions","tableHeight","colBar","refreshCol","each$2","bars","Bars","refresh","hide","show","destroy","isRowBar","isColBar","setCells","gridRow","getCell","GridRow","addCell","mutateCell","getCellElement","mapCells","cellLength","findDiff","comp","TableGrid","restOfRow","getRow","endColIndex","restOfColumn","getColumn","endRowIndex","Transitions","seen","ri","ci","updateSeen","rowCells","deriveRows","rendered","findRow","toDetailList","findInWarehouse","RunOperation","operation","extract","adjustment","postAction","genWrappers","direction","model","fromWarehouse","cursor","out","newElements","lc","isValue","isError","_","onValue","mapError","toOption","message","onError","Result","fill","generator","rowFill","_row","colFill","Fitment","startAddress","gridA","gridB","rowRemainder","colRemainder","colRequired","rowRequired","rowDelta","colDelta","colLengthA","colLengthB","fillCols","MergingOperations","substitution","isToReplace","currentCell","uniqueCells","replacement","_loop_1","_loop_2","sub","isSpanning","matching","TableMerge","fittedGrid","mergeTables","fittedNewGrid","secondDelta","fittedOldGrid","ModificationOperations","between","ex","exampleRow","exampleCol","replaceIn","isTarget","notStartRow","colIndex","notStartColumn","TransformOperations","targetRow","folder","ColumnContext","l","m","Deltas","context","neighbours$1","zero","onChange","newNext","minCellWidth","newThis","diffx","onLeft","singleColumnWidth","size","getSpan$1","CellUtils","hasColspan","hasRowspan","minWidth","minHeight","getInt","getRaw$1","getRawW","getRawH","getWidthFrom","getWidth","backups","deduced","getDeduced","getHeightFrom","ColumnSizes","getRawWidths","getPixelWidths","getPercentageWidths","getPixelHeights","getRawHeights","measures","Recalculations","widths","heights","pixelSize","getCellDelta","getWidths","setElementWidth","setTableWidth","newWidths","_delta","chooseSize","floatWidth","_newWidths","percentageSize","fallbackWidth","TableSize","getWarehouse$1","getTableWarehouse","Adjustments","adjustWidth","deltas","dx","newSizes","adjustHeight","newHeights","dy","newCellSizes","newRowSizes","adjustWidthTo","baseWith","handleUnsupported","invalidKeys","validate","incorrect","invalidTypeMessage","handleExact","exactly","elementToData","contract","Generators","_toData","toData","nuFrom","data","recent","getOrInit","makeNew","replaceOrInit","combine","blockList","isBlock","tagName","Structure","universe$1","DomStructure","TableContent","isBr","markCell","rightSiblingIsBlock","rightSibling","contents","advancedBr","outcome","elementFromGrid","findIn","bundle","uniqueRows","currentDetail","uniqueColumns","gridifyRows","pasteDetails","wh","resize","TableOperations","insertRowBefore","targetIndex","newGrid","insertRowsBefore","newG","insertRowAfter","insertRowsAfter","insertColumnBefore","insertColumnsBefore","insertColumnAfter","insertColumnsAfter","splitCellIntoColumns","splitCellIntoRows","eraseColumns","_genWrappers","eraseRows","makeColumnHeader","unmakeColumnHeader","makeRowHeader","unmakeRowHeader","mergeCells","unmergeCells","nuGrid","pasteRowsBefore","mergedGrid","pasteRowsAfter","getBody$1","getPixelWidth$1","getPixelHeight","addSizeSuffix","removeDataStyle","dataStyleCells","ltr$1","rtl$1","Direction","getDirection","defaultStyles","border-collapse","defaultAttributes","border","getDefaultAttributes","getParam","getDefaultStyles","hasTabNavigation","hasAdvancedCellTab","hasAdvancedRowTab","hasAdvancedTableTab","shouldStyleWithCss","getTableClassList","isPixelsForced","fireNewRow","fire","fireNewCell","fireObjectResizeStart","fireObjectResized","TableActions","lazyWire","isTableBody","cloneElements","getCloneElements","execute","guard","createRng","setStart","setEnd","deleteRow","deleteColumn","CopyRows","selectedCells","slicedGrid","slicedDetails","global$1","Styles$1","formatter","firstChildStyle","elms","currentStyle","getStyle","checkChildren","select","__assign","assign","this","extractAdvancedStyles","rgbToHex","toHex","borderstyle","bordercolor","backgroundcolor","getAlignment","alignments","formatName","dataName","alignmentData","matchNode","getHAlignment","getVAlignment","Helpers","inputList","itemCallback","startItems","appendItems","menuItem","title","menu","baseData","comparisonData","items","itemValue","itemKey","comparisonValue","hasAdvTableTab","getAttrib","cellspacing","cellpadding","optBorderWidth","getBorder","caption","class","align","celltype","spacing","padding","borderWidth","advStyle","borderStyle","borderColor","bgColor","extractAdvancedStyleData","children$3","CellDialogGeneralTab","rowClassList","getCellClassList","classes","textStyle","getCssText","block","getClassList","classlist","DomModifiers","normal","setAttrib","setStyle","prop","ifTruthy","updateSimpleProps","modifiers","updateAdvancedProps","applyToSingle","cellElm","rename","halign","valign","applyToMultiple","onSubmitCellForm","getData","close","undoManager","transact","CellDialog","cellsData","dialogTabPanel","tabs","dialogPanel","windowManager","open","buttons","primary","initialData","onSubmit","formChildren","RowDialogGeneralTab","getRowClassList","getClassList$1","onSubmitRowForm","oldData","createModifier","rowElm","toType","tableElm","oldParentElm","parentElm","insertAfter","switchRowType","updateAdvancedProps$1","RowDialog","rowsData","global$2","DefaultRenderOptions","percentages","render$1","rowHeaders","columnHeaders","renderOpts","tbody","trs","placeCaretInCell","collapse","InsertTable","options","get$8","insertContent","fireEvents","selectFirstCellInTable","styleTDTH","onSubmitTableForm","captionElm","border-width","border-color","serializeStyle","setAttribs","applyDataToElement","addVisual","TableDialog","hasClasses","rowColCountItems","appearanceItems","hasAppearanceOptions","classListItem","generalPanel","nonAdvancedForm","advancedForm","dialogBody","getSelectionStartFromSelector","getSelectionStartCell","getSelectionStartCellOrCaption","each$3","Commands","registerCommands","clipboardRows","getTableFromCell","getSize","actOnSelection","beforeSize","oldSize","resizeChange","copyRowSelection","pasteOnSelection","clonedRows","mceTableSplitCells","mceTableMergeCells","mceTableInsertRowBefore","mceTableInsertRowAfter","mceTableInsertColBefore","mceTableInsertColAfter","mceTableDeleteCol","mceTableDeleteRow","mceTableCutRow","mceTableCopyRow","mceTablePasteRowBefore","mceTablePasteRowAfter","mceTableDelete","cellOrCaption","isEmpty","setContent","setCursorLocation","nodeChanged","addCommand","mceInsertTable","mceTableProps","mceTableRowProps","mceTableCellProps","ui","ResizeWire","view","editable","Event","handlers","handler","unbind","trigger","event","Events","typeDefs","registry","DragApis","mode","sink","Styles$2","handle","rawEvent","stopPropagation","prevent","kill","evt","mkEvent","clientX","clientY","bind$1","useCapture","wrapped","addEventListener","binder","removeEventListener","filter$1","bind$2","MouseDrag","compare","dragApi","settings","layerClass","Blocker","mdown","forceDrop","mup","drop","mmove","move","mout","delayDrop","mutation","InDrag","events","onEvent","update","reset","Movement","noDragState","inDragState","dragState","off","isOn","Dragging","rate","timer","active","movement","throttledDrop","cancel","clearTimeout","throttle","setTimeout","runIfActive","go","Dragger","transform","closest$2","BarMutation","drag","delegate","Mutation","xDelta","yDelta","resizeBarDragging","TableResize","manager","resizing","hoverTable","getResizer","_dataRow","_dataCol","currentCol","getDelta","dir","startAdjust","mousedown","mouseover","ht","hideBars","showBars","BarManager","beforeResize","afterResize","startDrag","TableWire","inline","margin","createContainer","ResizeHandler","startW","startRawW","selectionRng","isTable","rawWire","objectResizing","hasObjectResizing","hasTableResizeBars","sz","getRng","rawTable","targetElm","percentW","targetPercentW","newCellSizes_1","newCellSize","lazyResize","folder$1","CellLocation","detect$4","CellNavigation","Situ","onBefore","onOn","onAfter","situ","type$2","domRange","relative","range$1","getWin","defView","startContainer","startSitu","finishSitu","soffset","foffset","getStart$1","after$3","createRange","makeRange","same","collapsed","selectNodeContentsUsing","selectNodeContents","relativeToNative","range","setStartBefore","setStartAfter","setEndBefore","setEndAfter","setFinish","exactToNative","toRect","rect","bottom","adt$1","fromRange","startOffset","endContainer","endOffset","diagnose","ranges","rev","doDiagnose","getRanges","asLtrRange","inRect","locateOffset","textnode","rangeForOffset","offset","rectForOffset","maxX","curDeltaX","searchForPoint","locate","selectNode","rects","getClientRects","searchInChildren","nodes","locateNode","getCollapseDirection","createCollapsedNode","collapseDirection","locateInElement","cursorRange","locateInEmpty","searchTextNodes","boundedX","boundedY","locate$1","availableSearch","caretPositionFromPoint","pos","offsetNode","caretRangeFromPoint","beforeSpecial","name$1","preprocessRelative","preprocessExact","doSetNativeRange","getSelection","removeAllRanges","addRange","doSetRange","setRangeFromRelative","setBaseAndExtent","extend","setLegacyRtlRange","setExact","setRelative","toNative","getDomRange","preprocess","doGetExact","anchor","anchorNode","focusNode","anchorOffset","focusOffset","rangeCount","firstRng","getRangeAt","lastRng","readRange","setToElement","get$a","sel","getExact","getFirstRect$1","getFirstRect","getAtPoint","fromPoint$1","clear$1","global$3","forward","backward","getCellFirstCursorPosition","getNewRowCursorPosition","rootElements","TabContext","keyCode","TAB","body_1","isRoot_1","shiftKey","Responses","response","isKey","keycode","isUp","isDown","SelectionKeys","isBackward","isForward","isNavigation","Util$1","convertToRange","makeSitus","get$b","_DOC","by","scrollBy","WindowBridge","getRect","getRangedRect","structRect","exactAdt","fromSitus","situs","relative$1","situsFromPoint","clearSelection","setSelection","setRelativeSelection","selectContents","getInnerHeight","innerHeight","getScrollY","detect$5","selectRange","cellSel","KeySelection","sync","annotations","newSels","nu$3","Carets","moveUp","caret","moveDown","moveBottomTo","moveTopTo","getBottom","toCaret","getElemBox","bridge","Rectangles","getPartialBox","traverse","backtrack","_direction","transition","sidestep","advance","sibling","successors","go$1","rules","succ","rule","Walkers","hone","isLeaf","seekLeft","seekRight","universe$2","before$4","before$3","after$5","after$4","adt$2","retry","inOutsideBlock","isOutside","upMovement","point","adjuster","guessBox","higherCaret","gather","downMovement","lowerCaret","adjustTil","numRetries","isAtTable","adjustForTable","guess","newCaret","moved","adjusted","checkScroll","Retries","tryUp","tryDown","ieTryUp","ieTryDown","getJumpSize","adt$3","success","failedUp","failedDown","isRow","BeforeAfter","verify","beforeOffset","afterOffset","failure","afterCell","beforeCell","beforeBounds","afterBounds","isOverlapping","sharedRow","onSuccess","onFailedUp","onFailedDown","inParent","gatherer","cand","handleParent","findBr","br","adjacent","BrTags","handleBr","tgt","analysis","platform$1","scan","tryCursor","tryAgain","tryAt","otherRetry","ieRetry","TableKeys","brNeighbour","findSpot","spot","detection","inSameTable","simulate","VerticalMovement","precheck","seekLeft$1","lastOffset","seekRight$1","findCell","KeyDirection","rc","InputHandlers","mouse","clearState","mouseup","MouseSelection","keyboard","clearToNavigate","keydown","which","attempts","keyup","remove$7","remove$5","SelectionAnnotation","byClass","ephemera","addSelectionClass","removeSelectionClasses","byAttr","removeSelectionAttributes","addSelectionAttribute","hasInternalTarget","Selections","SelectionTargets","changeHandlers","findTargets","resetTargets","onSetup","isDisabled","setDisabled","onSetupTable","onSetupCellOrRow","onSetupMergeable","onSetupUnmergeable","Buttons","addButtons","selectionTargets","addMenuButton","tooltip","icon","fetch","callback","cmd","command","execCommand","addButton","onAction","addToolbars","toolbar","getToolbar","addContextToolbar","MenuItems","addMenuItems","insertTableAction","_a","numRows","numColumns","tableProperties","deleteTable","getSubmenuItems","hasTableGrid","addMenuItem","addNestedMenuItem","fancytype","addContextMenu","getApi","insertTable","setClipboardRows","sugarRows","getClipboardRows","resizeHandler","handlerStruct","mouseHandlers","keyHandlers","handleResponse","hasShiftKey","ns","wrappedEvent","wrapEvent","isMouseEvent","isLeftMouse","button","mouseDown","mouseOver","mouseUp","CellSelection$1","addTempAttr","getTargetList","editorSettings","target_list","getRelList","rel_list","getLinkClassList","link_class_list","Settings","link_assume_external_targets","link_context_toolbar","link_list","default_link_target","link_title","allow_unsafe_link_target","link_quicklink","OpenUrl","url","link","href","rel","createEvent","initMouseEvent","dispatchEvent","appendClickRemove","opener","write","DOM","encode","global$4","applyRelTargetRules","isUnsafe","rels","removeTargetRules","inArray","newRels","addTargetRules","getAnchorElement","selectedElm","getNode","isImageFigure","isLink","className","getLinkAttrs","unlinkImageFigure","fig","img","getParents","linkImageFigure","Utils","attachState","anchorElm","linkAttrs","newRel","attach","updateLink","createHTML","createLink","grep","trimCaretContainers","getContent","getValue","sanitizeWith","extracter","extractValue","sanitizeList","ListOptions","sanitize","createUi","persistentText","fieldName","catalog","hasPersistentText","findTextByValue","meta","DialogChanges","linkSettings","onCatalogChange","change","catalogs","urlText","onUrlChange","baseFn","callbacks","nCallback","isReady","run","cbs","cb","LazyValue","pure","toLazy","aFutureB","anonBind","futureB","toCached","cache","Future","global$5","tryEmailTransform","tryProtocolTransform","assumeExternalTargets","DialogConfirms","setEditorTimeout","confirm","state","delayedConfirm","AnchorListOptions","anchorNodes","anchors","ClassListOptions","global$6","LinkListOptions","extractor","convertURL","linkList","send","JSON","parse","parseJson","RelOptions","initialTarget","isTargetBlank_1","fallbacks","TargetOptions","nonEmptyAttr","DialogInfo","linkNode","links","defaultTarget","linkClass","extractFromAnchor","optNode","flags","titleEnabled","Dialog","collectData","getChangedValue","changedData","pData","handleSubmit","displayText","titleText","dialogDelta","filetype","newData","setData","makeDialog","spec","getLink","getSelectedLink","gotoLink","targetEl","$","scrollIntoView","Actions","metaKeyPressed","altKey","ctrlKey","metaKey","hasOnlyAltModifier","nodeChangeHandler","setActive","readonly","toolbarKey","Keyboard","addShortcut","Controls","addToggleButton","shortcut","addContextForm","launch","initValue","commands","buttonApi","formApi","collapseSelectionToEnd","isObject","bindFuture","resA","bindResult","mapResult","foldResult","whenError","whenValue","withTimeout","timeout","errorThunk","timedOut","worker","FutureResult","baseMerge","deepMerge","URL","blob","createObjectURL","revokeObjectURL","makeItems","imageList","hasDescription","hasImageTitle","hasDimensions","hasImageCaption","MainTab","image_dimensions","image_advtab","image_description","image_title","image_caption","parseIntAndGetMax","val1","val2","done","onload","clientWidth","clientHeight","onerror","visibility","src","splitMargin","imgElm","selectImage","reject","reader","readAsDataURL","getHspace","image","marginLeft","marginRight","getVspace","marginTop","marginBottom","hasCaption","toggleCaption","figureElm","removeFigure","contentEditable","wrapInFigure","normalizeStyle","normalizeCss","attrValue","setSize","setHspace","pxValue","setVspace","setBorder","setBorderStyle","isFigure","getStyleValue","hspace","vspace","getBorderStyle","alt","updateProp","normalized","_name","_value","mergedCss","compressed","getSelectedImage","splitTextBlock","figure","textBlock","schema","getTextBlockElements","insertImageAtCaret","outerHTML","insertedElm","insertOrUpdateImage","syncSrcAttr","writeImageDataToSelection","deleteImage","sanitizer","findEntryDelegate","isGroup","ListUtils","optList","noop$1","pathJoin","path1","path2","Uploader","defaultHandler","blobInfo","progress","xhr","formData","withCredentials","credentials","upload","onprogress","loaded","status","json","responseText","basePath","FormData","filename","uploadBlob","AdvTab","collect","urlListSanitizer","futureImageList","completer","hasAdvTab","hasUploadUrl","hasUploadHandler","readImageDataFromSelection","prependURL","preUrl","UploadTab","fromImageData","images","fileinput","toImageData","addPrependUrl","srcURL","prependUrl","substring","addPrependUrl2","formFillFromMeta","dataCopy_1","entry","formFillFromMeta2","changeSrc","helpers","imageSize","calculateImageSize","prevImage","updateImagesDropdown","changeStyle2","parseStyle","dataCopy","calcVSpace","calcHSpace","calcBorderWidth","calcBorderStyle","calcStyle","changeFileInput","unblock","file","blobUri","uploader","finalize","then","dataUrl","createBlobCache","showTab","catch","alertErr","changeHandler","prevAlt","changeImages","changeStyle","changeAStyle","closeHandler","makeDialogBody","createState","onClose","submitHandler","editorUpload","uploadImagesAuto","documentBaseURI","toAbsolute","blobCache","base64","alert","normalizeCss$1","stylesArg","hasImageClass","toggleContentEditableState","toggleContentEditable","getAll","FilterContent","parser","addNodeFilter","nu$4","nu$5","selectorChangedWithUnbind","rootElm","Content","source_view","editorContent","code","extendStatics","eventPropTypes","onActivate","prop_types","onAddUndo","onBeforeAddUndo","onBeforeExecCommand","onBeforeGetContent","onBeforeRenderUI","onBeforeSetContent","onBeforePaste","onBlur","onClearUndos","onClick","onContextMenu","onCopy","onCut","onDblclick","onDeactivate","onDirty","onDrag","onDragDrop","onDragEnd","onDragGesture","onDragOver","onDrop","onExecCommand","onFocus","onFocusIn","onFocusOut","onGetContent","onHide","onInit","onKeyDown","onKeyPress","onKeyUp","onLoadContent","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onNodeChange","onObjectResizeStart","onObjectResized","onObjectSelected","onPaste","onPostProcess","onPostRender","onPreProcess","onProgressState","onRedo","onRemove","onReset","onSaveContent","onSelectionChange","onSetAttrib","onSetContent","onShow","onUndo","onVisualAid","EditorPropTypes","apiKey","init","initialValue","onEditorChange","cloudChannel","plugins","disabled","textareaName","unique","uuid","time","Date","getTime","random","isTextarea","normalizePluginArray","mergePlugins","initPlugins","inputPlugins","__extends","setPrototypeOf","__proto__","__","Editor_assign","scriptState","listeners","scriptId","scriptLoaded","Editor_Editor","_super","Editor","_this","initialise","finalInit","setup","initEditor","TinyMCE","componentWillMount","componentDidMount","channel","getElementById","scriptTag","injectScriptTag","forEach","load","componentWillUnmount","componentWillReceiveProps","nextProps","initialized","currentContent","setMode","render","renderInline","renderIframe","initEvent","bindHandlers","react","ref","propTypes","defaultProps"],"mappings":"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","file":"37-45d123da5d87421addff.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nvar getGlobal = function () { return (typeof window !== 'undefined' ? window : global); };\nvar getTinymce = function () {\n    var global = getGlobal();\n    return global && global.tinymce ? global.tinymce : null;\n};\nexport { getTinymce };\n","// Exports the \"table\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/table')\n//   ES2015:\n//     import 'tinymce/plugins/table'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.0.2 (2019-03-05)\n */\n(function () {\nvar table = (function (domGlobals) {\n    'use strict';\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var noop = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n    };\n    var compose = function (fa, fb) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return fa(fb.apply(null, args));\n      };\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var identity = function (x) {\n      return x;\n    };\n    function curry(fn) {\n      var initialArgs = [];\n      for (var _i = 1; _i < arguments.length; _i++) {\n        initialArgs[_i - 1] = arguments[_i];\n      }\n      return function () {\n        var restArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          restArgs[_i] = arguments[_i];\n        }\n        var all = initialArgs.concat(restArgs);\n        return fn.apply(null, all);\n      };\n    }\n    var not = function (f) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        return !f.apply(null, args);\n      };\n    };\n    var die = function (msg) {\n      return function () {\n        throw new Error(msg);\n      };\n    };\n    var apply = function (f) {\n      return f();\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var never$1 = never;\n    var always$1 = always;\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var noop = function () {\n      };\n      var nul = function () {\n        return null;\n      };\n      var undef = function () {\n        return undefined;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never$1,\n        isSome: never$1,\n        isNone: always$1,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: nul,\n        getOrUndefined: undef,\n        or: id,\n        orThunk: call,\n        map: none,\n        ap: none,\n        each: noop,\n        bind: none,\n        flatten: none,\n        exists: never$1,\n        forall: always$1,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze)\n        Object.freeze(me);\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = function () {\n        return a;\n      };\n      var self = function () {\n        return me;\n      };\n      var map = function (f) {\n        return some(f(a));\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always$1,\n        isNone: never$1,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: map,\n        ap: function (optfab) {\n          return optfab.fold(none, function (fab) {\n            return some(fab(a));\n          });\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        flatten: constant_a,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never$1, function (b) {\n            return elementEq(a, b);\n          });\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var typeOf = function (x) {\n      if (x === null)\n        return 'null';\n      var t = typeof x;\n      if (t === 'object' && Array.prototype.isPrototypeOf(x))\n        return 'array';\n      if (t === 'object' && String.prototype.isPrototypeOf(x))\n        return 'string';\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isArray = isType('array');\n    var isBoolean = isType('boolean');\n    var isFunction = isType('function');\n    var isNumber = isType('number');\n\n    var rawIndexOf = function () {\n      var pIndexOf = Array.prototype.indexOf;\n      var fastIndex = function (xs, x) {\n        return pIndexOf.call(xs, x);\n      };\n      var slowIndex = function (xs, x) {\n        return slowIndexOf(xs, x);\n      };\n      return pIndexOf === undefined ? slowIndex : fastIndex;\n    }();\n    var contains = function (xs, x) {\n      return rawIndexOf(xs, x) > -1;\n    };\n    var exists = function (xs, pred) {\n      return findIndex(xs, pred).isSome();\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i, xs);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i, xs);\n      }\n    };\n    var eachr = function (xs, f) {\n      for (var i = xs.length - 1; i >= 0; i--) {\n        var x = xs[i];\n        f(x, i, xs);\n      }\n    };\n    var filter = function (xs, pred) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i, xs)) {\n          r.push(x);\n        }\n      }\n      return r;\n    };\n    var foldr = function (xs, f, acc) {\n      eachr(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var find = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i, xs)) {\n          return Option.some(x);\n        }\n      }\n      return Option.none();\n    };\n    var findIndex = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i, xs)) {\n          return Option.some(i);\n        }\n      }\n      return Option.none();\n    };\n    var slowIndexOf = function (xs, x) {\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (xs[i] === x) {\n          return i;\n        }\n      }\n      return -1;\n    };\n    var push = Array.prototype.push;\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!Array.prototype.isPrototypeOf(xs[i]))\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        push.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var bind = function (xs, f) {\n      var output = map(xs, f);\n      return flatten(output);\n    };\n    var forall = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        var x = xs[i];\n        if (pred(x, i, xs) !== true) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var slice = Array.prototype.slice;\n    var reverse = function (xs) {\n      var r = slice.call(xs, 0);\n      r.reverse();\n      return r;\n    };\n    var last = function (xs) {\n      return xs.length === 0 ? Option.none() : Option.some(xs[xs.length - 1]);\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return slice.call(x);\n    };\n\n    var keys = Object.keys;\n    var hasOwnProperty = Object.hasOwnProperty;\n    var each$1 = function (obj, f) {\n      var props = keys(obj);\n      for (var k = 0, len = props.length; k < len; k++) {\n        var i = props[k];\n        var x = obj[i];\n        f(x, i, obj);\n      }\n    };\n    var map$1 = function (obj, f) {\n      return tupleMap(obj, function (x, i, obj) {\n        return {\n          k: i,\n          v: f(x, i, obj)\n        };\n      });\n    };\n    var tupleMap = function (obj, f) {\n      var r = {};\n      each$1(obj, function (x, i) {\n        var tuple = f(x, i, obj);\n        r[tuple.k] = tuple.v;\n      });\n      return r;\n    };\n    var get = function (obj, key) {\n      return has(obj, key) ? Option.some(obj[key]) : Option.none();\n    };\n    var has = function (obj, key) {\n      return hasOwnProperty.call(obj, key);\n    };\n\n    var Immutable = function () {\n      var fields = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        fields[_i] = arguments[_i];\n      }\n      return function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          values[_i] = arguments[_i];\n        }\n        if (fields.length !== values.length) {\n          throw new Error('Wrong number of arguments to struct. Expected \"[' + fields.length + ']\", got ' + values.length + ' arguments');\n        }\n        var struct = {};\n        each(fields, function (name, i) {\n          struct[name] = constant(values[i]);\n        });\n        return struct;\n      };\n    };\n\n    var sort = function (arr) {\n      return arr.slice(0).sort();\n    };\n    var reqMessage = function (required, keys) {\n      throw new Error('All required keys (' + sort(required).join(', ') + ') were not specified. Specified keys were: ' + sort(keys).join(', ') + '.');\n    };\n    var unsuppMessage = function (unsupported) {\n      throw new Error('Unsupported keys for object: ' + sort(unsupported).join(', '));\n    };\n    var validateStrArr = function (label, array) {\n      if (!isArray(array))\n        throw new Error('The ' + label + ' fields must be an array. Was: ' + array + '.');\n      each(array, function (a) {\n        if (!isString(a))\n          throw new Error('The value ' + a + ' in the ' + label + ' fields was not a string.');\n      });\n    };\n    var invalidTypeMessage = function (incorrect, type) {\n      throw new Error('All values need to be of type: ' + type + '. Keys (' + sort(incorrect).join(', ') + ') were not.');\n    };\n    var checkDupes = function (everything) {\n      var sorted = sort(everything);\n      var dupe = find(sorted, function (s, i) {\n        return i < sorted.length - 1 && s === sorted[i + 1];\n      });\n      dupe.each(function (d) {\n        throw new Error('The field: ' + d + ' occurs more than once in the combined fields: [' + sorted.join(', ') + '].');\n      });\n    };\n\n    var MixedBag = function (required, optional) {\n      var everything = required.concat(optional);\n      if (everything.length === 0)\n        throw new Error('You must specify at least one required or optional field.');\n      validateStrArr('required', required);\n      validateStrArr('optional', optional);\n      checkDupes(everything);\n      return function (obj) {\n        var keys$1 = keys(obj);\n        var allReqd = forall(required, function (req) {\n          return contains(keys$1, req);\n        });\n        if (!allReqd)\n          reqMessage(required, keys$1);\n        var unsupported = filter(keys$1, function (key) {\n          return !contains(everything, key);\n        });\n        if (unsupported.length > 0)\n          unsuppMessage(unsupported);\n        var r = {};\n        each(required, function (req) {\n          r[req] = constant(obj[req]);\n        });\n        each(optional, function (opt) {\n          r[opt] = constant(Object.prototype.hasOwnProperty.call(obj, opt) ? Option.some(obj[opt]) : Option.none());\n        });\n        return r;\n      };\n    };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var name = function (element) {\n      var r = element.dom().nodeName;\n      return r.toLowerCase();\n    };\n    var type = function (element) {\n      return element.dom().nodeType;\n    };\n    var isType$1 = function (t) {\n      return function (element) {\n        return type(element) === t;\n      };\n    };\n    var isComment = function (element) {\n      return type(element) === COMMENT || name(element) === '#comment';\n    };\n    var isElement = isType$1(ELEMENT);\n    var isText = isType$1(TEXT);\n    var isDocument = isType$1(DOCUMENT);\n\n    var rawSet = function (dom, key, value) {\n      if (isString(value) || isBoolean(value) || isNumber(value)) {\n        dom.setAttribute(key, value + '');\n      } else {\n        domGlobals.console.error('Invalid call to Attr.set. Key ', key, ':: Value ', value, ':: Element ', dom);\n        throw new Error('Attribute value was not simple');\n      }\n    };\n    var set = function (element, key, value) {\n      rawSet(element.dom(), key, value);\n    };\n    var setAll = function (element, attrs) {\n      var dom = element.dom();\n      each$1(attrs, function (v, k) {\n        rawSet(dom, k, v);\n      });\n    };\n    var get$1 = function (element, key) {\n      var v = element.dom().getAttribute(key);\n      return v === null ? undefined : v;\n    };\n    var has$1 = function (element, key) {\n      var dom = element.dom();\n      return dom && dom.hasAttribute ? dom.hasAttribute(key) : false;\n    };\n    var remove = function (element, key) {\n      element.dom().removeAttribute(key);\n    };\n    var clone = function (element) {\n      return foldl(element.dom().attributes, function (acc, attr) {\n        acc[attr.name] = attr.value;\n        return acc;\n      }, {});\n    };\n\n    var checkRange = function (str, substr, start) {\n      if (substr === '')\n        return true;\n      if (str.length < substr.length)\n        return false;\n      var x = str.substr(start, start + substr.length);\n      return x === substr;\n    };\n    var contains$1 = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n    var startsWith = function (str, prefix) {\n      return checkRange(str, prefix, 0);\n    };\n    var endsWith = function (str, suffix) {\n      return checkRange(str, suffix, str.length - suffix.length);\n    };\n    var trim = function (str) {\n      return str.replace(/^\\s+|\\s+$/g, '');\n    };\n\n    var isSupported = function (dom) {\n      return dom.style !== undefined;\n    };\n\n    var cached = function (f) {\n      var called = false;\n      var r;\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var inBody = function (element) {\n      var dom = isText(element) ? element.dom().parentNode : element.dom();\n      return dom !== undefined && dom !== null && dom.ownerDocument.body.contains(dom);\n    };\n    var body = cached(function () {\n      return getBody(Element.fromDom(domGlobals.document));\n    });\n    var getBody = function (doc) {\n      var b = doc.dom().body;\n      if (b === null || b === undefined) {\n        throw new Error('Body is not available yet');\n      }\n      return Element.fromDom(b);\n    };\n\n    var internalSet = function (dom, property, value) {\n      if (!isString(value)) {\n        domGlobals.console.error('Invalid call to CSS.set. Property ', property, ':: Value ', value, ':: Element ', dom);\n        throw new Error('CSS value must be a string: ' + value);\n      }\n      if (isSupported(dom)) {\n        dom.style.setProperty(property, value);\n      }\n    };\n    var internalRemove = function (dom, property) {\n      if (isSupported(dom)) {\n        dom.style.removeProperty(property);\n      }\n    };\n    var set$1 = function (element, property, value) {\n      var dom = element.dom();\n      internalSet(dom, property, value);\n    };\n    var setAll$1 = function (element, css) {\n      var dom = element.dom();\n      each$1(css, function (v, k) {\n        internalSet(dom, k, v);\n      });\n    };\n    var get$2 = function (element, property) {\n      var dom = element.dom();\n      var styles = domGlobals.window.getComputedStyle(dom);\n      var r = styles.getPropertyValue(property);\n      var v = r === '' && !inBody(element) ? getUnsafeProperty(dom, property) : r;\n      return v === null ? undefined : v;\n    };\n    var getUnsafeProperty = function (dom, property) {\n      return isSupported(dom) ? dom.style.getPropertyValue(property) : '';\n    };\n    var getRaw = function (element, property) {\n      var dom = element.dom();\n      var raw = getUnsafeProperty(dom, property);\n      return Option.from(raw).filter(function (r) {\n        return r.length > 0;\n      });\n    };\n    var remove$1 = function (element, property) {\n      var dom = element.dom();\n      internalRemove(dom, property);\n      if (has$1(element, 'style') && trim(get$1(element, 'style')) === '') {\n        remove(element, 'style');\n      }\n    };\n    var copy = function (source, target) {\n      var sourceDom = source.dom();\n      var targetDom = target.dom();\n      if (isSupported(sourceDom) && isSupported(targetDom)) {\n        targetDom.style.cssText = sourceDom.style.cssText;\n      }\n    };\n\n    var Global = typeof window !== 'undefined' ? window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i)\n        o = o[parts[i]];\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null)\n        throw name + ' not available on this browser';\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    var node = function () {\n      var f = Global$1.getOrDie('Node');\n      return f;\n    };\n    var compareDocumentPosition = function (a, b, match) {\n      return (a.compareDocumentPosition(b) & match) !== 0;\n    };\n    var documentPositionPreceding = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_PRECEDING);\n    };\n    var documentPositionContainedBy = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_CONTAINED_BY);\n    };\n    var Node = {\n      documentPositionPreceding: documentPositionPreceding,\n      documentPositionContainedBy: documentPositionContainedBy\n    };\n\n    var firstMatch = function (regexes, s) {\n      for (var i = 0; i < regexes.length; i++) {\n        var x = regexes[i];\n        if (x.test(s))\n          return x;\n      }\n      return undefined;\n    };\n    var find$1 = function (regexes, agent) {\n      var r = firstMatch(regexes, agent);\n      if (!r)\n        return {\n          major: 0,\n          minor: 0\n        };\n      var group = function (i) {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu(group(1), group(2));\n    };\n    var detect = function (versionRegexes, agent) {\n      var cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0)\n        return unknown();\n      return find$1(versionRegexes, cleanedAgent);\n    };\n    var unknown = function () {\n      return nu(0, 0);\n    };\n    var nu = function (major, minor) {\n      return {\n        major: major,\n        minor: minor\n      };\n    };\n    var Version = {\n      nu: nu,\n      detect: detect,\n      unknown: unknown\n    };\n\n    var edge = 'Edge';\n    var chrome = 'Chrome';\n    var ie = 'IE';\n    var opera = 'Opera';\n    var firefox = 'Firefox';\n    var safari = 'Safari';\n    var isBrowser = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$1 = function () {\n      return nu$1({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$1 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isEdge: isBrowser(edge, current),\n        isChrome: isBrowser(chrome, current),\n        isIE: isBrowser(ie, current),\n        isOpera: isBrowser(opera, current),\n        isFirefox: isBrowser(firefox, current),\n        isSafari: isBrowser(safari, current)\n      };\n    };\n    var Browser = {\n      unknown: unknown$1,\n      nu: nu$1,\n      edge: constant(edge),\n      chrome: constant(chrome),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    var windows = 'Windows';\n    var ios = 'iOS';\n    var android = 'Android';\n    var linux = 'Linux';\n    var osx = 'OSX';\n    var solaris = 'Solaris';\n    var freebsd = 'FreeBSD';\n    var isOS = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$2 = function () {\n      return nu$2({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$2 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isWindows: isOS(windows, current),\n        isiOS: isOS(ios, current),\n        isAndroid: isOS(android, current),\n        isOSX: isOS(osx, current),\n        isLinux: isOS(linux, current),\n        isSolaris: isOS(solaris, current),\n        isFreeBSD: isOS(freebsd, current)\n      };\n    };\n    var OperatingSystem = {\n      unknown: unknown$2,\n      nu: nu$2,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      osx: constant(osx),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd)\n    };\n\n    var DeviceType = function (os, browser, userAgent) {\n      var isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      var isiPhone = os.isiOS() && !isiPad;\n      var isAndroid3 = os.isAndroid() && os.version.major === 3;\n      var isAndroid4 = os.isAndroid() && os.version.major === 4;\n      var isTablet = isiPad || isAndroid3 || isAndroid4 && /mobile/i.test(userAgent) === true;\n      var isTouch = os.isiOS() || os.isAndroid();\n      var isPhone = isTouch && !isTablet;\n      var iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview)\n      };\n    };\n\n    var detect$1 = function (candidates, userAgent) {\n      var agent = String(userAgent).toLowerCase();\n      return find(candidates, function (candidate) {\n        return candidate.search(agent);\n      });\n    };\n    var detectBrowser = function (browsers, userAgent) {\n      return detect$1(browsers, userAgent).map(function (browser) {\n        var version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version: version\n        };\n      });\n    };\n    var detectOs = function (oses, userAgent) {\n      return detect$1(oses, userAgent).map(function (os) {\n        var version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version: version\n        };\n      });\n    };\n    var UaString = {\n      detectBrowser: detectBrowser,\n      detectOs: detectOs\n    };\n\n    var normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    var checkContains = function (target) {\n      return function (uastring) {\n        return contains$1(uastring, target);\n      };\n    };\n    var browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function (uastring) {\n          var monstrosity = contains$1(uastring, 'edge/') && contains$1(uastring, 'chrome') && contains$1(uastring, 'safari') && contains$1(uastring, 'applewebkit');\n          return monstrosity;\n        }\n      },\n      {\n        name: 'Chrome',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: function (uastring) {\n          return contains$1(uastring, 'chrome') && !contains$1(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return contains$1(uastring, 'msie') || contains$1(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return (contains$1(uastring, 'safari') || contains$1(uastring, 'mobile/')) && contains$1(uastring, 'applewebkit');\n        }\n      }\n    ];\n    var oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: function (uastring) {\n          return contains$1(uastring, 'iphone') || contains$1(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'OSX',\n        search: checkContains('os x'),\n        versionRegexes: [/.*?os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      }\n    ];\n    var PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    var detect$2 = function (userAgent) {\n      var browsers = PlatformInfo.browsers();\n      var oses = PlatformInfo.oses();\n      var browser = UaString.detectBrowser(browsers, userAgent).fold(Browser.unknown, Browser.nu);\n      var os = UaString.detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      var deviceType = DeviceType(os, browser, userAgent);\n      return {\n        browser: browser,\n        os: os,\n        deviceType: deviceType\n      };\n    };\n    var PlatformDetection = { detect: detect$2 };\n\n    var detect$3 = cached(function () {\n      var userAgent = domGlobals.navigator.userAgent;\n      return PlatformDetection.detect(userAgent);\n    });\n    var PlatformDetection$1 = { detect: detect$3 };\n\n    var ELEMENT$1 = ELEMENT;\n    var DOCUMENT$1 = DOCUMENT;\n    var is = function (element, selector) {\n      var elem = element.dom();\n      if (elem.nodeType !== ELEMENT$1) {\n        return false;\n      } else if (elem.matches !== undefined) {\n        return elem.matches(selector);\n      } else if (elem.msMatchesSelector !== undefined) {\n        return elem.msMatchesSelector(selector);\n      } else if (elem.webkitMatchesSelector !== undefined) {\n        return elem.webkitMatchesSelector(selector);\n      } else if (elem.mozMatchesSelector !== undefined) {\n        return elem.mozMatchesSelector(selector);\n      } else {\n        throw new Error('Browser lacks native selectors');\n      }\n    };\n    var bypassSelector = function (dom) {\n      return dom.nodeType !== ELEMENT$1 && dom.nodeType !== DOCUMENT$1 || dom.childElementCount === 0;\n    };\n    var all = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? [] : map(base.querySelectorAll(selector), Element.fromDom);\n    };\n    var one = function (selector, scope) {\n      var base = scope === undefined ? domGlobals.document : scope.dom();\n      return bypassSelector(base) ? Option.none() : Option.from(base.querySelector(selector)).map(Element.fromDom);\n    };\n\n    var eq = function (e1, e2) {\n      return e1.dom() === e2.dom();\n    };\n    var regularContains = function (e1, e2) {\n      var d1 = e1.dom();\n      var d2 = e2.dom();\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    var ieContains = function (e1, e2) {\n      return Node.documentPositionContainedBy(e1.dom(), e2.dom());\n    };\n    var browser = PlatformDetection$1.detect().browser;\n    var contains$2 = browser.isIE() ? ieContains : regularContains;\n    var is$1 = is;\n\n    var owner = function (element) {\n      return Element.fromDom(element.dom().ownerDocument);\n    };\n    var defaultView = function (element) {\n      var el = element.dom();\n      var defView = el.ownerDocument.defaultView;\n      return Element.fromDom(defView);\n    };\n    var parent = function (element) {\n      var dom = element.dom();\n      return Option.from(dom.parentNode).map(Element.fromDom);\n    };\n    var parents = function (element, isRoot) {\n      var stop = isFunction(isRoot) ? isRoot : constant(false);\n      var dom = element.dom();\n      var ret = [];\n      while (dom.parentNode !== null && dom.parentNode !== undefined) {\n        var rawParent = dom.parentNode;\n        var p = Element.fromDom(rawParent);\n        ret.push(p);\n        if (stop(p) === true) {\n          break;\n        } else {\n          dom = rawParent;\n        }\n      }\n      return ret;\n    };\n    var prevSibling = function (element) {\n      var dom = element.dom();\n      return Option.from(dom.previousSibling).map(Element.fromDom);\n    };\n    var nextSibling = function (element) {\n      var dom = element.dom();\n      return Option.from(dom.nextSibling).map(Element.fromDom);\n    };\n    var children = function (element) {\n      var dom = element.dom();\n      return map(dom.childNodes, Element.fromDom);\n    };\n    var child = function (element, index) {\n      var cs = element.dom().childNodes;\n      return Option.from(cs[index]).map(Element.fromDom);\n    };\n    var firstChild = function (element) {\n      return child(element, 0);\n    };\n    var spot = Immutable('element', 'offset');\n\n    var before = function (marker, element) {\n      var parent$1 = parent(marker);\n      parent$1.each(function (v) {\n        v.dom().insertBefore(element.dom(), marker.dom());\n      });\n    };\n    var after = function (marker, element) {\n      var sibling = nextSibling(marker);\n      sibling.fold(function () {\n        var parent$1 = parent(marker);\n        parent$1.each(function (v) {\n          append(v, element);\n        });\n      }, function (v) {\n        before(v, element);\n      });\n    };\n    var prepend = function (parent, element) {\n      var firstChild$1 = firstChild(parent);\n      firstChild$1.fold(function () {\n        append(parent, element);\n      }, function (v) {\n        parent.dom().insertBefore(element.dom(), v.dom());\n      });\n    };\n    var append = function (parent, element) {\n      parent.dom().appendChild(element.dom());\n    };\n    var wrap = function (element, wrapper) {\n      before(element, wrapper);\n      append(wrapper, element);\n    };\n\n    var before$1 = function (marker, elements) {\n      each(elements, function (x) {\n        before(marker, x);\n      });\n    };\n    var after$1 = function (marker, elements) {\n      each(elements, function (x, i) {\n        var e = i === 0 ? marker : elements[i - 1];\n        after(e, x);\n      });\n    };\n    var append$1 = function (parent, elements) {\n      each(elements, function (x) {\n        append(parent, x);\n      });\n    };\n\n    var empty = function (element) {\n      element.dom().textContent = '';\n      each(children(element), function (rogue) {\n        remove$2(rogue);\n      });\n    };\n    var remove$2 = function (element) {\n      var dom = element.dom();\n      if (dom.parentNode !== null) {\n        dom.parentNode.removeChild(dom);\n      }\n    };\n    var unwrap = function (wrapper) {\n      var children$1 = children(wrapper);\n      if (children$1.length > 0) {\n        before$1(wrapper, children$1);\n      }\n      remove$2(wrapper);\n    };\n\n    var dimensions = Immutable('width', 'height');\n    var grid = Immutable('rows', 'columns');\n    var address = Immutable('row', 'column');\n    var coords = Immutable('x', 'y');\n    var detail = Immutable('element', 'rowspan', 'colspan');\n    var detailnew = Immutable('element', 'rowspan', 'colspan', 'isNew');\n    var extended = Immutable('element', 'rowspan', 'colspan', 'row', 'column');\n    var rowdata = Immutable('element', 'cells', 'section');\n    var elementnew = Immutable('element', 'isNew');\n    var rowdatanew = Immutable('element', 'cells', 'section', 'isNew');\n    var rowcells = Immutable('cells', 'section');\n    var rowdetails = Immutable('details', 'section');\n    var bounds = Immutable('startRow', 'startCol', 'finishRow', 'finishCol');\n    var Structs = {\n      dimensions: dimensions,\n      grid: grid,\n      address: address,\n      coords: coords,\n      extended: extended,\n      detail: detail,\n      detailnew: detailnew,\n      rowdata: rowdata,\n      elementnew: elementnew,\n      rowdatanew: rowdatanew,\n      rowcells: rowcells,\n      rowdetails: rowdetails,\n      bounds: bounds\n    };\n\n    var ancestors = function (scope, predicate, isRoot) {\n      return filter(parents(scope, isRoot), predicate);\n    };\n    var children$1 = function (scope, predicate) {\n      return filter(children(scope), predicate);\n    };\n    var descendants = function (scope, predicate) {\n      var result = [];\n      each(children(scope), function (x) {\n        if (predicate(x)) {\n          result = result.concat([x]);\n        }\n        result = result.concat(descendants(x, predicate));\n      });\n      return result;\n    };\n\n    var ancestors$1 = function (scope, selector, isRoot) {\n      return ancestors(scope, function (e) {\n        return is(e, selector);\n      }, isRoot);\n    };\n    var children$2 = function (scope, selector) {\n      return children$1(scope, function (e) {\n        return is(e, selector);\n      });\n    };\n    var descendants$1 = function (scope, selector) {\n      return all(selector, scope);\n    };\n\n    function ClosestOrAncestor (is, ancestor, scope, a, isRoot) {\n      return is(scope, a) ? Option.some(scope) : isFunction(isRoot) && isRoot(scope) ? Option.none() : ancestor(scope, a, isRoot);\n    }\n\n    var ancestor = function (scope, predicate, isRoot) {\n      var element = scope.dom();\n      var stop = isFunction(isRoot) ? isRoot : constant(false);\n      while (element.parentNode) {\n        element = element.parentNode;\n        var el = Element.fromDom(element);\n        if (predicate(el)) {\n          return Option.some(el);\n        } else if (stop(el)) {\n          break;\n        }\n      }\n      return Option.none();\n    };\n    var closest = function (scope, predicate, isRoot) {\n      var is = function (s) {\n        return predicate(s);\n      };\n      return ClosestOrAncestor(is, ancestor, scope, predicate, isRoot);\n    };\n    var child$1 = function (scope, predicate) {\n      var result = find(scope.dom().childNodes, compose(predicate, Element.fromDom));\n      return result.map(Element.fromDom);\n    };\n    var descendant = function (scope, predicate) {\n      var descend = function (node) {\n        for (var i = 0; i < node.childNodes.length; i++) {\n          if (predicate(Element.fromDom(node.childNodes[i]))) {\n            return Option.some(Element.fromDom(node.childNodes[i]));\n          }\n          var res = descend(node.childNodes[i]);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Option.none();\n      };\n      return descend(scope.dom());\n    };\n\n    var ancestor$1 = function (scope, selector, isRoot) {\n      return ancestor(scope, function (e) {\n        return is(e, selector);\n      }, isRoot);\n    };\n    var child$2 = function (scope, selector) {\n      return child$1(scope, function (e) {\n        return is(e, selector);\n      });\n    };\n    var descendant$1 = function (scope, selector) {\n      return one(selector, scope);\n    };\n    var closest$1 = function (scope, selector, isRoot) {\n      return ClosestOrAncestor(is, ancestor$1, scope, selector, isRoot);\n    };\n\n    var firstLayer = function (scope, selector) {\n      return filterFirstLayer(scope, selector, constant(true));\n    };\n    var filterFirstLayer = function (scope, selector, predicate) {\n      return bind(children(scope), function (x) {\n        return is(x, selector) ? predicate(x) ? [x] : [] : filterFirstLayer(x, selector, predicate);\n      });\n    };\n    var LayerSelector = {\n      firstLayer: firstLayer,\n      filterFirstLayer: filterFirstLayer\n    };\n\n    var lookup = function (tags, element, _isRoot) {\n      var isRoot = _isRoot !== undefined ? _isRoot : constant(false);\n      if (isRoot(element)) {\n        return Option.none();\n      }\n      if (contains(tags, name(element))) {\n        return Option.some(element);\n      }\n      var isRootOrUpperTable = function (elm) {\n        return is(elm, 'table') || isRoot(elm);\n      };\n      return ancestor$1(element, tags.join(','), isRootOrUpperTable);\n    };\n    var cell = function (element, isRoot) {\n      return lookup([\n        'td',\n        'th'\n      ], element, isRoot);\n    };\n    var cells = function (ancestor) {\n      return LayerSelector.firstLayer(ancestor, 'th,td');\n    };\n    var notCell = function (element, isRoot) {\n      return lookup([\n        'caption',\n        'tr',\n        'tbody',\n        'tfoot',\n        'thead'\n      ], element, isRoot);\n    };\n    var neighbours = function (selector, element) {\n      return parent(element).map(function (parent) {\n        return children$2(parent, selector);\n      });\n    };\n    var neighbourCells = curry(neighbours, 'th,td');\n    var neighbourRows = curry(neighbours, 'tr');\n    var firstCell = function (ancestor) {\n      return descendant$1(ancestor, 'th,td');\n    };\n    var table = function (element, isRoot) {\n      return closest$1(element, 'table', isRoot);\n    };\n    var row = function (element, isRoot) {\n      return lookup(['tr'], element, isRoot);\n    };\n    var rows = function (ancestor) {\n      return LayerSelector.firstLayer(ancestor, 'tr');\n    };\n    var attr = function (element, property) {\n      return parseInt(get$1(element, property), 10);\n    };\n    var grid$1 = function (element, rowProp, colProp) {\n      var rowsCount = attr(element, rowProp);\n      var cols = attr(element, colProp);\n      return Structs.grid(rowsCount, cols);\n    };\n    var TableLookup = {\n      cell: cell,\n      firstCell: firstCell,\n      cells: cells,\n      neighbourCells: neighbourCells,\n      table: table,\n      row: row,\n      rows: rows,\n      notCell: notCell,\n      neighbourRows: neighbourRows,\n      attr: attr,\n      grid: grid$1\n    };\n\n    var fromTable = function (table) {\n      var rows = TableLookup.rows(table);\n      return map(rows, function (row) {\n        var element = row;\n        var parent$1 = parent(element);\n        var parentSection = parent$1.map(function (p) {\n          var parentName = name(p);\n          return parentName === 'tfoot' || parentName === 'thead' || parentName === 'tbody' ? parentName : 'tbody';\n        }).getOr('tbody');\n        var cells = map(TableLookup.cells(row), function (cell) {\n          var rowspan = has$1(cell, 'rowspan') ? parseInt(get$1(cell, 'rowspan'), 10) : 1;\n          var colspan = has$1(cell, 'colspan') ? parseInt(get$1(cell, 'colspan'), 10) : 1;\n          return Structs.detail(cell, rowspan, colspan);\n        });\n        return Structs.rowdata(element, cells, parentSection);\n      });\n    };\n    var fromPastedRows = function (rows, example) {\n      return map(rows, function (row) {\n        var cells = map(TableLookup.cells(row), function (cell) {\n          var rowspan = has$1(cell, 'rowspan') ? parseInt(get$1(cell, 'rowspan'), 10) : 1;\n          var colspan = has$1(cell, 'colspan') ? parseInt(get$1(cell, 'colspan'), 10) : 1;\n          return Structs.detail(cell, rowspan, colspan);\n        });\n        return Structs.rowdata(row, cells, example.section());\n      });\n    };\n    var DetailsList = {\n      fromTable: fromTable,\n      fromPastedRows: fromPastedRows\n    };\n\n    var key = function (row, column) {\n      return row + ',' + column;\n    };\n    var getAt = function (warehouse, row, column) {\n      var raw = warehouse.access()[key(row, column)];\n      return raw !== undefined ? Option.some(raw) : Option.none();\n    };\n    var findItem = function (warehouse, item, comparator) {\n      var filtered = filterItems(warehouse, function (detail) {\n        return comparator(item, detail.element());\n      });\n      return filtered.length > 0 ? Option.some(filtered[0]) : Option.none();\n    };\n    var filterItems = function (warehouse, predicate) {\n      var all = bind(warehouse.all(), function (r) {\n        return r.cells();\n      });\n      return filter(all, predicate);\n    };\n    var generate = function (list) {\n      var access = {};\n      var cells = [];\n      var maxRows = list.length;\n      var maxColumns = 0;\n      each(list, function (details, r) {\n        var currentRow = [];\n        each(details.cells(), function (detail, c) {\n          var start = 0;\n          while (access[key(r, start)] !== undefined) {\n            start++;\n          }\n          var current = Structs.extended(detail.element(), detail.rowspan(), detail.colspan(), r, start);\n          for (var i = 0; i < detail.colspan(); i++) {\n            for (var j = 0; j < detail.rowspan(); j++) {\n              var cr = r + j;\n              var cc = start + i;\n              var newpos = key(cr, cc);\n              access[newpos] = current;\n              maxColumns = Math.max(maxColumns, cc + 1);\n            }\n          }\n          currentRow.push(current);\n        });\n        cells.push(Structs.rowdata(details.element(), currentRow, details.section()));\n      });\n      var grid = Structs.grid(maxRows, maxColumns);\n      return {\n        grid: constant(grid),\n        access: constant(access),\n        all: constant(cells)\n      };\n    };\n    var justCells = function (warehouse) {\n      var rows = map(warehouse.all(), function (w) {\n        return w.cells();\n      });\n      return flatten(rows);\n    };\n    var Warehouse = {\n      generate: generate,\n      getAt: getAt,\n      findItem: findItem,\n      filterItems: filterItems,\n      justCells: justCells\n    };\n\n    var statsStruct = Immutable('minRow', 'minCol', 'maxRow', 'maxCol');\n    var findSelectedStats = function (house, isSelected) {\n      var totalColumns = house.grid().columns();\n      var totalRows = house.grid().rows();\n      var minRow = totalRows;\n      var minCol = totalColumns;\n      var maxRow = 0;\n      var maxCol = 0;\n      each$1(house.access(), function (detail) {\n        if (isSelected(detail)) {\n          var startRow = detail.row();\n          var endRow = startRow + detail.rowspan() - 1;\n          var startCol = detail.column();\n          var endCol = startCol + detail.colspan() - 1;\n          if (startRow < minRow) {\n            minRow = startRow;\n          } else if (endRow > maxRow) {\n            maxRow = endRow;\n          }\n          if (startCol < minCol) {\n            minCol = startCol;\n          } else if (endCol > maxCol) {\n            maxCol = endCol;\n          }\n        }\n      });\n      return statsStruct(minRow, minCol, maxRow, maxCol);\n    };\n    var makeCell = function (list, seenSelected, rowIndex) {\n      var row = list[rowIndex].element();\n      var td = Element.fromTag('td');\n      append(td, Element.fromTag('br'));\n      var f = seenSelected ? append : prepend;\n      f(row, td);\n    };\n    var fillInGaps = function (list, house, stats, isSelected) {\n      var totalColumns = house.grid().columns();\n      var totalRows = house.grid().rows();\n      for (var i = 0; i < totalRows; i++) {\n        var seenSelected = false;\n        for (var j = 0; j < totalColumns; j++) {\n          if (!(i < stats.minRow() || i > stats.maxRow() || j < stats.minCol() || j > stats.maxCol())) {\n            var needCell = Warehouse.getAt(house, i, j).filter(isSelected).isNone();\n            if (needCell) {\n              makeCell(list, seenSelected, i);\n            } else {\n              seenSelected = true;\n            }\n          }\n        }\n      }\n    };\n    var clean = function (table, stats) {\n      var emptyRows = filter(LayerSelector.firstLayer(table, 'tr'), function (row) {\n        return row.dom().childElementCount === 0;\n      });\n      each(emptyRows, remove$2);\n      if (stats.minCol() === stats.maxCol() || stats.minRow() === stats.maxRow()) {\n        each(LayerSelector.firstLayer(table, 'th,td'), function (cell) {\n          remove(cell, 'rowspan');\n          remove(cell, 'colspan');\n        });\n      }\n      remove(table, 'width');\n      remove(table, 'height');\n      remove$1(table, 'width');\n      remove$1(table, 'height');\n    };\n    var extract = function (table, selectedSelector) {\n      var isSelected = function (detail) {\n        return is(detail.element(), selectedSelector);\n      };\n      var list = DetailsList.fromTable(table);\n      var house = Warehouse.generate(list);\n      var stats = findSelectedStats(house, isSelected);\n      var selector = 'th:not(' + selectedSelector + ')' + ',td:not(' + selectedSelector + ')';\n      var unselectedCells = LayerSelector.filterFirstLayer(table, 'th,td', function (cell) {\n        return is(cell, selector);\n      });\n      each(unselectedCells, remove$2);\n      fillInGaps(list, house, stats, isSelected);\n      clean(table, stats);\n      return table;\n    };\n    var CopySelected = { extract: extract };\n\n    function NodeValue (is, name) {\n      var get = function (element) {\n        if (!is(element)) {\n          throw new Error('Can only get ' + name + ' value of a ' + name + ' node');\n        }\n        return getOption(element).getOr('');\n      };\n      var getOptionIE10 = function (element) {\n        try {\n          return getOptionSafe(element);\n        } catch (e) {\n          return Option.none();\n        }\n      };\n      var getOptionSafe = function (element) {\n        return is(element) ? Option.from(element.dom().nodeValue) : Option.none();\n      };\n      var browser = PlatformDetection$1.detect().browser;\n      var getOption = browser.isIE() && browser.version.major === 10 ? getOptionIE10 : getOptionSafe;\n      var set = function (element, value) {\n        if (!is(element)) {\n          throw new Error('Can only set raw ' + name + ' value of a ' + name + ' node');\n        }\n        element.dom().nodeValue = value;\n      };\n      return {\n        get: get,\n        getOption: getOption,\n        set: set\n      };\n    }\n\n    var api = NodeValue(isText, 'text');\n    var get$3 = function (element) {\n      return api.get(element);\n    };\n    var getOption = function (element) {\n      return api.getOption(element);\n    };\n    var set$2 = function (element, value) {\n      api.set(element, value);\n    };\n\n    var getEnd = function (element) {\n      return name(element) === 'img' ? 1 : getOption(element).fold(function () {\n        return children(element).length;\n      }, function (v) {\n        return v.length;\n      });\n    };\n    var NBSP = '\\xA0';\n    var isTextNodeWithCursorPosition = function (el) {\n      return getOption(el).filter(function (text) {\n        return text.trim().length !== 0 || text.indexOf(NBSP) > -1;\n      }).isSome();\n    };\n    var elementsWithCursorPosition = [\n      'img',\n      'br'\n    ];\n    var isCursorPosition = function (elem) {\n      var hasCursorPosition = isTextNodeWithCursorPosition(elem);\n      return hasCursorPosition || contains(elementsWithCursorPosition, name(elem));\n    };\n\n    var first = function (element) {\n      return descendant(element, isCursorPosition);\n    };\n    var last$1 = function (element) {\n      return descendantRtl(element, isCursorPosition);\n    };\n    var descendantRtl = function (scope, predicate) {\n      var descend = function (element) {\n        var children$1 = children(element);\n        for (var i = children$1.length - 1; i >= 0; i--) {\n          var child = children$1[i];\n          if (predicate(child)) {\n            return Option.some(child);\n          }\n          var res = descend(child);\n          if (res.isSome()) {\n            return res;\n          }\n        }\n        return Option.none();\n      };\n      return descend(scope);\n    };\n\n    var clone$1 = function (original, isDeep) {\n      return Element.fromDom(original.dom().cloneNode(isDeep));\n    };\n    var shallow = function (original) {\n      return clone$1(original, false);\n    };\n    var deep = function (original) {\n      return clone$1(original, true);\n    };\n    var shallowAs = function (original, tag) {\n      var nu = Element.fromTag(tag);\n      var attributes = clone(original);\n      setAll(nu, attributes);\n      return nu;\n    };\n    var copy$1 = function (original, tag) {\n      var nu = shallowAs(original, tag);\n      var cloneChildren = children(deep(original));\n      append$1(nu, cloneChildren);\n      return nu;\n    };\n\n    var createCell = function () {\n      var td = Element.fromTag('td');\n      append(td, Element.fromTag('br'));\n      return td;\n    };\n    var replace = function (cell, tag, attrs) {\n      var replica = copy$1(cell, tag);\n      each$1(attrs, function (v, k) {\n        if (v === null) {\n          remove(replica, k);\n        } else {\n          set(replica, k, v);\n        }\n      });\n      return replica;\n    };\n    var pasteReplace = function (cellContent) {\n      return cellContent;\n    };\n    var newRow = function (doc) {\n      return function () {\n        return Element.fromTag('tr', doc.dom());\n      };\n    };\n    var cloneFormats = function (oldCell, newCell, formats) {\n      var first$1 = first(oldCell);\n      return first$1.map(function (firstText) {\n        var formatSelector = formats.join(',');\n        var parents = ancestors$1(firstText, formatSelector, function (element) {\n          return eq(element, oldCell);\n        });\n        return foldr(parents, function (last, parent) {\n          var clonedFormat = shallow(parent);\n          remove(clonedFormat, 'contenteditable');\n          append(last, clonedFormat);\n          return clonedFormat;\n        }, newCell);\n      }).getOr(newCell);\n    };\n    var cellOperations = function (mutate, doc, formatsToClone) {\n      var newCell = function (prev) {\n        var docu = owner(prev.element());\n        var td = Element.fromTag(name(prev.element()), docu.dom());\n        var formats = formatsToClone.getOr([\n          'strong',\n          'em',\n          'b',\n          'i',\n          'span',\n          'font',\n          'h1',\n          'h2',\n          'h3',\n          'h4',\n          'h5',\n          'h6',\n          'p',\n          'div'\n        ]);\n        var lastNode = formats.length > 0 ? cloneFormats(prev.element(), td, formats) : td;\n        append(lastNode, Element.fromTag('br'));\n        copy(prev.element(), td);\n        remove$1(td, 'height');\n        if (prev.colspan() !== 1) {\n          remove$1(prev.element(), 'width');\n        }\n        mutate(prev.element(), td);\n        return td;\n      };\n      return {\n        row: newRow(doc),\n        cell: newCell,\n        replace: replace,\n        gap: createCell\n      };\n    };\n    var paste = function (doc) {\n      return {\n        row: newRow(doc),\n        cell: createCell,\n        replace: pasteReplace,\n        gap: createCell\n      };\n    };\n    var TableFill = {\n      cellOperations: cellOperations,\n      paste: paste\n    };\n\n    var fromHtml$1 = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      return children(Element.fromDom(div));\n    };\n\n    var TagBoundaries = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'li',\n      'table',\n      'thead',\n      'tbody',\n      'tfoot',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n\n    function DomUniverse () {\n      var clone$1 = function (element) {\n        return Element.fromDom(element.dom().cloneNode(false));\n      };\n      var document = function (element) {\n        return element.dom().ownerDocument;\n      };\n      var isBoundary = function (element) {\n        if (!isElement(element))\n          return false;\n        if (name(element) === 'body')\n          return true;\n        return contains(TagBoundaries, name(element));\n      };\n      var isEmptyTag = function (element) {\n        if (!isElement(element))\n          return false;\n        return contains([\n          'br',\n          'img',\n          'hr',\n          'input'\n        ], name(element));\n      };\n      var comparePosition = function (element, other) {\n        return element.dom().compareDocumentPosition(other.dom());\n      };\n      var copyAttributesTo = function (source, destination) {\n        var as = clone(source);\n        setAll(destination, as);\n      };\n      return {\n        up: constant({\n          selector: ancestor$1,\n          closest: closest$1,\n          predicate: ancestor,\n          all: parents\n        }),\n        down: constant({\n          selector: descendants$1,\n          predicate: descendants\n        }),\n        styles: constant({\n          get: get$2,\n          getRaw: getRaw,\n          set: set$1,\n          remove: remove$1\n        }),\n        attrs: constant({\n          get: get$1,\n          set: set,\n          remove: remove,\n          copyTo: copyAttributesTo\n        }),\n        insert: constant({\n          before: before,\n          after: after,\n          afterAll: after$1,\n          append: append,\n          appendAll: append$1,\n          prepend: prepend,\n          wrap: wrap\n        }),\n        remove: constant({\n          unwrap: unwrap,\n          remove: remove$2\n        }),\n        create: constant({\n          nu: Element.fromTag,\n          clone: clone$1,\n          text: Element.fromText\n        }),\n        query: constant({\n          comparePosition: comparePosition,\n          prevSibling: prevSibling,\n          nextSibling: nextSibling\n        }),\n        property: constant({\n          children: children,\n          name: name,\n          parent: parent,\n          document: document,\n          isText: isText,\n          isComment: isComment,\n          isElement: isElement,\n          getText: get$3,\n          setText: set$2,\n          isBoundary: isBoundary,\n          isEmptyTag: isEmptyTag\n        }),\n        eq: eq,\n        is: is$1\n      };\n    }\n\n    var leftRight = Immutable('left', 'right');\n    var bisect = function (universe, parent, child) {\n      var children = universe.property().children(parent);\n      var index = findIndex(children, curry(universe.eq, child));\n      return index.map(function (ind) {\n        return {\n          before: constant(children.slice(0, ind)),\n          after: constant(children.slice(ind + 1))\n        };\n      });\n    };\n    var breakToRight = function (universe, parent, child) {\n      return bisect(universe, parent, child).map(function (parts) {\n        var second = universe.create().clone(parent);\n        universe.insert().appendAll(second, parts.after());\n        universe.insert().after(parent, second);\n        return leftRight(parent, second);\n      });\n    };\n    var breakToLeft = function (universe, parent, child) {\n      return bisect(universe, parent, child).map(function (parts) {\n        var prior = universe.create().clone(parent);\n        universe.insert().appendAll(prior, parts.before().concat([child]));\n        universe.insert().appendAll(parent, parts.after());\n        universe.insert().before(parent, prior);\n        return leftRight(prior, parent);\n      });\n    };\n    var breakPath = function (universe, item, isTop, breaker) {\n      var result = Immutable('first', 'second', 'splits');\n      var next = function (child, group, splits) {\n        var fallback = result(child, Option.none(), splits);\n        if (isTop(child))\n          return result(child, group, splits);\n        else {\n          return universe.property().parent(child).bind(function (parent) {\n            return breaker(universe, parent, child).map(function (breakage) {\n              var extra = [{\n                  first: breakage.left,\n                  second: breakage.right\n                }];\n              var nextChild = isTop(parent) ? parent : breakage.left();\n              return next(nextChild, Option.some(breakage.right()), splits.concat(extra));\n            }).getOr(fallback);\n          });\n        }\n      };\n      return next(item, Option.none(), []);\n    };\n    var Breaker = {\n      breakToLeft: breakToLeft,\n      breakToRight: breakToRight,\n      breakPath: breakPath\n    };\n\n    var all$1 = function (universe, look, elements, f) {\n      var head = elements[0];\n      var tail = elements.slice(1);\n      return f(universe, look, head, tail);\n    };\n    var oneAll = function (universe, look, elements) {\n      return elements.length > 0 ? all$1(universe, look, elements, unsafeOne) : Option.none();\n    };\n    var unsafeOne = function (universe, look, head, tail) {\n      var start = look(universe, head);\n      return foldr(tail, function (b, a) {\n        var current = look(universe, a);\n        return commonElement(universe, b, current);\n      }, start);\n    };\n    var commonElement = function (universe, start, end) {\n      return start.bind(function (s) {\n        return end.filter(curry(universe.eq, s));\n      });\n    };\n    var Shared = { oneAll: oneAll };\n\n    var eq$1 = function (universe, item) {\n      return curry(universe.eq, item);\n    };\n    var unsafeSubset = function (universe, common, ps1, ps2) {\n      var children = universe.property().children(common);\n      if (universe.eq(common, ps1[0]))\n        return Option.some([ps1[0]]);\n      if (universe.eq(common, ps2[0]))\n        return Option.some([ps2[0]]);\n      var finder = function (ps) {\n        var topDown = reverse(ps);\n        var index = findIndex(topDown, eq$1(universe, common)).getOr(-1);\n        var item = index < topDown.length - 1 ? topDown[index + 1] : topDown[index];\n        return findIndex(children, eq$1(universe, item));\n      };\n      var startIndex = finder(ps1);\n      var endIndex = finder(ps2);\n      return startIndex.bind(function (sIndex) {\n        return endIndex.map(function (eIndex) {\n          var first = Math.min(sIndex, eIndex);\n          var last = Math.max(sIndex, eIndex);\n          return children.slice(first, last + 1);\n        });\n      });\n    };\n    var ancestors$2 = function (universe, start, end, _isRoot) {\n      var isRoot = _isRoot !== undefined ? _isRoot : constant(false);\n      var ps1 = [start].concat(universe.up().all(start));\n      var ps2 = [end].concat(universe.up().all(end));\n      var prune = function (path) {\n        var index = findIndex(path, isRoot);\n        return index.fold(function () {\n          return path;\n        }, function (ind) {\n          return path.slice(0, ind + 1);\n        });\n      };\n      var pruned1 = prune(ps1);\n      var pruned2 = prune(ps2);\n      var shared = find(pruned1, function (x) {\n        return exists(pruned2, eq$1(universe, x));\n      });\n      return {\n        firstpath: constant(pruned1),\n        secondpath: constant(pruned2),\n        shared: constant(shared)\n      };\n    };\n    var subset = function (universe, start, end) {\n      var ancs = ancestors$2(universe, start, end);\n      return ancs.shared().bind(function (shared) {\n        return unsafeSubset(universe, shared, ancs.firstpath(), ancs.secondpath());\n      });\n    };\n    var Subset = {\n      subset: subset,\n      ancestors: ancestors$2\n    };\n\n    var sharedOne = function (universe, look, elements) {\n      return Shared.oneAll(universe, look, elements);\n    };\n    var subset$1 = function (universe, start, finish) {\n      return Subset.subset(universe, start, finish);\n    };\n    var ancestors$3 = function (universe, start, finish, _isRoot) {\n      return Subset.ancestors(universe, start, finish, _isRoot);\n    };\n    var breakToLeft$1 = function (universe, parent, child) {\n      return Breaker.breakToLeft(universe, parent, child);\n    };\n    var breakToRight$1 = function (universe, parent, child) {\n      return Breaker.breakToRight(universe, parent, child);\n    };\n    var breakPath$1 = function (universe, child, isTop, breaker) {\n      return Breaker.breakPath(universe, child, isTop, breaker);\n    };\n    var Parent = {\n      sharedOne: sharedOne,\n      subset: subset$1,\n      ancestors: ancestors$3,\n      breakToLeft: breakToLeft$1,\n      breakToRight: breakToRight$1,\n      breakPath: breakPath$1\n    };\n\n    var universe = DomUniverse();\n    var sharedOne$1 = function (look, elements) {\n      return Parent.sharedOne(universe, function (universe, element) {\n        return look(element);\n      }, elements);\n    };\n    var subset$2 = function (start, finish) {\n      return Parent.subset(universe, start, finish);\n    };\n    var ancestors$4 = function (start, finish, _isRoot) {\n      return Parent.ancestors(universe, start, finish, _isRoot);\n    };\n    var breakToLeft$2 = function (parent, child) {\n      return Parent.breakToLeft(universe, parent, child);\n    };\n    var breakToRight$2 = function (parent, child) {\n      return Parent.breakToRight(universe, parent, child);\n    };\n    var breakPath$2 = function (child, isTop, breaker) {\n      return Parent.breakPath(universe, child, isTop, function (u, p, c) {\n        return breaker(p, c);\n      });\n    };\n    var DomParent = {\n      sharedOne: sharedOne$1,\n      subset: subset$2,\n      ancestors: ancestors$4,\n      breakToLeft: breakToLeft$2,\n      breakToRight: breakToRight$2,\n      breakPath: breakPath$2\n    };\n\n    var inSelection = function (bounds, detail) {\n      var leftEdge = detail.column();\n      var rightEdge = detail.column() + detail.colspan() - 1;\n      var topEdge = detail.row();\n      var bottomEdge = detail.row() + detail.rowspan() - 1;\n      return leftEdge <= bounds.finishCol() && rightEdge >= bounds.startCol() && (topEdge <= bounds.finishRow() && bottomEdge >= bounds.startRow());\n    };\n    var isWithin = function (bounds, detail) {\n      return detail.column() >= bounds.startCol() && detail.column() + detail.colspan() - 1 <= bounds.finishCol() && detail.row() >= bounds.startRow() && detail.row() + detail.rowspan() - 1 <= bounds.finishRow();\n    };\n    var isRectangular = function (warehouse, bounds) {\n      var isRect = true;\n      var detailIsWithin = curry(isWithin, bounds);\n      for (var i = bounds.startRow(); i <= bounds.finishRow(); i++) {\n        for (var j = bounds.startCol(); j <= bounds.finishCol(); j++) {\n          isRect = isRect && Warehouse.getAt(warehouse, i, j).exists(detailIsWithin);\n        }\n      }\n      return isRect ? Option.some(bounds) : Option.none();\n    };\n    var CellBounds = {\n      inSelection: inSelection,\n      isWithin: isWithin,\n      isRectangular: isRectangular\n    };\n\n    var getBounds = function (detailA, detailB) {\n      return Structs.bounds(Math.min(detailA.row(), detailB.row()), Math.min(detailA.column(), detailB.column()), Math.max(detailA.row() + detailA.rowspan() - 1, detailB.row() + detailB.rowspan() - 1), Math.max(detailA.column() + detailA.colspan() - 1, detailB.column() + detailB.colspan() - 1));\n    };\n    var getAnyBox = function (warehouse, startCell, finishCell) {\n      var startCoords = Warehouse.findItem(warehouse, startCell, eq);\n      var finishCoords = Warehouse.findItem(warehouse, finishCell, eq);\n      return startCoords.bind(function (sc) {\n        return finishCoords.map(function (fc) {\n          return getBounds(sc, fc);\n        });\n      });\n    };\n    var getBox = function (warehouse, startCell, finishCell) {\n      return getAnyBox(warehouse, startCell, finishCell).bind(function (bounds) {\n        return CellBounds.isRectangular(warehouse, bounds);\n      });\n    };\n    var CellGroup = {\n      getAnyBox: getAnyBox,\n      getBox: getBox\n    };\n\n    var moveBy = function (warehouse, cell, row, column) {\n      return Warehouse.findItem(warehouse, cell, eq).bind(function (detail) {\n        var startRow = row > 0 ? detail.row() + detail.rowspan() - 1 : detail.row();\n        var startCol = column > 0 ? detail.column() + detail.colspan() - 1 : detail.column();\n        var dest = Warehouse.getAt(warehouse, startRow + row, startCol + column);\n        return dest.map(function (d) {\n          return d.element();\n        });\n      });\n    };\n    var intercepts = function (warehouse, start, finish) {\n      return CellGroup.getAnyBox(warehouse, start, finish).map(function (bounds) {\n        var inside = Warehouse.filterItems(warehouse, curry(CellBounds.inSelection, bounds));\n        return map(inside, function (detail) {\n          return detail.element();\n        });\n      });\n    };\n    var parentCell = function (warehouse, innerCell) {\n      var isContainedBy = function (c1, c2) {\n        return contains$2(c2, c1);\n      };\n      return Warehouse.findItem(warehouse, innerCell, isContainedBy).bind(function (detail) {\n        return detail.element();\n      });\n    };\n    var CellFinder = {\n      moveBy: moveBy,\n      intercepts: intercepts,\n      parentCell: parentCell\n    };\n\n    var moveBy$1 = function (cell, deltaRow, deltaColumn) {\n      return TableLookup.table(cell).bind(function (table) {\n        var warehouse = getWarehouse(table);\n        return CellFinder.moveBy(warehouse, cell, deltaRow, deltaColumn);\n      });\n    };\n    var intercepts$1 = function (table, first, last) {\n      var warehouse = getWarehouse(table);\n      return CellFinder.intercepts(warehouse, first, last);\n    };\n    var nestedIntercepts = function (table, first, firstTable, last, lastTable) {\n      var warehouse = getWarehouse(table);\n      var startCell = eq(table, firstTable) ? first : CellFinder.parentCell(warehouse, first);\n      var lastCell = eq(table, lastTable) ? last : CellFinder.parentCell(warehouse, last);\n      return CellFinder.intercepts(warehouse, startCell, lastCell);\n    };\n    var getBox$1 = function (table, first, last) {\n      var warehouse = getWarehouse(table);\n      return CellGroup.getBox(warehouse, first, last);\n    };\n    var getWarehouse = function (table) {\n      var list = DetailsList.fromTable(table);\n      return Warehouse.generate(list);\n    };\n    var TablePositions = {\n      moveBy: moveBy$1,\n      intercepts: intercepts$1,\n      nestedIntercepts: nestedIntercepts,\n      getBox: getBox$1\n    };\n\n    var lookupTable = function (container, isRoot) {\n      return ancestor$1(container, 'table');\n    };\n    var identified = MixedBag([\n      'boxes',\n      'start',\n      'finish'\n    ], []);\n    var identify = function (start, finish, isRoot) {\n      var getIsRoot = function (rootTable) {\n        return function (element) {\n          return isRoot(element) || eq(element, rootTable);\n        };\n      };\n      if (eq(start, finish)) {\n        return Option.some(identified({\n          boxes: Option.some([start]),\n          start: start,\n          finish: finish\n        }));\n      } else {\n        return lookupTable(start, isRoot).bind(function (startTable) {\n          return lookupTable(finish, isRoot).bind(function (finishTable) {\n            if (eq(startTable, finishTable)) {\n              return Option.some(identified({\n                boxes: TablePositions.intercepts(startTable, start, finish),\n                start: start,\n                finish: finish\n              }));\n            } else if (contains$2(startTable, finishTable)) {\n              var ancestorCells = ancestors$1(finish, 'td,th', getIsRoot(startTable));\n              var finishCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : finish;\n              return Option.some(identified({\n                boxes: TablePositions.nestedIntercepts(startTable, start, startTable, finish, finishTable),\n                start: start,\n                finish: finishCell\n              }));\n            } else if (contains$2(finishTable, startTable)) {\n              var ancestorCells = ancestors$1(start, 'td,th', getIsRoot(finishTable));\n              var startCell = ancestorCells.length > 0 ? ancestorCells[ancestorCells.length - 1] : start;\n              return Option.some(identified({\n                boxes: TablePositions.nestedIntercepts(finishTable, start, startTable, finish, finishTable),\n                start: start,\n                finish: startCell\n              }));\n            } else {\n              return DomParent.ancestors(start, finish).shared().bind(function (lca) {\n                return closest$1(lca, 'table', isRoot).bind(function (lcaTable) {\n                  var finishAncestorCells = ancestors$1(finish, 'td,th', getIsRoot(lcaTable));\n                  var finishCell = finishAncestorCells.length > 0 ? finishAncestorCells[finishAncestorCells.length - 1] : finish;\n                  var startAncestorCells = ancestors$1(start, 'td,th', getIsRoot(lcaTable));\n                  var startCell = startAncestorCells.length > 0 ? startAncestorCells[startAncestorCells.length - 1] : start;\n                  return Option.some(identified({\n                    boxes: TablePositions.nestedIntercepts(lcaTable, start, startTable, finish, finishTable),\n                    start: startCell,\n                    finish: finishCell\n                  }));\n                });\n              });\n            }\n          });\n        });\n      }\n    };\n    var retrieve = function (container, selector) {\n      var sels = descendants$1(container, selector);\n      return sels.length > 0 ? Option.some(sels) : Option.none();\n    };\n    var getLast = function (boxes, lastSelectedSelector) {\n      return find(boxes, function (box) {\n        return is(box, lastSelectedSelector);\n      });\n    };\n    var getEdges = function (container, firstSelectedSelector, lastSelectedSelector) {\n      return descendant$1(container, firstSelectedSelector).bind(function (first) {\n        return descendant$1(container, lastSelectedSelector).bind(function (last) {\n          return DomParent.sharedOne(lookupTable, [\n            first,\n            last\n          ]).map(function (tbl) {\n            return {\n              first: constant(first),\n              last: constant(last),\n              table: constant(tbl)\n            };\n          });\n        });\n      });\n    };\n    var expandTo = function (finish, firstSelectedSelector) {\n      return ancestor$1(finish, 'table').bind(function (table) {\n        return descendant$1(table, firstSelectedSelector).bind(function (start) {\n          return identify(start, finish).bind(function (identified) {\n            return identified.boxes().map(function (boxes) {\n              return {\n                boxes: constant(boxes),\n                start: constant(identified.start()),\n                finish: constant(identified.finish())\n              };\n            });\n          });\n        });\n      });\n    };\n    var shiftSelection = function (boxes, deltaRow, deltaColumn, firstSelectedSelector, lastSelectedSelector) {\n      return getLast(boxes, lastSelectedSelector).bind(function (last) {\n        return TablePositions.moveBy(last, deltaRow, deltaColumn).bind(function (finish) {\n          return expandTo(finish, firstSelectedSelector);\n        });\n      });\n    };\n    var CellSelection = {\n      identify: identify,\n      retrieve: retrieve,\n      shiftSelection: shiftSelection,\n      getEdges: getEdges\n    };\n\n    var retrieve$1 = function (container, selector) {\n      return CellSelection.retrieve(container, selector);\n    };\n    var retrieveBox = function (container, firstSelectedSelector, lastSelectedSelector) {\n      return CellSelection.getEdges(container, firstSelectedSelector, lastSelectedSelector).bind(function (edges) {\n        var isRoot = function (ancestor) {\n          return eq(container, ancestor);\n        };\n        var firstAncestor = ancestor$1(edges.first(), 'thead,tfoot,tbody,table', isRoot);\n        var lastAncestor = ancestor$1(edges.last(), 'thead,tfoot,tbody,table', isRoot);\n        return firstAncestor.bind(function (fA) {\n          return lastAncestor.bind(function (lA) {\n            return eq(fA, lA) ? TablePositions.getBox(edges.table(), edges.first(), edges.last()) : Option.none();\n          });\n        });\n      });\n    };\n    var TableSelection = {\n      retrieve: retrieve$1,\n      retrieveBox: retrieveBox\n    };\n\n    var selected = 'data-mce-selected';\n    var selectedSelector = 'td[' + selected + '],th[' + selected + ']';\n    var attributeSelector = '[' + selected + ']';\n    var firstSelected = 'data-mce-first-selected';\n    var firstSelectedSelector = 'td[' + firstSelected + '],th[' + firstSelected + ']';\n    var lastSelected = 'data-mce-last-selected';\n    var lastSelectedSelector = 'td[' + lastSelected + '],th[' + lastSelected + ']';\n    var Ephemera = {\n      selected: constant(selected),\n      selectedSelector: constant(selectedSelector),\n      attributeSelector: constant(attributeSelector),\n      firstSelected: constant(firstSelected),\n      firstSelectedSelector: constant(firstSelectedSelector),\n      lastSelected: constant(lastSelected),\n      lastSelectedSelector: constant(lastSelectedSelector)\n    };\n\n    var generate$1 = function (cases) {\n      if (!isArray(cases)) {\n        throw new Error('cases must be an array');\n      }\n      if (cases.length === 0) {\n        throw new Error('there must be at least one case');\n      }\n      var constructors = [];\n      var adt = {};\n      each(cases, function (acase, count) {\n        var keys$1 = keys(acase);\n        if (keys$1.length !== 1) {\n          throw new Error('one and only one name per case');\n        }\n        var key = keys$1[0];\n        var value = acase[key];\n        if (adt[key] !== undefined) {\n          throw new Error('duplicate key detected:' + key);\n        } else if (key === 'cata') {\n          throw new Error('cannot have a case named cata (sorry)');\n        } else if (!isArray(value)) {\n          throw new Error('case arguments must be an array');\n        }\n        constructors.push(key);\n        adt[key] = function () {\n          var argLength = arguments.length;\n          if (argLength !== value.length) {\n            throw new Error('Wrong number of arguments to case ' + key + '. Expected ' + value.length + ' (' + value + '), got ' + argLength);\n          }\n          var args = new Array(argLength);\n          for (var i = 0; i < args.length; i++)\n            args[i] = arguments[i];\n          var match = function (branches) {\n            var branchKeys = keys(branches);\n            if (constructors.length !== branchKeys.length) {\n              throw new Error('Wrong number of arguments to match. Expected: ' + constructors.join(',') + '\\nActual: ' + branchKeys.join(','));\n            }\n            var allReqd = forall(constructors, function (reqKey) {\n              return contains(branchKeys, reqKey);\n            });\n            if (!allReqd)\n              throw new Error('Not all branches were specified when using match. Specified: ' + branchKeys.join(', ') + '\\nRequired: ' + constructors.join(', '));\n            return branches[key].apply(null, args);\n          };\n          return {\n            fold: function () {\n              if (arguments.length !== cases.length) {\n                throw new Error('Wrong number of arguments to fold. Expected ' + cases.length + ', got ' + arguments.length);\n              }\n              var target = arguments[count];\n              return target.apply(null, args);\n            },\n            match: match,\n            log: function (label) {\n              console.log(label, {\n                constructors: constructors,\n                constructor: key,\n                params: args\n              });\n            }\n          };\n        };\n      });\n      return adt;\n    };\n    var Adt = { generate: generate$1 };\n\n    var type$1 = Adt.generate([\n      { none: [] },\n      { multiple: ['elements'] },\n      { single: ['selection'] }\n    ]);\n    var cata = function (subject, onNone, onMultiple, onSingle) {\n      return subject.fold(onNone, onMultiple, onSingle);\n    };\n    var SelectionTypes = {\n      cata: cata,\n      none: type$1.none,\n      multiple: type$1.multiple,\n      single: type$1.single\n    };\n\n    var selection = function (cell, selections) {\n      return SelectionTypes.cata(selections.get(), constant([]), identity, constant([cell]));\n    };\n    var unmergable = function (cell, selections) {\n      var hasSpan = function (elem) {\n        return has$1(elem, 'rowspan') && parseInt(get$1(elem, 'rowspan'), 10) > 1 || has$1(elem, 'colspan') && parseInt(get$1(elem, 'colspan'), 10) > 1;\n      };\n      var candidates = selection(cell, selections);\n      return candidates.length > 0 && forall(candidates, hasSpan) ? Option.some(candidates) : Option.none();\n    };\n    var mergable = function (table, selections) {\n      return SelectionTypes.cata(selections.get(), Option.none, function (cells, _env) {\n        if (cells.length === 0) {\n          return Option.none();\n        }\n        return TableSelection.retrieveBox(table, Ephemera.firstSelectedSelector(), Ephemera.lastSelectedSelector()).bind(function (bounds) {\n          return cells.length > 1 ? Option.some({\n            bounds: constant(bounds),\n            cells: constant(cells)\n          }) : Option.none();\n        });\n      }, Option.none);\n    };\n    var CellOperations = {\n      mergable: mergable,\n      unmergable: unmergable,\n      selection: selection\n    };\n\n    var noMenu = function (cell) {\n      return {\n        element: constant(cell),\n        mergable: Option.none,\n        unmergable: Option.none,\n        selection: constant([cell])\n      };\n    };\n    var forMenu = function (selections, table, cell) {\n      return {\n        element: constant(cell),\n        mergable: constant(CellOperations.mergable(table, selections)),\n        unmergable: constant(CellOperations.unmergable(cell, selections)),\n        selection: constant(CellOperations.selection(cell, selections))\n      };\n    };\n    var notCell$1 = function (element) {\n      return noMenu(element);\n    };\n    var paste$1 = Immutable('element', 'clipboard', 'generators');\n    var pasteRows = function (selections, table, cell, clipboard, generators) {\n      return {\n        element: constant(cell),\n        mergable: Option.none,\n        unmergable: Option.none,\n        selection: constant(CellOperations.selection(cell, selections)),\n        clipboard: constant(clipboard),\n        generators: constant(generators)\n      };\n    };\n    var TableTargets = {\n      noMenu: noMenu,\n      forMenu: forMenu,\n      notCell: notCell$1,\n      paste: paste$1,\n      pasteRows: pasteRows\n    };\n\n    var extractSelected = function (cells) {\n      return TableLookup.table(cells[0]).map(deep).map(function (replica) {\n        return [CopySelected.extract(replica, Ephemera.attributeSelector())];\n      });\n    };\n    var serializeElements = function (editor, elements) {\n      return map(elements, function (elm) {\n        return editor.selection.serializer.serialize(elm.dom(), {});\n      }).join('');\n    };\n    var getTextContent = function (elements) {\n      return map(elements, function (element) {\n        return element.dom().innerText;\n      }).join('');\n    };\n    var registerEvents = function (editor, selections, actions, cellSelection) {\n      editor.on('BeforeGetContent', function (e) {\n        var multiCellContext = function (cells) {\n          e.preventDefault();\n          extractSelected(cells).each(function (elements) {\n            e.content = e.format === 'text' ? getTextContent(elements) : serializeElements(editor, elements);\n          });\n        };\n        if (e.selection === true) {\n          SelectionTypes.cata(selections.get(), noop, multiCellContext, noop);\n        }\n      });\n      editor.on('BeforeSetContent', function (e) {\n        if (e.selection === true && e.paste === true) {\n          var cellOpt = Option.from(editor.dom.getParent(editor.selection.getStart(), 'th,td'));\n          cellOpt.each(function (domCell) {\n            var cell = Element.fromDom(domCell);\n            TableLookup.table(cell).each(function (table) {\n              var elements = filter(fromHtml$1(e.content), function (content) {\n                return name(content) !== 'meta';\n              });\n              if (elements.length === 1 && name(elements[0]) === 'table') {\n                e.preventDefault();\n                var doc = Element.fromDom(editor.getDoc());\n                var generators = TableFill.paste(doc);\n                var targets = TableTargets.paste(cell, elements[0], generators);\n                actions.pasteCells(table, targets).each(function (rng) {\n                  editor.selection.setRng(rng);\n                  editor.focus();\n                  cellSelection.clear(table);\n                });\n              }\n            });\n          });\n        }\n      });\n    };\n    var Clipboard = { registerEvents: registerEvents };\n\n    function Dimension (name, getOffset) {\n      var set = function (element, h) {\n        if (!isNumber(h) && !h.match(/^[0-9]+$/)) {\n          throw new Error(name + '.set accepts only positive integer values. Value was ' + h);\n        }\n        var dom = element.dom();\n        if (isSupported(dom)) {\n          dom.style[name] = h + 'px';\n        }\n      };\n      var get = function (element) {\n        var r = getOffset(element);\n        if (r <= 0 || r === null) {\n          var css = get$2(element, name);\n          return parseFloat(css) || 0;\n        }\n        return r;\n      };\n      var getOuter = get;\n      var aggregate = function (element, properties) {\n        return foldl(properties, function (acc, property) {\n          var val = get$2(element, property);\n          var value = val === undefined ? 0 : parseInt(val, 10);\n          return isNaN(value) ? acc : acc + value;\n        }, 0);\n      };\n      var max = function (element, value, properties) {\n        var cumulativeInclusions = aggregate(element, properties);\n        var absoluteMax = value > cumulativeInclusions ? value - cumulativeInclusions : 0;\n        return absoluteMax;\n      };\n      return {\n        set: set,\n        get: get,\n        getOuter: getOuter,\n        aggregate: aggregate,\n        max: max\n      };\n    }\n\n    var api$1 = Dimension('height', function (element) {\n      var dom = element.dom();\n      return inBody(element) ? dom.getBoundingClientRect().height : dom.offsetHeight;\n    });\n    var get$4 = function (element) {\n      return api$1.get(element);\n    };\n    var getOuter = function (element) {\n      return api$1.getOuter(element);\n    };\n\n    var api$2 = Dimension('width', function (element) {\n      return element.dom().offsetWidth;\n    });\n    var get$5 = function (element) {\n      return api$2.get(element);\n    };\n    var getOuter$1 = function (element) {\n      return api$2.getOuter(element);\n    };\n\n    var platform = PlatformDetection$1.detect();\n    var needManualCalc = function () {\n      return platform.browser.isIE() || platform.browser.isEdge();\n    };\n    var toNumber = function (px, fallback) {\n      var num = parseFloat(px);\n      return isNaN(num) ? fallback : num;\n    };\n    var getProp = function (elm, name, fallback) {\n      return toNumber(get$2(elm, name), fallback);\n    };\n    var getCalculatedHeight = function (cell) {\n      var paddingTop = getProp(cell, 'padding-top', 0);\n      var paddingBottom = getProp(cell, 'padding-bottom', 0);\n      var borderTop = getProp(cell, 'border-top-width', 0);\n      var borderBottom = getProp(cell, 'border-bottom-width', 0);\n      var height = cell.dom().getBoundingClientRect().height;\n      var boxSizing = get$2(cell, 'box-sizing');\n      var borders = borderTop + borderBottom;\n      return boxSizing === 'border-box' ? height : height - paddingTop - paddingBottom - borders;\n    };\n    var getWidth = function (cell) {\n      return getProp(cell, 'width', get$5(cell));\n    };\n    var getHeight = function (cell) {\n      return needManualCalc() ? getCalculatedHeight(cell) : getProp(cell, 'height', get$4(cell));\n    };\n    var RuntimeSize = {\n      getWidth: getWidth,\n      getHeight: getHeight\n    };\n\n    var genericSizeRegex = /(\\d+(\\.\\d+)?)(\\w|%)*/;\n    var percentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n    var pixelBasedSizeRegex = /(\\d+(\\.\\d+)?)px|em/;\n    var setPixelWidth = function (cell, amount) {\n      set$1(cell, 'width', amount + 'px');\n    };\n    var setPercentageWidth = function (cell, amount) {\n      set$1(cell, 'width', amount + '%');\n    };\n    var setHeight = function (cell, amount) {\n      set$1(cell, 'height', amount + 'px');\n    };\n    var getHeightValue = function (cell) {\n      return getRaw(cell, 'height').getOrThunk(function () {\n        return RuntimeSize.getHeight(cell) + 'px';\n      });\n    };\n    var convert = function (cell, number, getter, setter) {\n      var newSize = TableLookup.table(cell).map(function (table) {\n        var total = getter(table);\n        return Math.floor(number / 100 * total);\n      }).getOr(number);\n      setter(cell, newSize);\n      return newSize;\n    };\n    var normalizePixelSize = function (value, cell, getter, setter) {\n      var number = parseInt(value, 10);\n      return endsWith(value, '%') && name(cell) !== 'table' ? convert(cell, number, getter, setter) : number;\n    };\n    var getTotalHeight = function (cell) {\n      var value = getHeightValue(cell);\n      if (!value) {\n        return get$4(cell);\n      }\n      return normalizePixelSize(value, cell, get$4, setHeight);\n    };\n    var get$6 = function (cell, type, f) {\n      var v = f(cell);\n      var span = getSpan(cell, type);\n      return v / span;\n    };\n    var getSpan = function (cell, type) {\n      return has$1(cell, type) ? parseInt(get$1(cell, type), 10) : 1;\n    };\n    var getRawWidth = function (element) {\n      var cssWidth = getRaw(element, 'width');\n      return cssWidth.fold(function () {\n        return Option.from(get$1(element, 'width'));\n      }, function (width) {\n        return Option.some(width);\n      });\n    };\n    var normalizePercentageWidth = function (cellWidth, tableSize) {\n      return cellWidth / tableSize.pixelWidth() * 100;\n    };\n    var choosePercentageSize = function (element, width, tableSize) {\n      if (percentageBasedSizeRegex.test(width)) {\n        var percentMatch = percentageBasedSizeRegex.exec(width);\n        return parseFloat(percentMatch[1]);\n      } else {\n        var intWidth = get$5(element);\n        return normalizePercentageWidth(intWidth, tableSize);\n      }\n    };\n    var getPercentageWidth = function (cell, tableSize) {\n      var width = getRawWidth(cell);\n      return width.fold(function () {\n        var intWidth = get$5(cell);\n        return normalizePercentageWidth(intWidth, tableSize);\n      }, function (w) {\n        return choosePercentageSize(cell, w, tableSize);\n      });\n    };\n    var normalizePixelWidth = function (cellWidth, tableSize) {\n      return cellWidth / 100 * tableSize.pixelWidth();\n    };\n    var choosePixelSize = function (element, width, tableSize) {\n      if (pixelBasedSizeRegex.test(width)) {\n        var pixelMatch = pixelBasedSizeRegex.exec(width);\n        return parseInt(pixelMatch[1], 10);\n      } else if (percentageBasedSizeRegex.test(width)) {\n        var percentMatch = percentageBasedSizeRegex.exec(width);\n        var floatWidth = parseFloat(percentMatch[1]);\n        return normalizePixelWidth(floatWidth, tableSize);\n      } else {\n        return get$5(element);\n      }\n    };\n    var getPixelWidth = function (cell, tableSize) {\n      var width = getRawWidth(cell);\n      return width.fold(function () {\n        return get$5(cell);\n      }, function (w) {\n        return choosePixelSize(cell, w, tableSize);\n      });\n    };\n    var getHeight$1 = function (cell) {\n      return get$6(cell, 'rowspan', getTotalHeight);\n    };\n    var getGenericWidth = function (cell) {\n      var width = getRawWidth(cell);\n      return width.bind(function (w) {\n        if (genericSizeRegex.test(w)) {\n          var match = genericSizeRegex.exec(w);\n          return Option.some({\n            width: constant(match[1]),\n            unit: constant(match[3])\n          });\n        } else {\n          return Option.none();\n        }\n      });\n    };\n    var setGenericWidth = function (cell, amount, unit) {\n      set$1(cell, 'width', amount + unit);\n    };\n    var Sizes = {\n      percentageBasedSizeRegex: constant(percentageBasedSizeRegex),\n      pixelBasedSizeRegex: constant(pixelBasedSizeRegex),\n      setPixelWidth: setPixelWidth,\n      setPercentageWidth: setPercentageWidth,\n      setHeight: setHeight,\n      getPixelWidth: getPixelWidth,\n      getPercentageWidth: getPercentageWidth,\n      getGenericWidth: getGenericWidth,\n      setGenericWidth: setGenericWidth,\n      getHeight: getHeight$1,\n      getRawWidth: getRawWidth\n    };\n\n    var halve = function (main, other) {\n      var width = Sizes.getGenericWidth(main);\n      width.each(function (w) {\n        var newWidth = w.width() / 2;\n        Sizes.setGenericWidth(main, newWidth, w.unit());\n        Sizes.setGenericWidth(other, newWidth, w.unit());\n      });\n    };\n    var CellMutations = { halve: halve };\n\n    var attached = function (element, scope) {\n      var doc = scope || Element.fromDom(domGlobals.document.documentElement);\n      return ancestor(element, curry(eq, doc)).isSome();\n    };\n    var windowOf = function (element) {\n      var dom = element.dom();\n      if (dom === dom.window && element instanceof domGlobals.Window) {\n        return element;\n      }\n      return isDocument(element) ? dom.defaultView || dom.parentWindow : null;\n    };\n\n    var r = function (left, top) {\n      var translate = function (x, y) {\n        return r(left + x, top + y);\n      };\n      return {\n        left: constant(left),\n        top: constant(top),\n        translate: translate\n      };\n    };\n    var Position = r;\n\n    var boxPosition = function (dom) {\n      var box = dom.getBoundingClientRect();\n      return Position(box.left, box.top);\n    };\n    var firstDefinedOrZero = function (a, b) {\n      return a !== undefined ? a : b !== undefined ? b : 0;\n    };\n    var absolute = function (element) {\n      var doc = element.dom().ownerDocument;\n      var body = doc.body;\n      var win = windowOf(Element.fromDom(doc));\n      var html = doc.documentElement;\n      var scrollTop = firstDefinedOrZero(win.pageYOffset, html.scrollTop);\n      var scrollLeft = firstDefinedOrZero(win.pageXOffset, html.scrollLeft);\n      var clientTop = firstDefinedOrZero(html.clientTop, body.clientTop);\n      var clientLeft = firstDefinedOrZero(html.clientLeft, body.clientLeft);\n      return viewport(element).translate(scrollLeft - clientLeft, scrollTop - clientTop);\n    };\n    var viewport = function (element) {\n      var dom = element.dom();\n      var doc = dom.ownerDocument;\n      var body = doc.body;\n      var html = Element.fromDom(doc.documentElement);\n      if (body === dom) {\n        return Position(body.offsetLeft, body.offsetTop);\n      }\n      if (!attached(element, html)) {\n        return Position(0, 0);\n      }\n      return boxPosition(dom);\n    };\n\n    var rowInfo = Immutable('row', 'y');\n    var colInfo = Immutable('col', 'x');\n    var rtlEdge = function (cell) {\n      var pos = absolute(cell);\n      return pos.left() + getOuter$1(cell);\n    };\n    var ltrEdge = function (cell) {\n      return absolute(cell).left();\n    };\n    var getLeftEdge = function (index, cell) {\n      return colInfo(index, ltrEdge(cell));\n    };\n    var getRightEdge = function (index, cell) {\n      return colInfo(index, rtlEdge(cell));\n    };\n    var getTop = function (cell) {\n      return absolute(cell).top();\n    };\n    var getTopEdge = function (index, cell) {\n      return rowInfo(index, getTop(cell));\n    };\n    var getBottomEdge = function (index, cell) {\n      return rowInfo(index, getTop(cell) + getOuter(cell));\n    };\n    var findPositions = function (getInnerEdge, getOuterEdge, array) {\n      if (array.length === 0) {\n        return [];\n      }\n      var lines = map(array.slice(1), function (cellOption, index) {\n        return cellOption.map(function (cell) {\n          return getInnerEdge(index, cell);\n        });\n      });\n      var lastLine = array[array.length - 1].map(function (cell) {\n        return getOuterEdge(array.length - 1, cell);\n      });\n      return lines.concat([lastLine]);\n    };\n    var negate = function (step, _table) {\n      return -step;\n    };\n    var height = {\n      delta: identity,\n      positions: curry(findPositions, getTopEdge, getBottomEdge),\n      edge: getTop\n    };\n    var ltr = {\n      delta: identity,\n      edge: ltrEdge,\n      positions: curry(findPositions, getLeftEdge, getRightEdge)\n    };\n    var rtl = {\n      delta: negate,\n      edge: rtlEdge,\n      positions: curry(findPositions, getRightEdge, getLeftEdge)\n    };\n    var BarPositions = {\n      height: height,\n      rtl: rtl,\n      ltr: ltr\n    };\n\n    var ResizeDirection = {\n      ltr: BarPositions.ltr,\n      rtl: BarPositions.rtl\n    };\n\n    function TableDirection (directionAt) {\n      var auto = function (table) {\n        return directionAt(table).isRtl() ? ResizeDirection.rtl : ResizeDirection.ltr;\n      };\n      var delta = function (amount, table) {\n        return auto(table).delta(amount, table);\n      };\n      var positions = function (cols, table) {\n        return auto(table).positions(cols);\n      };\n      var edge = function (cell) {\n        return auto(cell).edge(cell);\n      };\n      return {\n        delta: delta,\n        edge: edge,\n        positions: positions\n      };\n    }\n\n    var getGridSize = function (table) {\n      var input = DetailsList.fromTable(table);\n      var warehouse = Warehouse.generate(input);\n      return warehouse.grid();\n    };\n    var TableGridSize = { getGridSize: getGridSize };\n\n    var hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n    var shallow$1 = function (old, nu) {\n      return nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++)\n          objects[i] = arguments[i];\n        if (objects.length === 0)\n          throw new Error('Can\\'t merge zero objects');\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject)\n            if (hasOwnProperty$1.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n        }\n        return ret;\n      };\n    };\n    var merge = baseMerge(shallow$1);\n\n    var cat = function (arr) {\n      var r = [];\n      var push = function (x) {\n        r.push(x);\n      };\n      for (var i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    var findMap = function (arr, f) {\n      for (var i = 0; i < arr.length; i++) {\n        var r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Option.none();\n    };\n\n    var setIfNot = function (element, property, value, ignore) {\n      if (value === ignore) {\n        remove(element, property);\n      } else {\n        set(element, property, value);\n      }\n    };\n    var render = function (table, grid) {\n      var newRows = [];\n      var newCells = [];\n      var renderSection = function (gridSection, sectionName) {\n        var section = child$2(table, sectionName).getOrThunk(function () {\n          var tb = Element.fromTag(sectionName, owner(table).dom());\n          append(table, tb);\n          return tb;\n        });\n        empty(section);\n        var rows = map(gridSection, function (row) {\n          if (row.isNew()) {\n            newRows.push(row.element());\n          }\n          var tr = row.element();\n          empty(tr);\n          each(row.cells(), function (cell) {\n            if (cell.isNew()) {\n              newCells.push(cell.element());\n            }\n            setIfNot(cell.element(), 'colspan', cell.colspan(), 1);\n            setIfNot(cell.element(), 'rowspan', cell.rowspan(), 1);\n            append(tr, cell.element());\n          });\n          return tr;\n        });\n        append$1(section, rows);\n      };\n      var removeSection = function (sectionName) {\n        child$2(table, sectionName).each(remove$2);\n      };\n      var renderOrRemoveSection = function (gridSection, sectionName) {\n        if (gridSection.length > 0) {\n          renderSection(gridSection, sectionName);\n        } else {\n          removeSection(sectionName);\n        }\n      };\n      var headSection = [];\n      var bodySection = [];\n      var footSection = [];\n      each(grid, function (row) {\n        switch (row.section()) {\n        case 'thead':\n          headSection.push(row);\n          break;\n        case 'tbody':\n          bodySection.push(row);\n          break;\n        case 'tfoot':\n          footSection.push(row);\n          break;\n        }\n      });\n      renderOrRemoveSection(headSection, 'thead');\n      renderOrRemoveSection(bodySection, 'tbody');\n      renderOrRemoveSection(footSection, 'tfoot');\n      return {\n        newRows: constant(newRows),\n        newCells: constant(newCells)\n      };\n    };\n    var copy$2 = function (grid) {\n      var rows = map(grid, function (row) {\n        var tr = shallow(row.element());\n        each(row.cells(), function (cell) {\n          var clonedCell = deep(cell.element());\n          setIfNot(clonedCell, 'colspan', cell.colspan(), 1);\n          setIfNot(clonedCell, 'rowspan', cell.rowspan(), 1);\n          append(tr, clonedCell);\n        });\n        return tr;\n      });\n      return rows;\n    };\n    var Redraw = {\n      render: render,\n      copy: copy$2\n    };\n\n    var read = function (element, attr) {\n      var value = get$1(element, attr);\n      return value === undefined || value === '' ? [] : value.split(' ');\n    };\n    var add = function (element, attr, id) {\n      var old = read(element, attr);\n      var nu = old.concat([id]);\n      set(element, attr, nu.join(' '));\n      return true;\n    };\n    var remove$3 = function (element, attr, id) {\n      var nu = filter(read(element, attr), function (v) {\n        return v !== id;\n      });\n      if (nu.length > 0) {\n        set(element, attr, nu.join(' '));\n      } else {\n        remove(element, attr);\n      }\n      return false;\n    };\n\n    var supports = function (element) {\n      return element.dom().classList !== undefined;\n    };\n    var get$7 = function (element) {\n      return read(element, 'class');\n    };\n    var add$1 = function (element, clazz) {\n      return add(element, 'class', clazz);\n    };\n    var remove$4 = function (element, clazz) {\n      return remove$3(element, 'class', clazz);\n    };\n\n    var add$2 = function (element, clazz) {\n      if (supports(element)) {\n        element.dom().classList.add(clazz);\n      } else {\n        add$1(element, clazz);\n      }\n    };\n    var cleanClass = function (element) {\n      var classList = supports(element) ? element.dom().classList : get$7(element);\n      if (classList.length === 0) {\n        remove(element, 'class');\n      }\n    };\n    var remove$5 = function (element, clazz) {\n      if (supports(element)) {\n        var classList = element.dom().classList;\n        classList.remove(clazz);\n      } else {\n        remove$4(element, clazz);\n      }\n      cleanClass(element);\n    };\n    var has$2 = function (element, clazz) {\n      return supports(element) && element.dom().classList.contains(clazz);\n    };\n\n    var repeat = function (repititions, f) {\n      var r = [];\n      for (var i = 0; i < repititions; i++) {\n        r.push(f(i));\n      }\n      return r;\n    };\n    var range = function (start, end) {\n      var r = [];\n      for (var i = start; i < end; i++) {\n        r.push(i);\n      }\n      return r;\n    };\n    var unique = function (xs, comparator) {\n      var result = [];\n      each(xs, function (x, i) {\n        if (i < xs.length - 1 && !comparator(x, xs[i + 1])) {\n          result.push(x);\n        } else if (i === xs.length - 1) {\n          result.push(x);\n        }\n      });\n      return result;\n    };\n    var deduce = function (xs, index) {\n      if (index < 0 || index >= xs.length - 1) {\n        return Option.none();\n      }\n      var current = xs[index].fold(function () {\n        var rest = reverse(xs.slice(0, index));\n        return findMap(rest, function (a, i) {\n          return a.map(function (aa) {\n            return {\n              value: aa,\n              delta: i + 1\n            };\n          });\n        });\n      }, function (c) {\n        return Option.some({\n          value: c,\n          delta: 0\n        });\n      });\n      var next = xs[index + 1].fold(function () {\n        var rest = xs.slice(index + 1);\n        return findMap(rest, function (a, i) {\n          return a.map(function (aa) {\n            return {\n              value: aa,\n              delta: i + 1\n            };\n          });\n        });\n      }, function (n) {\n        return Option.some({\n          value: n,\n          delta: 1\n        });\n      });\n      return current.bind(function (c) {\n        return next.map(function (n) {\n          var extras = n.delta + c.delta;\n          return Math.abs(n.value - c.value) / extras;\n        });\n      });\n    };\n    var Util = {\n      repeat: repeat,\n      range: range,\n      unique: unique,\n      deduce: deduce\n    };\n\n    var columns = function (warehouse) {\n      var grid = warehouse.grid();\n      var cols = Util.range(0, grid.columns());\n      var rowsArr = Util.range(0, grid.rows());\n      return map(cols, function (col) {\n        var getBlock = function () {\n          return bind(rowsArr, function (r) {\n            return Warehouse.getAt(warehouse, r, col).filter(function (detail) {\n              return detail.column() === col;\n            }).fold(constant([]), function (detail) {\n              return [detail];\n            });\n          });\n        };\n        var isSingle = function (detail) {\n          return detail.colspan() === 1;\n        };\n        var getFallback = function () {\n          return Warehouse.getAt(warehouse, 0, col);\n        };\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n    var decide = function (getBlock, isSingle, getFallback) {\n      var inBlock = getBlock();\n      var singleInBlock = find(inBlock, isSingle);\n      var detailOption = singleInBlock.orThunk(function () {\n        return Option.from(inBlock[0]).orThunk(getFallback);\n      });\n      return detailOption.map(function (detail) {\n        return detail.element();\n      });\n    };\n    var rows$1 = function (warehouse) {\n      var grid = warehouse.grid();\n      var rowsArr = Util.range(0, grid.rows());\n      var cols = Util.range(0, grid.columns());\n      return map(rowsArr, function (row) {\n        var getBlock = function () {\n          return bind(cols, function (c) {\n            return Warehouse.getAt(warehouse, row, c).filter(function (detail) {\n              return detail.row() === row;\n            }).fold(constant([]), function (detail) {\n              return [detail];\n            });\n          });\n        };\n        var isSingle = function (detail) {\n          return detail.rowspan() === 1;\n        };\n        var getFallback = function () {\n          return Warehouse.getAt(warehouse, row, 0);\n        };\n        return decide(getBlock, isSingle, getFallback);\n      });\n    };\n    var Blocks = {\n      columns: columns,\n      rows: rows$1\n    };\n\n    var css = function (namespace) {\n      var dashNamespace = namespace.replace(/\\./g, '-');\n      var resolve = function (str) {\n        return dashNamespace + '-' + str;\n      };\n      return { resolve: resolve };\n    };\n\n    var styles = css('ephox-snooker');\n    var Styles = { resolve: styles.resolve };\n\n    var col = function (column, x, y, w, h) {\n      var blocker = Element.fromTag('div');\n      setAll$1(blocker, {\n        position: 'absolute',\n        left: x - w / 2 + 'px',\n        top: y + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll(blocker, {\n        'data-column': column,\n        'role': 'presentation'\n      });\n      return blocker;\n    };\n    var row$1 = function (r, x, y, w, h) {\n      var blocker = Element.fromTag('div');\n      setAll$1(blocker, {\n        position: 'absolute',\n        left: x + 'px',\n        top: y - h / 2 + 'px',\n        height: h + 'px',\n        width: w + 'px'\n      });\n      setAll(blocker, {\n        'data-row': r,\n        'role': 'presentation'\n      });\n      return blocker;\n    };\n    var Bar = {\n      col: col,\n      row: row$1\n    };\n\n    var resizeBar = Styles.resolve('resizer-bar');\n    var resizeRowBar = Styles.resolve('resizer-rows');\n    var resizeColBar = Styles.resolve('resizer-cols');\n    var BAR_THICKNESS = 7;\n    var clear = function (wire) {\n      var previous = descendants$1(wire.parent(), '.' + resizeBar);\n      each(previous, remove$2);\n    };\n    var drawBar = function (wire, positions, create) {\n      var origin = wire.origin();\n      each(positions, function (cpOption, i) {\n        cpOption.each(function (cp) {\n          var bar = create(origin, cp);\n          add$2(bar, resizeBar);\n          append(wire.parent(), bar);\n        });\n      });\n    };\n    var refreshCol = function (wire, colPositions, position, tableHeight) {\n      drawBar(wire, colPositions, function (origin, cp) {\n        var colBar = Bar.col(cp.col(), cp.x() - origin.left(), position.top() - origin.top(), BAR_THICKNESS, tableHeight);\n        add$2(colBar, resizeColBar);\n        return colBar;\n      });\n    };\n    var refreshRow = function (wire, rowPositions, position, tableWidth) {\n      drawBar(wire, rowPositions, function (origin, cp) {\n        var rowBar = Bar.row(cp.row(), position.left() - origin.left(), cp.y() - origin.top(), tableWidth, BAR_THICKNESS);\n        add$2(rowBar, resizeRowBar);\n        return rowBar;\n      });\n    };\n    var refreshGrid = function (wire, table, rows, cols, hdirection, vdirection) {\n      var position = absolute(table);\n      var rowPositions = rows.length > 0 ? hdirection.positions(rows, table) : [];\n      refreshRow(wire, rowPositions, position, getOuter$1(table));\n      var colPositions = cols.length > 0 ? vdirection.positions(cols, table) : [];\n      refreshCol(wire, colPositions, position, getOuter(table));\n    };\n    var refresh = function (wire, table, hdirection, vdirection) {\n      clear(wire);\n      var list = DetailsList.fromTable(table);\n      var warehouse = Warehouse.generate(list);\n      var rows = Blocks.rows(warehouse);\n      var cols = Blocks.columns(warehouse);\n      refreshGrid(wire, table, rows, cols, hdirection, vdirection);\n    };\n    var each$2 = function (wire, f) {\n      var bars = descendants$1(wire.parent(), '.' + resizeBar);\n      each(bars, f);\n    };\n    var hide = function (wire) {\n      each$2(wire, function (bar) {\n        set$1(bar, 'display', 'none');\n      });\n    };\n    var show = function (wire) {\n      each$2(wire, function (bar) {\n        set$1(bar, 'display', 'block');\n      });\n    };\n    var isRowBar = function (element) {\n      return has$2(element, resizeRowBar);\n    };\n    var isColBar = function (element) {\n      return has$2(element, resizeColBar);\n    };\n    var Bars = {\n      refresh: refresh,\n      hide: hide,\n      show: show,\n      destroy: clear,\n      isRowBar: isRowBar,\n      isColBar: isColBar\n    };\n\n    var addCell = function (gridRow, index, cell) {\n      var cells = gridRow.cells();\n      var before = cells.slice(0, index);\n      var after = cells.slice(index);\n      var newCells = before.concat([cell]).concat(after);\n      return setCells(gridRow, newCells);\n    };\n    var mutateCell = function (gridRow, index, cell) {\n      var cells = gridRow.cells();\n      cells[index] = cell;\n    };\n    var setCells = function (gridRow, cells) {\n      return Structs.rowcells(cells, gridRow.section());\n    };\n    var mapCells = function (gridRow, f) {\n      var cells = gridRow.cells();\n      var r = map(cells, f);\n      return Structs.rowcells(r, gridRow.section());\n    };\n    var getCell = function (gridRow, index) {\n      return gridRow.cells()[index];\n    };\n    var getCellElement = function (gridRow, index) {\n      return getCell(gridRow, index).element();\n    };\n    var cellLength = function (gridRow) {\n      return gridRow.cells().length;\n    };\n    var GridRow = {\n      addCell: addCell,\n      setCells: setCells,\n      mutateCell: mutateCell,\n      getCell: getCell,\n      getCellElement: getCellElement,\n      mapCells: mapCells,\n      cellLength: cellLength\n    };\n\n    var getColumn = function (grid, index) {\n      return map(grid, function (row) {\n        return GridRow.getCell(row, index);\n      });\n    };\n    var getRow = function (grid, index) {\n      return grid[index];\n    };\n    var findDiff = function (xs, comp) {\n      if (xs.length === 0) {\n        return 0;\n      }\n      var first = xs[0];\n      var index = findIndex(xs, function (x) {\n        return !comp(first.element(), x.element());\n      });\n      return index.fold(function () {\n        return xs.length;\n      }, function (ind) {\n        return ind;\n      });\n    };\n    var subgrid = function (grid, row, column, comparator) {\n      var restOfRow = getRow(grid, row).cells().slice(column);\n      var endColIndex = findDiff(restOfRow, comparator);\n      var restOfColumn = getColumn(grid, column).slice(row);\n      var endRowIndex = findDiff(restOfColumn, comparator);\n      return {\n        colspan: constant(endColIndex),\n        rowspan: constant(endRowIndex)\n      };\n    };\n    var TableGrid = { subgrid: subgrid };\n\n    var toDetails = function (grid, comparator) {\n      var seen = map(grid, function (row, ri) {\n        return map(row.cells(), function (col, ci) {\n          return false;\n        });\n      });\n      var updateSeen = function (ri, ci, rowspan, colspan) {\n        for (var r = ri; r < ri + rowspan; r++) {\n          for (var c = ci; c < ci + colspan; c++) {\n            seen[r][c] = true;\n          }\n        }\n      };\n      return map(grid, function (row, ri) {\n        var details = bind(row.cells(), function (cell, ci) {\n          if (seen[ri][ci] === false) {\n            var result = TableGrid.subgrid(grid, ri, ci, comparator);\n            updateSeen(ri, ci, result.rowspan(), result.colspan());\n            return [Structs.detailnew(cell.element(), result.rowspan(), result.colspan(), cell.isNew())];\n          } else {\n            return [];\n          }\n        });\n        return Structs.rowdetails(details, row.section());\n      });\n    };\n    var toGrid = function (warehouse, generators, isNew) {\n      var grid = [];\n      for (var i = 0; i < warehouse.grid().rows(); i++) {\n        var rowCells = [];\n        for (var j = 0; j < warehouse.grid().columns(); j++) {\n          var element = Warehouse.getAt(warehouse, i, j).map(function (item) {\n            return Structs.elementnew(item.element(), isNew);\n          }).getOrThunk(function () {\n            return Structs.elementnew(generators.gap(), true);\n          });\n          rowCells.push(element);\n        }\n        var row = Structs.rowcells(rowCells, warehouse.all()[i].section());\n        grid.push(row);\n      }\n      return grid;\n    };\n    var Transitions = {\n      toDetails: toDetails,\n      toGrid: toGrid\n    };\n\n    var fromWarehouse = function (warehouse, generators) {\n      return Transitions.toGrid(warehouse, generators, false);\n    };\n    var deriveRows = function (rendered, generators) {\n      var findRow = function (details) {\n        var rowOfCells = findMap(details, function (detail) {\n          return parent(detail.element()).map(function (row) {\n            var isNew = parent(row).isNone();\n            return Structs.elementnew(row, isNew);\n          });\n        });\n        return rowOfCells.getOrThunk(function () {\n          return Structs.elementnew(generators.row(), true);\n        });\n      };\n      return map(rendered, function (details) {\n        var row = findRow(details.details());\n        return Structs.rowdatanew(row.element(), details.details(), details.section(), row.isNew());\n      });\n    };\n    var toDetailList = function (grid, generators) {\n      var rendered = Transitions.toDetails(grid, eq);\n      return deriveRows(rendered, generators);\n    };\n    var findInWarehouse = function (warehouse, element) {\n      var all = flatten(map(warehouse.all(), function (r) {\n        return r.cells();\n      }));\n      return find(all, function (e) {\n        return eq(element, e.element());\n      });\n    };\n    var run = function (operation, extract, adjustment, postAction, genWrappers) {\n      return function (wire, table, target, generators, direction) {\n        var input = DetailsList.fromTable(table);\n        var warehouse = Warehouse.generate(input);\n        var output = extract(warehouse, target).map(function (info) {\n          var model = fromWarehouse(warehouse, generators);\n          var result = operation(model, info, eq, genWrappers(generators));\n          var grid = toDetailList(result.grid(), generators);\n          return {\n            grid: constant(grid),\n            cursor: result.cursor\n          };\n        });\n        return output.fold(function () {\n          return Option.none();\n        }, function (out) {\n          var newElements = Redraw.render(table, out.grid());\n          adjustment(table, out.grid(), direction);\n          postAction(table);\n          Bars.refresh(wire, table, BarPositions.height, direction);\n          return Option.some({\n            cursor: out.cursor,\n            newRows: newElements.newRows,\n            newCells: newElements.newCells\n          });\n        });\n      };\n    };\n    var onCell = function (warehouse, target) {\n      return TableLookup.cell(target.element()).bind(function (cell) {\n        return findInWarehouse(warehouse, cell);\n      });\n    };\n    var onPaste = function (warehouse, target) {\n      return TableLookup.cell(target.element()).bind(function (cell) {\n        return findInWarehouse(warehouse, cell).map(function (details) {\n          return merge(details, {\n            generators: target.generators,\n            clipboard: target.clipboard\n          });\n        });\n      });\n    };\n    var onPasteRows = function (warehouse, target) {\n      var details = map(target.selection(), function (cell) {\n        return TableLookup.cell(cell).bind(function (lc) {\n          return findInWarehouse(warehouse, lc);\n        });\n      });\n      var cells = cat(details);\n      return cells.length > 0 ? Option.some(merge({ cells: cells }, {\n        generators: target.generators,\n        clipboard: target.clipboard\n      })) : Option.none();\n    };\n    var onMergable = function (warehouse, target) {\n      return target.mergable();\n    };\n    var onUnmergable = function (warehouse, target) {\n      return target.unmergable();\n    };\n    var onCells = function (warehouse, target) {\n      var details = map(target.selection(), function (cell) {\n        return TableLookup.cell(cell).bind(function (lc) {\n          return findInWarehouse(warehouse, lc);\n        });\n      });\n      var cells = cat(details);\n      return cells.length > 0 ? Option.some(cells) : Option.none();\n    };\n    var RunOperation = {\n      run: run,\n      toDetailList: toDetailList,\n      onCell: onCell,\n      onCells: onCells,\n      onPaste: onPaste,\n      onPasteRows: onPasteRows,\n      onMergable: onMergable,\n      onUnmergable: onUnmergable\n    };\n\n    var value = function (o) {\n      var is = function (v) {\n        return o === v;\n      };\n      var or = function (opt) {\n        return value(o);\n      };\n      var orThunk = function (f) {\n        return value(o);\n      };\n      var map = function (f) {\n        return value(f(o));\n      };\n      var mapError = function (f) {\n        return value(o);\n      };\n      var each = function (f) {\n        f(o);\n      };\n      var bind = function (f) {\n        return f(o);\n      };\n      var fold = function (_, onValue) {\n        return onValue(o);\n      };\n      var exists = function (f) {\n        return f(o);\n      };\n      var forall = function (f) {\n        return f(o);\n      };\n      var toOption = function () {\n        return Option.some(o);\n      };\n      return {\n        is: is,\n        isValue: always,\n        isError: never,\n        getOr: constant(o),\n        getOrThunk: constant(o),\n        getOrDie: constant(o),\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: each,\n        bind: bind,\n        exists: exists,\n        forall: forall,\n        toOption: toOption\n      };\n    };\n    var error = function (message) {\n      var getOrThunk = function (f) {\n        return f();\n      };\n      var getOrDie = function () {\n        return die(String(message))();\n      };\n      var or = function (opt) {\n        return opt;\n      };\n      var orThunk = function (f) {\n        return f();\n      };\n      var map = function (f) {\n        return error(message);\n      };\n      var mapError = function (f) {\n        return error(f(message));\n      };\n      var bind = function (f) {\n        return error(message);\n      };\n      var fold = function (onError, _) {\n        return onError(message);\n      };\n      return {\n        is: never,\n        isValue: never,\n        isError: always,\n        getOr: identity,\n        getOrThunk: getOrThunk,\n        getOrDie: getOrDie,\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: noop,\n        bind: bind,\n        exists: never,\n        forall: always,\n        toOption: Option.none\n      };\n    };\n    var Result = {\n      value: value,\n      error: error\n    };\n\n    var measure = function (startAddress, gridA, gridB) {\n      if (startAddress.row() >= gridA.length || startAddress.column() > GridRow.cellLength(gridA[0])) {\n        return Result.error('invalid start address out of table bounds, row: ' + startAddress.row() + ', column: ' + startAddress.column());\n      }\n      var rowRemainder = gridA.slice(startAddress.row());\n      var colRemainder = rowRemainder[0].cells().slice(startAddress.column());\n      var colRequired = GridRow.cellLength(gridB[0]);\n      var rowRequired = gridB.length;\n      return Result.value({\n        rowDelta: constant(rowRemainder.length - rowRequired),\n        colDelta: constant(colRemainder.length - colRequired)\n      });\n    };\n    var measureWidth = function (gridA, gridB) {\n      var colLengthA = GridRow.cellLength(gridA[0]);\n      var colLengthB = GridRow.cellLength(gridB[0]);\n      return {\n        rowDelta: constant(0),\n        colDelta: constant(colLengthA - colLengthB)\n      };\n    };\n    var fill = function (cells, generator) {\n      return map(cells, function () {\n        return Structs.elementnew(generator.cell(), true);\n      });\n    };\n    var rowFill = function (grid, amount, generator) {\n      return grid.concat(Util.repeat(amount, function (_row) {\n        return GridRow.setCells(grid[grid.length - 1], fill(grid[grid.length - 1].cells(), generator));\n      }));\n    };\n    var colFill = function (grid, amount, generator) {\n      return map(grid, function (row) {\n        return GridRow.setCells(row, row.cells().concat(fill(Util.range(0, amount), generator)));\n      });\n    };\n    var tailor = function (gridA, delta, generator) {\n      var fillCols = delta.colDelta() < 0 ? colFill : identity;\n      var fillRows = delta.rowDelta() < 0 ? rowFill : identity;\n      var modifiedCols = fillCols(gridA, Math.abs(delta.colDelta()), generator);\n      var tailoredGrid = fillRows(modifiedCols, Math.abs(delta.rowDelta()), generator);\n      return tailoredGrid;\n    };\n    var Fitment = {\n      measure: measure,\n      measureWidth: measureWidth,\n      tailor: tailor\n    };\n\n    var merge$1 = function (grid, bounds, comparator, substitution) {\n      if (grid.length === 0) {\n        return grid;\n      }\n      for (var i = bounds.startRow(); i <= bounds.finishRow(); i++) {\n        for (var j = bounds.startCol(); j <= bounds.finishCol(); j++) {\n          GridRow.mutateCell(grid[i], j, Structs.elementnew(substitution(), false));\n        }\n      }\n      return grid;\n    };\n    var unmerge = function (grid, target, comparator, substitution) {\n      var first = true;\n      for (var i = 0; i < grid.length; i++) {\n        for (var j = 0; j < GridRow.cellLength(grid[0]); j++) {\n          var current = GridRow.getCellElement(grid[i], j);\n          var isToReplace = comparator(current, target);\n          if (isToReplace === true && first === false) {\n            GridRow.mutateCell(grid[i], j, Structs.elementnew(substitution(), true));\n          } else if (isToReplace === true) {\n            first = false;\n          }\n        }\n      }\n      return grid;\n    };\n    var uniqueCells = function (row, comparator) {\n      return foldl(row, function (rest, cell) {\n        return exists(rest, function (currentCell) {\n          return comparator(currentCell.element(), cell.element());\n        }) ? rest : rest.concat([cell]);\n      }, []);\n    };\n    var splitRows = function (grid, index, comparator, substitution) {\n      if (index > 0 && index < grid.length) {\n        var rowPrevCells = grid[index - 1].cells();\n        var cells = uniqueCells(rowPrevCells, comparator);\n        each(cells, function (cell) {\n          var replacement = Option.none();\n          var _loop_1 = function (i) {\n            var _loop_2 = function (j) {\n              var current = grid[i].cells()[j];\n              var isToReplace = comparator(current.element(), cell.element());\n              if (isToReplace) {\n                if (replacement.isNone()) {\n                  replacement = Option.some(substitution());\n                }\n                replacement.each(function (sub) {\n                  GridRow.mutateCell(grid[i], j, Structs.elementnew(sub, true));\n                });\n              }\n            };\n            for (var j = 0; j < GridRow.cellLength(grid[0]); j++) {\n              _loop_2(j);\n            }\n          };\n          for (var i = index; i < grid.length; i++) {\n            _loop_1(i);\n          }\n        });\n      }\n      return grid;\n    };\n    var MergingOperations = {\n      merge: merge$1,\n      unmerge: unmerge,\n      splitRows: splitRows\n    };\n\n    var isSpanning = function (grid, row, col, comparator) {\n      var candidate = GridRow.getCell(grid[row], col);\n      var matching = curry(comparator, candidate.element());\n      var currentRow = grid[row];\n      return grid.length > 1 && GridRow.cellLength(currentRow) > 1 && (col > 0 && matching(GridRow.getCellElement(currentRow, col - 1)) || col < currentRow.length - 1 && matching(GridRow.getCellElement(currentRow, col + 1)) || row > 0 && matching(GridRow.getCellElement(grid[row - 1], col)) || row < grid.length - 1 && matching(GridRow.getCellElement(grid[row + 1], col)));\n    };\n    var mergeTables = function (startAddress, gridA, gridB, generator, comparator) {\n      var startRow = startAddress.row();\n      var startCol = startAddress.column();\n      var mergeHeight = gridB.length;\n      var mergeWidth = GridRow.cellLength(gridB[0]);\n      var endRow = startRow + mergeHeight;\n      var endCol = startCol + mergeWidth;\n      for (var r = startRow; r < endRow; r++) {\n        for (var c = startCol; c < endCol; c++) {\n          if (isSpanning(gridA, r, c, comparator)) {\n            MergingOperations.unmerge(gridA, GridRow.getCellElement(gridA[r], c), comparator, generator.cell);\n          }\n          var newCell = GridRow.getCellElement(gridB[r - startRow], c - startCol);\n          var replacement = generator.replace(newCell);\n          GridRow.mutateCell(gridA[r], c, Structs.elementnew(replacement, true));\n        }\n      }\n      return gridA;\n    };\n    var merge$2 = function (startAddress, gridA, gridB, generator, comparator) {\n      var result = Fitment.measure(startAddress, gridA, gridB);\n      return result.map(function (delta) {\n        var fittedGrid = Fitment.tailor(gridA, delta, generator);\n        return mergeTables(startAddress, fittedGrid, gridB, generator, comparator);\n      });\n    };\n    var insert = function (index, gridA, gridB, generator, comparator) {\n      MergingOperations.splitRows(gridA, index, comparator, generator.cell);\n      var delta = Fitment.measureWidth(gridB, gridA);\n      var fittedNewGrid = Fitment.tailor(gridB, delta, generator);\n      var secondDelta = Fitment.measureWidth(gridA, fittedNewGrid);\n      var fittedOldGrid = Fitment.tailor(gridA, secondDelta, generator);\n      return fittedOldGrid.slice(0, index).concat(fittedNewGrid).concat(fittedOldGrid.slice(index, fittedOldGrid.length));\n    };\n    var TableMerge = {\n      merge: merge$2,\n      insert: insert\n    };\n\n    var insertRowAt = function (grid, index, example, comparator, substitution) {\n      var before = grid.slice(0, index);\n      var after = grid.slice(index);\n      var between = GridRow.mapCells(grid[example], function (ex, c) {\n        var withinSpan = index > 0 && index < grid.length && comparator(GridRow.getCellElement(grid[index - 1], c), GridRow.getCellElement(grid[index], c));\n        var ret = withinSpan ? GridRow.getCell(grid[index], c) : Structs.elementnew(substitution(ex.element(), comparator), true);\n        return ret;\n      });\n      return before.concat([between]).concat(after);\n    };\n    var insertColumnAt = function (grid, index, example, comparator, substitution) {\n      return map(grid, function (row) {\n        var withinSpan = index > 0 && index < GridRow.cellLength(row) && comparator(GridRow.getCellElement(row, index - 1), GridRow.getCellElement(row, index));\n        var sub = withinSpan ? GridRow.getCell(row, index) : Structs.elementnew(substitution(GridRow.getCellElement(row, example), comparator), true);\n        return GridRow.addCell(row, index, sub);\n      });\n    };\n    var splitCellIntoColumns = function (grid, exampleRow, exampleCol, comparator, substitution) {\n      var index = exampleCol + 1;\n      return map(grid, function (row, i) {\n        var isTargetCell = i === exampleRow;\n        var sub = isTargetCell ? Structs.elementnew(substitution(GridRow.getCellElement(row, exampleCol), comparator), true) : GridRow.getCell(row, exampleCol);\n        return GridRow.addCell(row, index, sub);\n      });\n    };\n    var splitCellIntoRows = function (grid, exampleRow, exampleCol, comparator, substitution) {\n      var index = exampleRow + 1;\n      var before = grid.slice(0, index);\n      var after = grid.slice(index);\n      var between = GridRow.mapCells(grid[exampleRow], function (ex, i) {\n        var isTargetCell = i === exampleCol;\n        return isTargetCell ? Structs.elementnew(substitution(ex.element(), comparator), true) : ex;\n      });\n      return before.concat([between]).concat(after);\n    };\n    var deleteColumnsAt = function (grid, start, finish) {\n      var rows = map(grid, function (row) {\n        var cells = row.cells().slice(0, start).concat(row.cells().slice(finish + 1));\n        return Structs.rowcells(cells, row.section());\n      });\n      return filter(rows, function (row) {\n        return row.cells().length > 0;\n      });\n    };\n    var deleteRowsAt = function (grid, start, finish) {\n      return grid.slice(0, start).concat(grid.slice(finish + 1));\n    };\n    var ModificationOperations = {\n      insertRowAt: insertRowAt,\n      insertColumnAt: insertColumnAt,\n      splitCellIntoColumns: splitCellIntoColumns,\n      splitCellIntoRows: splitCellIntoRows,\n      deleteRowsAt: deleteRowsAt,\n      deleteColumnsAt: deleteColumnsAt\n    };\n\n    var replaceIn = function (grid, targets, comparator, substitution) {\n      var isTarget = function (cell) {\n        return exists(targets, function (target) {\n          return comparator(cell.element(), target.element());\n        });\n      };\n      return map(grid, function (row) {\n        return GridRow.mapCells(row, function (cell) {\n          return isTarget(cell) ? Structs.elementnew(substitution(cell.element(), comparator), true) : cell;\n        });\n      });\n    };\n    var notStartRow = function (grid, rowIndex, colIndex, comparator) {\n      return GridRow.getCellElement(grid[rowIndex], colIndex) !== undefined && (rowIndex > 0 && comparator(GridRow.getCellElement(grid[rowIndex - 1], colIndex), GridRow.getCellElement(grid[rowIndex], colIndex)));\n    };\n    var notStartColumn = function (row, index, comparator) {\n      return index > 0 && comparator(GridRow.getCellElement(row, index - 1), GridRow.getCellElement(row, index));\n    };\n    var replaceColumn = function (grid, index, comparator, substitution) {\n      var targets = bind(grid, function (row, i) {\n        var alreadyAdded = notStartRow(grid, i, index, comparator) || notStartColumn(row, index, comparator);\n        return alreadyAdded ? [] : [GridRow.getCell(row, index)];\n      });\n      return replaceIn(grid, targets, comparator, substitution);\n    };\n    var replaceRow = function (grid, index, comparator, substitution) {\n      var targetRow = grid[index];\n      var targets = bind(targetRow.cells(), function (item, i) {\n        var alreadyAdded = notStartRow(grid, index, i, comparator) || notStartColumn(targetRow, i, comparator);\n        return alreadyAdded ? [] : [item];\n      });\n      return replaceIn(grid, targets, comparator, substitution);\n    };\n    var TransformOperations = {\n      replaceColumn: replaceColumn,\n      replaceRow: replaceRow\n    };\n\n    var none$1 = function () {\n      return folder(function (n, o, l, m, r) {\n        return n();\n      });\n    };\n    var only = function (index) {\n      return folder(function (n, o, l, m, r) {\n        return o(index);\n      });\n    };\n    var left = function (index, next) {\n      return folder(function (n, o, l, m, r) {\n        return l(index, next);\n      });\n    };\n    var middle = function (prev, index, next) {\n      return folder(function (n, o, l, m, r) {\n        return m(prev, index, next);\n      });\n    };\n    var right = function (prev, index) {\n      return folder(function (n, o, l, m, r) {\n        return r(prev, index);\n      });\n    };\n    var folder = function (fold) {\n      return { fold: fold };\n    };\n    var ColumnContext = {\n      none: none$1,\n      only: only,\n      left: left,\n      middle: middle,\n      right: right\n    };\n\n    var neighbours$1 = function (input, index) {\n      if (input.length === 0) {\n        return ColumnContext.none();\n      }\n      if (input.length === 1) {\n        return ColumnContext.only(0);\n      }\n      if (index === 0) {\n        return ColumnContext.left(0, 1);\n      }\n      if (index === input.length - 1) {\n        return ColumnContext.right(index - 1, index);\n      }\n      if (index > 0 && index < input.length - 1) {\n        return ColumnContext.middle(index - 1, index, index + 1);\n      }\n      return ColumnContext.none();\n    };\n    var determine = function (input, column, step, tableSize) {\n      var result = input.slice(0);\n      var context = neighbours$1(input, column);\n      var zero = function (array) {\n        return map(array, constant(0));\n      };\n      var onNone = constant(zero(result));\n      var onOnly = function (index) {\n        return tableSize.singleColumnWidth(result[index], step);\n      };\n      var onChange = function (index, next) {\n        if (step >= 0) {\n          var newNext = Math.max(tableSize.minCellWidth(), result[next] - step);\n          return zero(result.slice(0, index)).concat([\n            step,\n            newNext - result[next]\n          ]).concat(zero(result.slice(next + 1)));\n        } else {\n          var newThis = Math.max(tableSize.minCellWidth(), result[index] + step);\n          var diffx = result[index] - newThis;\n          return zero(result.slice(0, index)).concat([\n            newThis - result[index],\n            diffx\n          ]).concat(zero(result.slice(next + 1)));\n        }\n      };\n      var onLeft = onChange;\n      var onMiddle = function (prev, index, next) {\n        return onChange(index, next);\n      };\n      var onRight = function (prev, index) {\n        if (step >= 0) {\n          return zero(result.slice(0, index)).concat([step]);\n        } else {\n          var size = Math.max(tableSize.minCellWidth(), result[index] + step);\n          return zero(result.slice(0, index)).concat([size - result[index]]);\n        }\n      };\n      return context.fold(onNone, onOnly, onLeft, onMiddle, onRight);\n    };\n    var Deltas = { determine: determine };\n\n    var getSpan$1 = function (cell, type) {\n      return has$1(cell, type) && parseInt(get$1(cell, type), 10) > 1;\n    };\n    var hasColspan = function (cell) {\n      return getSpan$1(cell, 'colspan');\n    };\n    var hasRowspan = function (cell) {\n      return getSpan$1(cell, 'rowspan');\n    };\n    var getInt = function (element, property) {\n      return parseInt(get$2(element, property), 10);\n    };\n    var CellUtils = {\n      hasColspan: hasColspan,\n      hasRowspan: hasRowspan,\n      minWidth: constant(10),\n      minHeight: constant(10),\n      getInt: getInt\n    };\n\n    var getRaw$1 = function (cell, property, getter) {\n      return getRaw(cell, property).fold(function () {\n        return getter(cell) + 'px';\n      }, function (raw) {\n        return raw;\n      });\n    };\n    var getRawW = function (cell) {\n      return getRaw$1(cell, 'width', Sizes.getPixelWidth);\n    };\n    var getRawH = function (cell) {\n      return getRaw$1(cell, 'height', Sizes.getHeight);\n    };\n    var getWidthFrom = function (warehouse, direction, getWidth, fallback, tableSize) {\n      var columns = Blocks.columns(warehouse);\n      var backups = map(columns, function (cellOption) {\n        return cellOption.map(direction.edge);\n      });\n      return map(columns, function (cellOption, c) {\n        var columnCell = cellOption.filter(not(CellUtils.hasColspan));\n        return columnCell.fold(function () {\n          var deduced = Util.deduce(backups, c);\n          return fallback(deduced);\n        }, function (cell) {\n          return getWidth(cell, tableSize);\n        });\n      });\n    };\n    var getDeduced = function (deduced) {\n      return deduced.map(function (d) {\n        return d + 'px';\n      }).getOr('');\n    };\n    var getRawWidths = function (warehouse, direction) {\n      return getWidthFrom(warehouse, direction, getRawW, getDeduced);\n    };\n    var getPercentageWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, Sizes.getPercentageWidth, function (deduced) {\n        return deduced.fold(function () {\n          return tableSize.minCellWidth();\n        }, function (cellWidth) {\n          return cellWidth / tableSize.pixelWidth() * 100;\n        });\n      }, tableSize);\n    };\n    var getPixelWidths = function (warehouse, direction, tableSize) {\n      return getWidthFrom(warehouse, direction, Sizes.getPixelWidth, function (deduced) {\n        return deduced.getOrThunk(tableSize.minCellWidth);\n      }, tableSize);\n    };\n    var getHeightFrom = function (warehouse, direction, getHeight, fallback) {\n      var rows = Blocks.rows(warehouse);\n      var backups = map(rows, function (cellOption) {\n        return cellOption.map(direction.edge);\n      });\n      return map(rows, function (cellOption, c) {\n        var rowCell = cellOption.filter(not(CellUtils.hasRowspan));\n        return rowCell.fold(function () {\n          var deduced = Util.deduce(backups, c);\n          return fallback(deduced);\n        }, function (cell) {\n          return getHeight(cell);\n        });\n      });\n    };\n    var getPixelHeights = function (warehouse, direction) {\n      return getHeightFrom(warehouse, direction, Sizes.getHeight, function (deduced) {\n        return deduced.getOrThunk(CellUtils.minHeight);\n      });\n    };\n    var getRawHeights = function (warehouse, direction) {\n      return getHeightFrom(warehouse, direction, getRawH, getDeduced);\n    };\n    var ColumnSizes = {\n      getRawWidths: getRawWidths,\n      getPixelWidths: getPixelWidths,\n      getPercentageWidths: getPercentageWidths,\n      getPixelHeights: getPixelHeights,\n      getRawHeights: getRawHeights\n    };\n\n    var total = function (start, end, measures) {\n      var r = 0;\n      for (var i = start; i < end; i++) {\n        r += measures[i] !== undefined ? measures[i] : 0;\n      }\n      return r;\n    };\n    var recalculateWidth = function (warehouse, widths) {\n      var all = Warehouse.justCells(warehouse);\n      return map(all, function (cell) {\n        var width = total(cell.column(), cell.column() + cell.colspan(), widths);\n        return {\n          element: cell.element,\n          width: constant(width),\n          colspan: cell.colspan\n        };\n      });\n    };\n    var recalculateHeight = function (warehouse, heights) {\n      var all = Warehouse.justCells(warehouse);\n      return map(all, function (cell) {\n        var height = total(cell.row(), cell.row() + cell.rowspan(), heights);\n        return {\n          element: cell.element,\n          height: constant(height),\n          rowspan: cell.rowspan\n        };\n      });\n    };\n    var matchRowHeight = function (warehouse, heights) {\n      return map(warehouse.all(), function (row, i) {\n        return {\n          element: row.element,\n          height: constant(heights[i])\n        };\n      });\n    };\n    var Recalculations = {\n      recalculateWidth: recalculateWidth,\n      recalculateHeight: recalculateHeight,\n      matchRowHeight: matchRowHeight\n    };\n\n    var percentageSize = function (width, element) {\n      var floatWidth = parseFloat(width);\n      var pixelWidth = get$5(element);\n      var getCellDelta = function (delta) {\n        return delta / pixelWidth * 100;\n      };\n      var singleColumnWidth = function (w, _delta) {\n        return [100 - w];\n      };\n      var minCellWidth = function () {\n        return CellUtils.minWidth() / pixelWidth * 100;\n      };\n      var setTableWidth = function (table, _newWidths, delta) {\n        var total = floatWidth + delta;\n        Sizes.setPercentageWidth(table, total);\n      };\n      return {\n        width: constant(floatWidth),\n        pixelWidth: constant(pixelWidth),\n        getWidths: ColumnSizes.getPercentageWidths,\n        getCellDelta: getCellDelta,\n        singleColumnWidth: singleColumnWidth,\n        minCellWidth: minCellWidth,\n        setElementWidth: Sizes.setPercentageWidth,\n        setTableWidth: setTableWidth\n      };\n    };\n    var pixelSize = function (width) {\n      var intWidth = parseInt(width, 10);\n      var getCellDelta = identity;\n      var singleColumnWidth = function (w, delta) {\n        var newNext = Math.max(CellUtils.minWidth(), w + delta);\n        return [newNext - w];\n      };\n      var setTableWidth = function (table, newWidths, _delta) {\n        var total = foldr(newWidths, function (b, a) {\n          return b + a;\n        }, 0);\n        Sizes.setPixelWidth(table, total);\n      };\n      return {\n        width: constant(intWidth),\n        pixelWidth: constant(intWidth),\n        getWidths: ColumnSizes.getPixelWidths,\n        getCellDelta: getCellDelta,\n        singleColumnWidth: singleColumnWidth,\n        minCellWidth: CellUtils.minWidth,\n        setElementWidth: Sizes.setPixelWidth,\n        setTableWidth: setTableWidth\n      };\n    };\n    var chooseSize = function (element, width) {\n      if (Sizes.percentageBasedSizeRegex().test(width)) {\n        var percentMatch = Sizes.percentageBasedSizeRegex().exec(width);\n        return percentageSize(percentMatch[1], element);\n      } else if (Sizes.pixelBasedSizeRegex().test(width)) {\n        var pixelMatch = Sizes.pixelBasedSizeRegex().exec(width);\n        return pixelSize(pixelMatch[1]);\n      } else {\n        var fallbackWidth = get$5(element);\n        return pixelSize(fallbackWidth);\n      }\n    };\n    var getTableSize = function (element) {\n      var width = Sizes.getRawWidth(element);\n      return width.fold(function () {\n        var fallbackWidth = get$5(element);\n        return pixelSize(fallbackWidth);\n      }, function (w) {\n        return chooseSize(element, w);\n      });\n    };\n    var TableSize = { getTableSize: getTableSize };\n\n    var getWarehouse$1 = function (list) {\n      return Warehouse.generate(list);\n    };\n    var sumUp = function (newSize) {\n      return foldr(newSize, function (b, a) {\n        return b + a;\n      }, 0);\n    };\n    var getTableWarehouse = function (table) {\n      var list = DetailsList.fromTable(table);\n      return getWarehouse$1(list);\n    };\n    var adjustWidth = function (table, delta, index, direction) {\n      var tableSize = TableSize.getTableSize(table);\n      var step = tableSize.getCellDelta(delta);\n      var warehouse = getTableWarehouse(table);\n      var widths = tableSize.getWidths(warehouse, direction, tableSize);\n      var deltas = Deltas.determine(widths, index, step, tableSize);\n      var newWidths = map(deltas, function (dx, i) {\n        return dx + widths[i];\n      });\n      var newSizes = Recalculations.recalculateWidth(warehouse, newWidths);\n      each(newSizes, function (cell) {\n        tableSize.setElementWidth(cell.element(), cell.width());\n      });\n      if (index === warehouse.grid().columns() - 1) {\n        tableSize.setTableWidth(table, newWidths, step);\n      }\n    };\n    var adjustHeight = function (table, delta, index, direction) {\n      var warehouse = getTableWarehouse(table);\n      var heights = ColumnSizes.getPixelHeights(warehouse, direction);\n      var newHeights = map(heights, function (dy, i) {\n        return index === i ? Math.max(delta + dy, CellUtils.minHeight()) : dy;\n      });\n      var newCellSizes = Recalculations.recalculateHeight(warehouse, newHeights);\n      var newRowSizes = Recalculations.matchRowHeight(warehouse, newHeights);\n      each(newRowSizes, function (row) {\n        Sizes.setHeight(row.element(), row.height());\n      });\n      each(newCellSizes, function (cell) {\n        Sizes.setHeight(cell.element(), cell.height());\n      });\n      var total = sumUp(newHeights);\n      Sizes.setHeight(table, total);\n    };\n    var adjustWidthTo = function (table, list, direction) {\n      var tableSize = TableSize.getTableSize(table);\n      var warehouse = getWarehouse$1(list);\n      var widths = tableSize.getWidths(warehouse, direction, tableSize);\n      var newSizes = Recalculations.recalculateWidth(warehouse, widths);\n      each(newSizes, function (cell) {\n        tableSize.setElementWidth(cell.element(), cell.width());\n      });\n      var total = foldr(widths, function (b, a) {\n        return a + b;\n      }, 0);\n      if (newSizes.length > 0) {\n        tableSize.setTableWidth(table, total);\n      }\n    };\n    var Adjustments = {\n      adjustWidth: adjustWidth,\n      adjustHeight: adjustHeight,\n      adjustWidthTo: adjustWidthTo\n    };\n\n    var base = function (handleUnsupported, required) {\n      return baseWith(handleUnsupported, required, {\n        validate: isFunction,\n        label: 'function'\n      });\n    };\n    var baseWith = function (handleUnsupported, required, pred) {\n      if (required.length === 0)\n        throw new Error('You must specify at least one required field.');\n      validateStrArr('required', required);\n      checkDupes(required);\n      return function (obj) {\n        var keys$1 = keys(obj);\n        var allReqd = forall(required, function (req) {\n          return contains(keys$1, req);\n        });\n        if (!allReqd)\n          reqMessage(required, keys$1);\n        handleUnsupported(required, keys$1);\n        var invalidKeys = filter(required, function (key) {\n          return !pred.validate(obj[key], key);\n        });\n        if (invalidKeys.length > 0)\n          invalidTypeMessage(invalidKeys, pred.label);\n        return obj;\n      };\n    };\n    var handleExact = function (required, keys) {\n      var unsupported = filter(keys, function (key) {\n        return !contains(required, key);\n      });\n      if (unsupported.length > 0)\n        unsuppMessage(unsupported);\n    };\n    var exactly = function (required) {\n      return base(handleExact, required);\n    };\n\n    var elementToData = function (element) {\n      var colspan = has$1(element, 'colspan') ? parseInt(get$1(element, 'colspan'), 10) : 1;\n      var rowspan = has$1(element, 'rowspan') ? parseInt(get$1(element, 'rowspan'), 10) : 1;\n      return {\n        element: constant(element),\n        colspan: constant(colspan),\n        rowspan: constant(rowspan)\n      };\n    };\n    var modification = function (generators, _toData) {\n      contract(generators);\n      var position = Cell(Option.none());\n      var toData = _toData !== undefined ? _toData : elementToData;\n      var nu = function (data) {\n        return generators.cell(data);\n      };\n      var nuFrom = function (element) {\n        var data = toData(element);\n        return nu(data);\n      };\n      var add = function (element) {\n        var replacement = nuFrom(element);\n        if (position.get().isNone()) {\n          position.set(Option.some(replacement));\n        }\n        recent = Option.some({\n          item: element,\n          replacement: replacement\n        });\n        return replacement;\n      };\n      var recent = Option.none();\n      var getOrInit = function (element, comparator) {\n        return recent.fold(function () {\n          return add(element);\n        }, function (p) {\n          return comparator(element, p.item) ? p.replacement : add(element);\n        });\n      };\n      return {\n        getOrInit: getOrInit,\n        cursor: position.get\n      };\n    };\n    var transform = function (scope, tag) {\n      return function (generators) {\n        var position = Cell(Option.none());\n        contract(generators);\n        var list = [];\n        var find$1 = function (element, comparator) {\n          return find(list, function (x) {\n            return comparator(x.item, element);\n          });\n        };\n        var makeNew = function (element) {\n          var cell = generators.replace(element, tag, { scope: scope });\n          list.push({\n            item: element,\n            sub: cell\n          });\n          if (position.get().isNone()) {\n            position.set(Option.some(cell));\n          }\n          return cell;\n        };\n        var replaceOrInit = function (element, comparator) {\n          return find$1(element, comparator).fold(function () {\n            return makeNew(element);\n          }, function (p) {\n            return comparator(element, p.item) ? p.sub : makeNew(element);\n          });\n        };\n        return {\n          replaceOrInit: replaceOrInit,\n          cursor: position.get\n        };\n      };\n    };\n    var merging = function (generators) {\n      contract(generators);\n      var position = Cell(Option.none());\n      var combine = function (cell) {\n        if (position.get().isNone()) {\n          position.set(Option.some(cell));\n        }\n        return function () {\n          var raw = generators.cell({\n            element: constant(cell),\n            colspan: constant(1),\n            rowspan: constant(1)\n          });\n          remove$1(raw, 'width');\n          remove$1(cell, 'width');\n          return raw;\n        };\n      };\n      return {\n        combine: combine,\n        cursor: position.get\n      };\n    };\n    var contract = exactly([\n      'cell',\n      'row',\n      'replace',\n      'gap'\n    ]);\n    var Generators = {\n      modification: modification,\n      transform: transform,\n      merging: merging\n    };\n\n    var blockList = [\n      'body',\n      'p',\n      'div',\n      'article',\n      'aside',\n      'figcaption',\n      'figure',\n      'footer',\n      'header',\n      'nav',\n      'section',\n      'ol',\n      'ul',\n      'table',\n      'thead',\n      'tfoot',\n      'tbody',\n      'caption',\n      'tr',\n      'td',\n      'th',\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6',\n      'blockquote',\n      'pre',\n      'address'\n    ];\n    var isList = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'ol',\n        'ul'\n      ], tagName);\n    };\n    var isBlock = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains(blockList, tagName);\n    };\n    var isFormatting = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'address',\n        'pre',\n        'p',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n      ], tagName);\n    };\n    var isHeading = function (universe, item) {\n      var tagName = universe.property().name(item);\n      return contains([\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'h6'\n      ], tagName);\n    };\n    var isContainer = function (universe, item) {\n      return contains([\n        'div',\n        'li',\n        'td',\n        'th',\n        'blockquote',\n        'body',\n        'caption'\n      ], universe.property().name(item));\n    };\n    var isEmptyTag = function (universe, item) {\n      return contains([\n        'br',\n        'img',\n        'hr',\n        'input'\n      ], universe.property().name(item));\n    };\n    var isFrame = function (universe, item) {\n      return universe.property().name(item) === 'iframe';\n    };\n    var isInline = function (universe, item) {\n      return !(isBlock(universe, item) || isEmptyTag(universe, item)) && universe.property().name(item) !== 'li';\n    };\n    var Structure = {\n      isBlock: isBlock,\n      isList: isList,\n      isFormatting: isFormatting,\n      isHeading: isHeading,\n      isContainer: isContainer,\n      isEmptyTag: isEmptyTag,\n      isFrame: isFrame,\n      isInline: isInline\n    };\n\n    var universe$1 = DomUniverse();\n    var isBlock$1 = function (element) {\n      return Structure.isBlock(universe$1, element);\n    };\n    var isList$1 = function (element) {\n      return Structure.isList(universe$1, element);\n    };\n    var isFormatting$1 = function (element) {\n      return Structure.isFormatting(universe$1, element);\n    };\n    var isHeading$1 = function (element) {\n      return Structure.isHeading(universe$1, element);\n    };\n    var isContainer$1 = function (element) {\n      return Structure.isContainer(universe$1, element);\n    };\n    var isEmptyTag$1 = function (element) {\n      return Structure.isEmptyTag(universe$1, element);\n    };\n    var isFrame$1 = function (element) {\n      return Structure.isFrame(universe$1, element);\n    };\n    var isInline$1 = function (element) {\n      return Structure.isInline(universe$1, element);\n    };\n    var DomStructure = {\n      isBlock: isBlock$1,\n      isList: isList$1,\n      isFormatting: isFormatting$1,\n      isHeading: isHeading$1,\n      isContainer: isContainer$1,\n      isEmptyTag: isEmptyTag$1,\n      isFrame: isFrame$1,\n      isInline: isInline$1\n    };\n\n    var merge$3 = function (cells) {\n      var isBr = function (el) {\n        return name(el) === 'br';\n      };\n      var advancedBr = function (children) {\n        return forall(children, function (c) {\n          return isBr(c) || isText(c) && get$3(c).trim().length === 0;\n        });\n      };\n      var isListItem = function (el) {\n        return name(el) === 'li' || ancestor(el, DomStructure.isList).isSome();\n      };\n      var siblingIsBlock = function (el) {\n        return nextSibling(el).map(function (rightSibling) {\n          if (DomStructure.isBlock(rightSibling)) {\n            return true;\n          }\n          if (DomStructure.isEmptyTag(rightSibling)) {\n            return name(rightSibling) === 'img' ? false : true;\n          }\n        }).getOr(false);\n      };\n      var markCell = function (cell) {\n        return last$1(cell).bind(function (rightEdge) {\n          var rightSiblingIsBlock = siblingIsBlock(rightEdge);\n          return parent(rightEdge).map(function (parent) {\n            return rightSiblingIsBlock === true || isListItem(parent) || isBr(rightEdge) || DomStructure.isBlock(parent) && !eq(cell, parent) ? [] : [Element.fromTag('br')];\n          });\n        }).getOr([]);\n      };\n      var markContent = function () {\n        var content = bind(cells, function (cell) {\n          var children$1 = children(cell);\n          return advancedBr(children$1) ? [] : children$1.concat(markCell(cell));\n        });\n        return content.length === 0 ? [Element.fromTag('br')] : content;\n      };\n      var contents = markContent();\n      empty(cells[0]);\n      append$1(cells[0], contents);\n    };\n    var TableContent = { merge: merge$3 };\n\n    var prune = function (table) {\n      var cells = TableLookup.cells(table);\n      if (cells.length === 0) {\n        remove$2(table);\n      }\n    };\n    var outcome = Immutable('grid', 'cursor');\n    var elementFromGrid = function (grid, row, column) {\n      return findIn(grid, row, column).orThunk(function () {\n        return findIn(grid, 0, 0);\n      });\n    };\n    var findIn = function (grid, row, column) {\n      return Option.from(grid[row]).bind(function (r) {\n        return Option.from(r.cells()[column]).bind(function (c) {\n          return Option.from(c.element());\n        });\n      });\n    };\n    var bundle = function (grid, row, column) {\n      return outcome(grid, findIn(grid, row, column));\n    };\n    var uniqueRows = function (details) {\n      return foldl(details, function (rest, detail) {\n        return exists(rest, function (currentDetail) {\n          return currentDetail.row() === detail.row();\n        }) ? rest : rest.concat([detail]);\n      }, []).sort(function (detailA, detailB) {\n        return detailA.row() - detailB.row();\n      });\n    };\n    var uniqueColumns = function (details) {\n      return foldl(details, function (rest, detail) {\n        return exists(rest, function (currentDetail) {\n          return currentDetail.column() === detail.column();\n        }) ? rest : rest.concat([detail]);\n      }, []).sort(function (detailA, detailB) {\n        return detailA.column() - detailB.column();\n      });\n    };\n    var insertRowBefore = function (grid, detail, comparator, genWrappers) {\n      var example = detail.row();\n      var targetIndex = detail.row();\n      var newGrid = ModificationOperations.insertRowAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, targetIndex, detail.column());\n    };\n    var insertRowsBefore = function (grid, details, comparator, genWrappers) {\n      var example = details[0].row();\n      var targetIndex = details[0].row();\n      var rows = uniqueRows(details);\n      var newGrid = foldl(rows, function (newG, _row) {\n        return ModificationOperations.insertRowAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column());\n    };\n    var insertRowAfter = function (grid, detail, comparator, genWrappers) {\n      var example = detail.row();\n      var targetIndex = detail.row() + detail.rowspan();\n      var newGrid = ModificationOperations.insertRowAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, targetIndex, detail.column());\n    };\n    var insertRowsAfter = function (grid, details, comparator, genWrappers) {\n      var rows = uniqueRows(details);\n      var example = rows[rows.length - 1].row();\n      var targetIndex = rows[rows.length - 1].row() + rows[rows.length - 1].rowspan();\n      var newGrid = foldl(rows, function (newG, _row) {\n        return ModificationOperations.insertRowAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, targetIndex, details[0].column());\n    };\n    var insertColumnBefore = function (grid, detail, comparator, genWrappers) {\n      var example = detail.column();\n      var targetIndex = detail.column();\n      var newGrid = ModificationOperations.insertColumnAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), targetIndex);\n    };\n    var insertColumnsBefore = function (grid, details, comparator, genWrappers) {\n      var columns = uniqueColumns(details);\n      var example = columns[0].column();\n      var targetIndex = columns[0].column();\n      var newGrid = foldl(columns, function (newG, _row) {\n        return ModificationOperations.insertColumnAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row(), targetIndex);\n    };\n    var insertColumnAfter = function (grid, detail, comparator, genWrappers) {\n      var example = detail.column();\n      var targetIndex = detail.column() + detail.colspan();\n      var newGrid = ModificationOperations.insertColumnAt(grid, targetIndex, example, comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), targetIndex);\n    };\n    var insertColumnsAfter = function (grid, details, comparator, genWrappers) {\n      var example = details[details.length - 1].column();\n      var targetIndex = details[details.length - 1].column() + details[details.length - 1].colspan();\n      var columns = uniqueColumns(details);\n      var newGrid = foldl(columns, function (newG, _row) {\n        return ModificationOperations.insertColumnAt(newG, targetIndex, example, comparator, genWrappers.getOrInit);\n      }, grid);\n      return bundle(newGrid, details[0].row(), targetIndex);\n    };\n    var makeRowHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceRow(grid, detail.row(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var makeColumnHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceColumn(grid, detail.column(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var unmakeRowHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceRow(grid, detail.row(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var unmakeColumnHeader = function (grid, detail, comparator, genWrappers) {\n      var newGrid = TransformOperations.replaceColumn(grid, detail.column(), comparator, genWrappers.replaceOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var splitCellIntoColumns$1 = function (grid, detail, comparator, genWrappers) {\n      var newGrid = ModificationOperations.splitCellIntoColumns(grid, detail.row(), detail.column(), comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var splitCellIntoRows$1 = function (grid, detail, comparator, genWrappers) {\n      var newGrid = ModificationOperations.splitCellIntoRows(grid, detail.row(), detail.column(), comparator, genWrappers.getOrInit);\n      return bundle(newGrid, detail.row(), detail.column());\n    };\n    var eraseColumns = function (grid, details, comparator, _genWrappers) {\n      var columns = uniqueColumns(details);\n      var newGrid = ModificationOperations.deleteColumnsAt(grid, columns[0].column(), columns[columns.length - 1].column());\n      var cursor = elementFromGrid(newGrid, details[0].row(), details[0].column());\n      return outcome(newGrid, cursor);\n    };\n    var eraseRows = function (grid, details, comparator, _genWrappers) {\n      var rows = uniqueRows(details);\n      var newGrid = ModificationOperations.deleteRowsAt(grid, rows[0].row(), rows[rows.length - 1].row());\n      var cursor = elementFromGrid(newGrid, details[0].row(), details[0].column());\n      return outcome(newGrid, cursor);\n    };\n    var mergeCells = function (grid, mergable, comparator, _genWrappers) {\n      var cells = mergable.cells();\n      TableContent.merge(cells);\n      var newGrid = MergingOperations.merge(grid, mergable.bounds(), comparator, constant(cells[0]));\n      return outcome(newGrid, Option.from(cells[0]));\n    };\n    var unmergeCells = function (grid, unmergable, comparator, genWrappers) {\n      var newGrid = foldr(unmergable, function (b, cell) {\n        return MergingOperations.unmerge(b, cell, comparator, genWrappers.combine(cell));\n      }, grid);\n      return outcome(newGrid, Option.from(unmergable[0]));\n    };\n    var pasteCells = function (grid, pasteDetails, comparator, genWrappers) {\n      var gridify = function (table, generators) {\n        var list = DetailsList.fromTable(table);\n        var wh = Warehouse.generate(list);\n        return Transitions.toGrid(wh, generators, true);\n      };\n      var gridB = gridify(pasteDetails.clipboard(), pasteDetails.generators());\n      var startAddress = Structs.address(pasteDetails.row(), pasteDetails.column());\n      var mergedGrid = TableMerge.merge(startAddress, grid, gridB, pasteDetails.generators(), comparator);\n      return mergedGrid.fold(function () {\n        return outcome(grid, Option.some(pasteDetails.element()));\n      }, function (nuGrid) {\n        var cursor = elementFromGrid(nuGrid, pasteDetails.row(), pasteDetails.column());\n        return outcome(nuGrid, cursor);\n      });\n    };\n    var gridifyRows = function (rows, generators, example) {\n      var pasteDetails = DetailsList.fromPastedRows(rows, example);\n      var wh = Warehouse.generate(pasteDetails);\n      return Transitions.toGrid(wh, generators, true);\n    };\n    var pasteRowsBefore = function (grid, pasteDetails, comparator, genWrappers) {\n      var example = grid[pasteDetails.cells[0].row()];\n      var index = pasteDetails.cells[0].row();\n      var gridB = gridifyRows(pasteDetails.clipboard(), pasteDetails.generators(), example);\n      var mergedGrid = TableMerge.insert(index, grid, gridB, pasteDetails.generators(), comparator);\n      var cursor = elementFromGrid(mergedGrid, pasteDetails.cells[0].row(), pasteDetails.cells[0].column());\n      return outcome(mergedGrid, cursor);\n    };\n    var pasteRowsAfter = function (grid, pasteDetails, comparator, genWrappers) {\n      var example = grid[pasteDetails.cells[0].row()];\n      var index = pasteDetails.cells[pasteDetails.cells.length - 1].row() + pasteDetails.cells[pasteDetails.cells.length - 1].rowspan();\n      var gridB = gridifyRows(pasteDetails.clipboard(), pasteDetails.generators(), example);\n      var mergedGrid = TableMerge.insert(index, grid, gridB, pasteDetails.generators(), comparator);\n      var cursor = elementFromGrid(mergedGrid, pasteDetails.cells[0].row(), pasteDetails.cells[0].column());\n      return outcome(mergedGrid, cursor);\n    };\n    var resize = Adjustments.adjustWidthTo;\n    var TableOperations = {\n      insertRowBefore: RunOperation.run(insertRowBefore, RunOperation.onCell, noop, noop, Generators.modification),\n      insertRowsBefore: RunOperation.run(insertRowsBefore, RunOperation.onCells, noop, noop, Generators.modification),\n      insertRowAfter: RunOperation.run(insertRowAfter, RunOperation.onCell, noop, noop, Generators.modification),\n      insertRowsAfter: RunOperation.run(insertRowsAfter, RunOperation.onCells, noop, noop, Generators.modification),\n      insertColumnBefore: RunOperation.run(insertColumnBefore, RunOperation.onCell, resize, noop, Generators.modification),\n      insertColumnsBefore: RunOperation.run(insertColumnsBefore, RunOperation.onCells, resize, noop, Generators.modification),\n      insertColumnAfter: RunOperation.run(insertColumnAfter, RunOperation.onCell, resize, noop, Generators.modification),\n      insertColumnsAfter: RunOperation.run(insertColumnsAfter, RunOperation.onCells, resize, noop, Generators.modification),\n      splitCellIntoColumns: RunOperation.run(splitCellIntoColumns$1, RunOperation.onCell, resize, noop, Generators.modification),\n      splitCellIntoRows: RunOperation.run(splitCellIntoRows$1, RunOperation.onCell, noop, noop, Generators.modification),\n      eraseColumns: RunOperation.run(eraseColumns, RunOperation.onCells, resize, prune, Generators.modification),\n      eraseRows: RunOperation.run(eraseRows, RunOperation.onCells, noop, prune, Generators.modification),\n      makeColumnHeader: RunOperation.run(makeColumnHeader, RunOperation.onCell, noop, noop, Generators.transform('row', 'th')),\n      unmakeColumnHeader: RunOperation.run(unmakeColumnHeader, RunOperation.onCell, noop, noop, Generators.transform(null, 'td')),\n      makeRowHeader: RunOperation.run(makeRowHeader, RunOperation.onCell, noop, noop, Generators.transform('col', 'th')),\n      unmakeRowHeader: RunOperation.run(unmakeRowHeader, RunOperation.onCell, noop, noop, Generators.transform(null, 'td')),\n      mergeCells: RunOperation.run(mergeCells, RunOperation.onMergable, noop, noop, Generators.merging),\n      unmergeCells: RunOperation.run(unmergeCells, RunOperation.onUnmergable, resize, noop, Generators.merging),\n      pasteCells: RunOperation.run(pasteCells, RunOperation.onPaste, resize, noop, Generators.modification),\n      pasteRowsBefore: RunOperation.run(pasteRowsBefore, RunOperation.onPasteRows, noop, noop, Generators.modification),\n      pasteRowsAfter: RunOperation.run(pasteRowsAfter, RunOperation.onPasteRows, noop, noop, Generators.modification)\n    };\n\n    var getBody$1 = function (editor) {\n      return Element.fromDom(editor.getBody());\n    };\n    var getPixelWidth$1 = function (elm) {\n      return elm.getBoundingClientRect().width;\n    };\n    var getPixelHeight = function (elm) {\n      return elm.getBoundingClientRect().height;\n    };\n    var getIsRoot = function (editor) {\n      return function (element) {\n        return eq(element, getBody$1(editor));\n      };\n    };\n    var removePxSuffix = function (size) {\n      return size ? size.replace(/px$/, '') : '';\n    };\n    var addSizeSuffix = function (size) {\n      if (/^[0-9]+$/.test(size)) {\n        size += 'px';\n      }\n      return size;\n    };\n    var removeDataStyle = function (table) {\n      var dataStyleCells = descendants$1(table, 'td[data-mce-style],th[data-mce-style]');\n      remove(table, 'data-mce-style');\n      each(dataStyleCells, function (cell) {\n        remove(cell, 'data-mce-style');\n      });\n    };\n\n    var getDirection = function (element) {\n      return get$2(element, 'direction') === 'rtl' ? 'rtl' : 'ltr';\n    };\n\n    var ltr$1 = { isRtl: constant(false) };\n    var rtl$1 = { isRtl: constant(true) };\n    var directionAt = function (element) {\n      var dir = getDirection(element);\n      return dir === 'rtl' ? rtl$1 : ltr$1;\n    };\n    var Direction = { directionAt: directionAt };\n\n    var defaultTableToolbar = 'tableprops tabledelete | tableinsertrowbefore tableinsertrowafter tabledeleterow | tableinsertcolbefore tableinsertcolafter tabledeletecol';\n    var defaultStyles = {\n      'border-collapse': 'collapse',\n      'width': '100%'\n    };\n    var defaultAttributes = { border: '1' };\n    var getDefaultAttributes = function (editor) {\n      return editor.getParam('table_default_attributes', defaultAttributes, 'object');\n    };\n    var getDefaultStyles = function (editor) {\n      return editor.getParam('table_default_styles', defaultStyles, 'object');\n    };\n    var hasTableResizeBars = function (editor) {\n      return editor.getParam('table_resize_bars', true, 'boolean');\n    };\n    var hasTabNavigation = function (editor) {\n      return editor.getParam('table_tab_navigation', true, 'boolean');\n    };\n    var hasAdvancedCellTab = function (editor) {\n      return editor.getParam('table_cell_advtab', true, 'boolean');\n    };\n    var hasAdvancedRowTab = function (editor) {\n      return editor.getParam('table_row_advtab', true, 'boolean');\n    };\n    var hasAdvancedTableTab = function (editor) {\n      return editor.getParam('table_advtab', true, 'boolean');\n    };\n    var hasAppearanceOptions = function (editor) {\n      return editor.getParam('table_appearance_options', true, 'boolean');\n    };\n    var hasTableGrid = function (editor) {\n      return editor.getParam('table_grid', true, 'boolean');\n    };\n    var shouldStyleWithCss = function (editor) {\n      return editor.getParam('table_style_by_css', false, 'boolean');\n    };\n    var getCellClassList = function (editor) {\n      return editor.getParam('table_cell_class_list', [], 'array');\n    };\n    var getRowClassList = function (editor) {\n      return editor.getParam('table_row_class_list', [], 'array');\n    };\n    var getTableClassList = function (editor) {\n      return editor.getParam('table_class_list', [], 'array');\n    };\n    var isPixelsForced = function (editor) {\n      return editor.getParam('table_responsive_width') === false;\n    };\n    var getToolbar = function (editor) {\n      return editor.getParam('table_toolbar', defaultTableToolbar);\n    };\n    var getCloneElements = function (editor) {\n      var cloneElements = editor.getParam('table_clone_elements');\n      if (isString(cloneElements)) {\n        return Option.some(cloneElements.split(/[ ,]/));\n      } else if (Array.isArray(cloneElements)) {\n        return Option.some(cloneElements);\n      } else {\n        return Option.none();\n      }\n    };\n    var hasObjectResizing = function (editor) {\n      var objectResizing = editor.getParam('object_resizing', true);\n      return objectResizing === 'table' || objectResizing;\n    };\n\n    var fireNewRow = function (editor, row) {\n      return editor.fire('newrow', { node: row });\n    };\n    var fireNewCell = function (editor, cell) {\n      return editor.fire('newcell', { node: cell });\n    };\n    var fireObjectResizeStart = function (editor, target, width, height) {\n      editor.fire('ObjectResizeStart', {\n        target: target,\n        width: width,\n        height: height\n      });\n    };\n    var fireObjectResized = function (editor, target, width, height) {\n      editor.fire('ObjectResized', {\n        target: target,\n        width: width,\n        height: height\n      });\n    };\n\n    var TableActions = function (editor, lazyWire) {\n      var isTableBody = function (editor) {\n        return name(getBody$1(editor)) === 'table';\n      };\n      var lastRowGuard = function (table) {\n        var size = TableGridSize.getGridSize(table);\n        return isTableBody(editor) === false || size.rows() > 1;\n      };\n      var lastColumnGuard = function (table) {\n        var size = TableGridSize.getGridSize(table);\n        return isTableBody(editor) === false || size.columns() > 1;\n      };\n      var cloneFormats = getCloneElements(editor);\n      var execute = function (operation, guard, mutate, lazyWire) {\n        return function (table, target) {\n          removeDataStyle(table);\n          var wire = lazyWire();\n          var doc = Element.fromDom(editor.getDoc());\n          var direction = TableDirection(Direction.directionAt);\n          var generators = TableFill.cellOperations(mutate, doc, cloneFormats);\n          return guard(table) ? operation(wire, table, target, generators, direction).bind(function (result) {\n            each(result.newRows(), function (row) {\n              fireNewRow(editor, row.dom());\n            });\n            each(result.newCells(), function (cell) {\n              fireNewCell(editor, cell.dom());\n            });\n            return result.cursor().map(function (cell) {\n              var rng = editor.dom.createRng();\n              rng.setStart(cell.dom(), 0);\n              rng.setEnd(cell.dom(), 0);\n              return rng;\n            });\n          }) : Option.none();\n        };\n      };\n      var deleteRow = execute(TableOperations.eraseRows, lastRowGuard, noop, lazyWire);\n      var deleteColumn = execute(TableOperations.eraseColumns, lastColumnGuard, noop, lazyWire);\n      var insertRowsBefore = execute(TableOperations.insertRowsBefore, always, noop, lazyWire);\n      var insertRowsAfter = execute(TableOperations.insertRowsAfter, always, noop, lazyWire);\n      var insertColumnsBefore = execute(TableOperations.insertColumnsBefore, always, CellMutations.halve, lazyWire);\n      var insertColumnsAfter = execute(TableOperations.insertColumnsAfter, always, CellMutations.halve, lazyWire);\n      var mergeCells = execute(TableOperations.mergeCells, always, noop, lazyWire);\n      var unmergeCells = execute(TableOperations.unmergeCells, always, noop, lazyWire);\n      var pasteRowsBefore = execute(TableOperations.pasteRowsBefore, always, noop, lazyWire);\n      var pasteRowsAfter = execute(TableOperations.pasteRowsAfter, always, noop, lazyWire);\n      var pasteCells = execute(TableOperations.pasteCells, always, noop, lazyWire);\n      return {\n        deleteRow: deleteRow,\n        deleteColumn: deleteColumn,\n        insertRowsBefore: insertRowsBefore,\n        insertRowsAfter: insertRowsAfter,\n        insertColumnsBefore: insertColumnsBefore,\n        insertColumnsAfter: insertColumnsAfter,\n        mergeCells: mergeCells,\n        unmergeCells: unmergeCells,\n        pasteRowsBefore: pasteRowsBefore,\n        pasteRowsAfter: pasteRowsAfter,\n        pasteCells: pasteCells\n      };\n    };\n\n    var copyRows = function (table, target, generators) {\n      var list = DetailsList.fromTable(table);\n      var house = Warehouse.generate(list);\n      var details = RunOperation.onCells(house, target);\n      return details.map(function (selectedCells) {\n        var grid = Transitions.toGrid(house, generators, false);\n        var slicedGrid = grid.slice(selectedCells[0].row(), selectedCells[selectedCells.length - 1].row() + selectedCells[selectedCells.length - 1].rowspan());\n        var slicedDetails = RunOperation.toDetailList(slicedGrid, generators);\n        return Redraw.copy(slicedDetails);\n      });\n    };\n    var CopyRows = { copyRows: copyRows };\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getTDTHOverallStyle = function (dom, elm, name) {\n      var cells = dom.select('td,th', elm);\n      var firstChildStyle;\n      var checkChildren = function (firstChildStyle, elms) {\n        for (var i = 0; i < elms.length; i++) {\n          var currentStyle = dom.getStyle(elms[i], name);\n          if (typeof firstChildStyle === 'undefined') {\n            firstChildStyle = currentStyle;\n          }\n          if (firstChildStyle !== currentStyle) {\n            return '';\n          }\n        }\n        return firstChildStyle;\n      };\n      firstChildStyle = checkChildren(firstChildStyle, cells);\n      return firstChildStyle;\n    };\n    var applyAlign = function (editor, elm, name) {\n      if (name) {\n        editor.formatter.apply('align' + name, {}, elm);\n      }\n    };\n    var applyVAlign = function (editor, elm, name) {\n      if (name) {\n        editor.formatter.apply('valign' + name, {}, elm);\n      }\n    };\n    var unApplyAlign = function (editor, elm) {\n      global$1.each('left center right'.split(' '), function (name) {\n        editor.formatter.remove('align' + name, {}, elm);\n      });\n    };\n    var unApplyVAlign = function (editor, elm) {\n      global$1.each('top middle bottom'.split(' '), function (name) {\n        editor.formatter.remove('valign' + name, {}, elm);\n      });\n    };\n    var Styles$1 = {\n      applyAlign: applyAlign,\n      applyVAlign: applyVAlign,\n      unApplyAlign: unApplyAlign,\n      unApplyVAlign: unApplyVAlign,\n      getTDTHOverallStyle: getTDTHOverallStyle\n    };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var buildListItems = function (inputList, itemCallback, startItems) {\n      var appendItems = function (values, output) {\n        output = output || [];\n        global$1.each(values, function (item) {\n          var menuItem = { text: item.text || item.title };\n          if (item.menu) {\n            menuItem.menu = appendItems(item.menu);\n          } else {\n            menuItem.value = item.value;\n            if (itemCallback) {\n              itemCallback(menuItem);\n            }\n          }\n          output.push(menuItem);\n        });\n        return output;\n      };\n      return appendItems(inputList, startItems || []);\n    };\n    var extractAdvancedStyles = function (dom, elm) {\n      var rgbToHex = function (value) {\n        return startsWith(value, 'rgb') ? dom.toHex(value) : value;\n      };\n      var borderStyle = getRaw(Element.fromDom(elm), 'border-style').getOr('');\n      var borderColor = getRaw(Element.fromDom(elm), 'border-color').map(rgbToHex).getOr('');\n      var bgColor = getRaw(Element.fromDom(elm), 'background-color').map(rgbToHex).getOr('');\n      return {\n        borderstyle: borderStyle,\n        bordercolor: borderColor,\n        backgroundcolor: bgColor\n      };\n    };\n    var getSharedValues = function (data) {\n      var baseData = data[0];\n      var comparisonData = data.slice(1);\n      var keys$1 = keys(baseData);\n      each(comparisonData, function (items) {\n        each(keys$1, function (key) {\n          each$1(items, function (itemValue, itemKey, _) {\n            var comparisonValue = baseData[key];\n            if (comparisonValue !== '' && key === itemKey) {\n              if (comparisonValue !== itemValue) {\n                baseData[key] = '';\n              }\n            }\n          });\n        });\n      });\n      return baseData;\n    };\n    var getAdvancedTab = function () {\n      var items = [\n        {\n          name: 'borderstyle',\n          type: 'selectbox',\n          label: 'Border style',\n          items: [\n            {\n              text: 'Select...',\n              value: ''\n            },\n            {\n              text: 'Solid',\n              value: 'solid'\n            },\n            {\n              text: 'Dotted',\n              value: 'dotted'\n            },\n            {\n              text: 'Dashed',\n              value: 'dashed'\n            },\n            {\n              text: 'Double',\n              value: 'double'\n            },\n            {\n              text: 'Groove',\n              value: 'groove'\n            },\n            {\n              text: 'Ridge',\n              value: 'ridge'\n            },\n            {\n              text: 'Inset',\n              value: 'inset'\n            },\n            {\n              text: 'Outset',\n              value: 'outset'\n            },\n            {\n              text: 'None',\n              value: 'none'\n            },\n            {\n              text: 'Hidden',\n              value: 'hidden'\n            }\n          ]\n        },\n        {\n          name: 'bordercolor',\n          type: 'colorinput',\n          label: 'Border color'\n        },\n        {\n          name: 'backgroundcolor',\n          type: 'colorinput',\n          label: 'Background color'\n        }\n      ];\n      return {\n        title: 'Advanced',\n        items: items\n      };\n    };\n    var getAlignment = function (alignments, formatName, dataName, editor, elm) {\n      var alignmentData = {};\n      global$1.each(alignments.split(' '), function (name) {\n        if (editor.formatter.matchNode(elm, formatName + name)) {\n          alignmentData[dataName] = name;\n        }\n      });\n      if (!alignmentData[dataName]) {\n        alignmentData[dataName] = '';\n      }\n      return alignmentData;\n    };\n    var getHAlignment = curry(getAlignment, 'left center right');\n    var getVAlignment = curry(getAlignment, 'top middle bottom');\n    var extractDataFromSettings = function (editor, hasAdvTableTab) {\n      var style = getDefaultStyles(editor);\n      var attrs = getDefaultAttributes(editor);\n      var extractAdvancedStyleData = function (dom) {\n        var rgbToHex = function (value) {\n          return startsWith(value, 'rgb') ? dom.toHex(value) : value;\n        };\n        var borderStyle = get(style, 'border-style').getOr('');\n        var borderColor = get(style, 'border-color').getOr('');\n        var bgColor = get(style, 'background-color').getOr('');\n        return {\n          borderstyle: borderStyle,\n          bordercolor: rgbToHex(borderColor),\n          backgroundcolor: rgbToHex(bgColor)\n        };\n      };\n      var defaultData = {\n        height: '',\n        width: '100%',\n        cellspacing: '',\n        cellpadding: '',\n        caption: false,\n        class: '',\n        align: '',\n        border: ''\n      };\n      var getBorder = function () {\n        var borderWidth = style['border-width'];\n        if (shouldStyleWithCss(editor) && borderWidth) {\n          return { border: borderWidth };\n        }\n        return get(attrs, 'border').fold(function () {\n          return {};\n        }, function (border) {\n          return { border: border };\n        });\n      };\n      var dom = editor.dom;\n      var advStyle = hasAdvTableTab ? extractAdvancedStyleData(dom) : {};\n      var getCellPaddingCellSpacing = function () {\n        var spacing = get(style, 'border-spacing').or(get(attrs, 'cellspacing')).fold(function () {\n          return {};\n        }, function (cellspacing) {\n          return { cellspacing: cellspacing };\n        });\n        var padding = get(style, 'border-padding').or(get(attrs, 'cellpadding')).fold(function () {\n          return {};\n        }, function (cellpadding) {\n          return { cellpadding: cellpadding };\n        });\n        return __assign({}, spacing, padding);\n      };\n      var data = __assign({}, defaultData, style, attrs, advStyle, getBorder(), getCellPaddingCellSpacing());\n      return data;\n    };\n    var extractDataFromTableElement = function (editor, elm, hasAdvTableTab) {\n      var getBorder = function (dom, elm) {\n        var optBorderWidth = getRaw(Element.fromDom(elm), 'border-width');\n        if (shouldStyleWithCss(editor) && optBorderWidth.isSome()) {\n          return optBorderWidth.getOr('');\n        }\n        return dom.getAttrib(elm, 'border') || Styles$1.getTDTHOverallStyle(editor.dom, elm, 'border-width') || Styles$1.getTDTHOverallStyle(editor.dom, elm, 'border');\n      };\n      var dom = editor.dom;\n      var data = __assign({\n        width: dom.getStyle(elm, 'width') || dom.getAttrib(elm, 'width'),\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        cellspacing: dom.getStyle(elm, 'border-spacing') || dom.getAttrib(elm, 'cellspacing'),\n        cellpadding: dom.getAttrib(elm, 'cellpadding') || Styles$1.getTDTHOverallStyle(editor.dom, elm, 'padding'),\n        border: getBorder(dom, elm),\n        caption: !!dom.select('caption', elm)[0],\n        class: dom.getAttrib(elm, 'class', '')\n      }, getHAlignment('align', 'align', editor, elm), hasAdvTableTab ? extractAdvancedStyles(dom, elm) : {});\n      return data;\n    };\n    var extractDataFromRowElement = function (editor, elm, hasAdvancedRowTab) {\n      var dom = editor.dom;\n      var data = __assign({\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        scope: dom.getAttrib(elm, 'scope'),\n        class: dom.getAttrib(elm, 'class', ''),\n        align: '',\n        type: elm.parentNode.nodeName.toLowerCase()\n      }, getHAlignment('align', 'align', editor, elm), hasAdvancedRowTab ? extractAdvancedStyles(dom, elm) : {});\n      return data;\n    };\n    var extractDataFromCellElement = function (editor, elm, hasAdvancedCellTab) {\n      var dom = editor.dom;\n      var data = __assign({\n        width: dom.getStyle(elm, 'width') || dom.getAttrib(elm, 'width'),\n        height: dom.getStyle(elm, 'height') || dom.getAttrib(elm, 'height'),\n        scope: dom.getAttrib(elm, 'scope'),\n        celltype: elm.nodeName.toLowerCase(),\n        class: dom.getAttrib(elm, 'class', '')\n      }, getHAlignment('align', 'halign', editor, elm), getVAlignment('valign', 'valign', editor, elm), hasAdvancedCellTab ? extractAdvancedStyles(dom, elm) : {});\n      return data;\n    };\n    var Helpers = {\n      buildListItems: buildListItems,\n      extractAdvancedStyles: extractAdvancedStyles,\n      getSharedValues: getSharedValues,\n      getAdvancedTab: getAdvancedTab,\n      extractDataFromTableElement: extractDataFromTableElement,\n      extractDataFromRowElement: extractDataFromRowElement,\n      extractDataFromCellElement: extractDataFromCellElement,\n      extractDataFromSettings: extractDataFromSettings\n    };\n\n    var getClassList = function (editor) {\n      var rowClassList = getCellClassList(editor);\n      var classes = Helpers.buildListItems(rowClassList, function (item) {\n        if (item.value) {\n          item.textStyle = function () {\n            return editor.formatter.getCssText({\n              block: 'tr',\n              classes: [item.value]\n            });\n          };\n        }\n      });\n      if (rowClassList.length > 0) {\n        return Option.some({\n          name: 'class',\n          type: 'selectbox',\n          label: 'Class',\n          items: classes\n        });\n      }\n      return Option.none();\n    };\n    var children$3 = [\n      {\n        name: 'width',\n        type: 'input',\n        label: 'Width'\n      },\n      {\n        name: 'height',\n        type: 'input',\n        label: 'Height'\n      },\n      {\n        name: 'celltype',\n        type: 'selectbox',\n        label: 'Cell type',\n        items: [\n          {\n            text: 'Cell',\n            value: 'td'\n          },\n          {\n            text: 'Header cell',\n            value: 'th'\n          }\n        ]\n      },\n      {\n        name: 'scope',\n        type: 'selectbox',\n        label: 'Scope',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Row',\n            value: 'row'\n          },\n          {\n            text: 'Column',\n            value: 'col'\n          },\n          {\n            text: 'Row group',\n            value: 'rowgroup'\n          },\n          {\n            text: 'Column group',\n            value: 'colgroup'\n          }\n        ]\n      },\n      {\n        name: 'halign',\n        type: 'selectbox',\n        label: 'H Align',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Left',\n            value: 'left'\n          },\n          {\n            text: 'Center',\n            value: 'center'\n          },\n          {\n            text: 'Right',\n            value: 'right'\n          }\n        ]\n      },\n      {\n        name: 'valign',\n        type: 'selectbox',\n        label: 'V Align',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Top',\n            value: 'top'\n          },\n          {\n            text: 'Middle',\n            value: 'middle'\n          },\n          {\n            text: 'Bottom',\n            value: 'bottom'\n          }\n        ]\n      }\n    ];\n    var items = function (editor) {\n      return getClassList(editor).fold(function () {\n        return children$3;\n      }, function (classlist) {\n        return children$3.concat(classlist);\n      });\n    };\n    var CellDialogGeneralTab = { items: items };\n\n    var normal = function (dom, node) {\n      var setAttrib = function (attr, value) {\n        dom.setAttrib(node, attr, value);\n      };\n      var setStyle = function (prop, value) {\n        dom.setStyle(node, prop, value);\n      };\n      return {\n        setAttrib: setAttrib,\n        setStyle: setStyle\n      };\n    };\n    var ifTruthy = function (dom, node) {\n      var setAttrib = function (attr, value) {\n        if (value) {\n          dom.setAttrib(node, attr, value);\n        }\n      };\n      var setStyle = function (prop, value) {\n        if (value) {\n          dom.setStyle(node, prop, value);\n        }\n      };\n      return {\n        setAttrib: setAttrib,\n        setStyle: setStyle\n      };\n    };\n    var DomModifiers = {\n      normal: normal,\n      ifTruthy: ifTruthy\n    };\n\n    var updateSimpleProps = function (modifiers, data) {\n      modifiers.setAttrib('scope', data.scope);\n      modifiers.setAttrib('class', data.class);\n      modifiers.setStyle('width', addSizeSuffix(data.width));\n      modifiers.setStyle('height', addSizeSuffix(data.height));\n    };\n    var updateAdvancedProps = function (modifiers, data) {\n      modifiers.setStyle('background-color', data.backgroundcolor);\n      modifiers.setStyle('border-color', data.bordercolor);\n      modifiers.setStyle('border-style', data.borderstyle);\n    };\n    var applyToSingle = function (editor, cells, data) {\n      var dom = editor.dom;\n      var cellElm = data.celltype && cells[0].nodeName.toLowerCase() !== data.celltype ? dom.rename(cells[0], data.celltype) : cells[0];\n      var modifiers = DomModifiers.normal(dom, cellElm);\n      updateSimpleProps(modifiers, data);\n      if (hasAdvancedCellTab(editor)) {\n        updateAdvancedProps(modifiers, data);\n      }\n      Styles$1.unApplyAlign(editor, cellElm);\n      Styles$1.unApplyVAlign(editor, cellElm);\n      if (data.halign) {\n        Styles$1.applyAlign(editor, cellElm, data.halign);\n      }\n      if (data.valign) {\n        Styles$1.applyVAlign(editor, cellElm, data.valign);\n      }\n    };\n    var applyToMultiple = function (editor, cells, data) {\n      var dom = editor.dom;\n      global$1.each(cells, function (cellElm) {\n        if (data.celltype && cellElm.nodeName.toLowerCase() !== data.celltype) {\n          cellElm = dom.rename(cellElm, data.celltype);\n        }\n        var modifiers = DomModifiers.ifTruthy(dom, cellElm);\n        updateSimpleProps(modifiers, data);\n        if (hasAdvancedCellTab(editor)) {\n          updateAdvancedProps(modifiers, data);\n        }\n        if (data.halign) {\n          Styles$1.applyAlign(editor, cellElm, data.halign);\n        }\n        if (data.valign) {\n          Styles$1.applyVAlign(editor, cellElm, data.valign);\n        }\n      });\n    };\n    var onSubmitCellForm = function (editor, cells, api) {\n      var data = api.getData();\n      api.close();\n      editor.undoManager.transact(function () {\n        var applicator = cells.length === 1 ? applyToSingle : applyToMultiple;\n        applicator(editor, cells, data);\n        editor.focus();\n      });\n    };\n    var open = function (editor) {\n      var cellElm, cells = [];\n      cells = editor.dom.select('td[data-mce-selected],th[data-mce-selected]');\n      cellElm = editor.dom.getParent(editor.selection.getStart(), 'td,th');\n      if (!cells.length && cellElm) {\n        cells.push(cellElm);\n      }\n      cellElm = cellElm || cells[0];\n      if (!cellElm) {\n        return;\n      }\n      var cellsData = global$1.map(cells, function (cellElm) {\n        return Helpers.extractDataFromCellElement(editor, cellElm, hasAdvancedCellTab(editor));\n      });\n      var data = Helpers.getSharedValues(cellsData);\n      var dialogTabPanel = {\n        type: 'tabpanel',\n        tabs: [\n          {\n            title: 'General',\n            items: CellDialogGeneralTab.items(editor)\n          },\n          Helpers.getAdvancedTab()\n        ]\n      };\n      var dialogPanel = {\n        type: 'panel',\n        items: [{\n            type: 'grid',\n            columns: 2,\n            items: CellDialogGeneralTab.items(editor)\n          }]\n      };\n      editor.windowManager.open({\n        title: 'Cell Properties',\n        size: 'normal',\n        body: hasAdvancedCellTab(editor) ? dialogTabPanel : dialogPanel,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: data,\n        onSubmit: curry(onSubmitCellForm, editor, cells)\n      });\n    };\n    var CellDialog = { open: open };\n\n    var getClassList$1 = function (editor) {\n      var rowClassList = getRowClassList(editor);\n      var classes = Helpers.buildListItems(rowClassList, function (item) {\n        if (item.value) {\n          item.textStyle = function () {\n            return editor.formatter.getCssText({\n              block: 'tr',\n              classes: [item.value]\n            });\n          };\n        }\n      });\n      if (rowClassList.length > 0) {\n        return Option.some({\n          name: 'class',\n          type: 'selectbox',\n          label: 'Class',\n          items: classes\n        });\n      }\n      return Option.none();\n    };\n    var formChildren = [\n      {\n        type: 'selectbox',\n        name: 'type',\n        label: 'Row type',\n        items: [\n          {\n            text: 'Header',\n            value: 'thead'\n          },\n          {\n            text: 'Body',\n            value: 'tbody'\n          },\n          {\n            text: 'Footer',\n            value: 'tfoot'\n          }\n        ]\n      },\n      {\n        type: 'selectbox',\n        name: 'align',\n        label: 'Alignment',\n        items: [\n          {\n            text: 'None',\n            value: ''\n          },\n          {\n            text: 'Left',\n            value: 'left'\n          },\n          {\n            text: 'Center',\n            value: 'center'\n          },\n          {\n            text: 'Right',\n            value: 'right'\n          }\n        ]\n      },\n      {\n        label: 'Height',\n        name: 'height',\n        type: 'input'\n      }\n    ];\n    var items$1 = function (editor) {\n      return getClassList$1(editor).fold(function () {\n        return formChildren;\n      }, function (classes) {\n        return formChildren.concat(classes);\n      });\n    };\n    var RowDialogGeneralTab = { items: items$1 };\n\n    var switchRowType = function (dom, rowElm, toType) {\n      var tableElm = dom.getParent(rowElm, 'table');\n      var oldParentElm = rowElm.parentNode;\n      var parentElm = dom.select(toType, tableElm)[0];\n      if (!parentElm) {\n        parentElm = dom.create(toType);\n        if (tableElm.firstChild) {\n          if (tableElm.firstChild.nodeName === 'CAPTION') {\n            dom.insertAfter(parentElm, tableElm.firstChild);\n          } else {\n            tableElm.insertBefore(parentElm, tableElm.firstChild);\n          }\n        } else {\n          tableElm.appendChild(parentElm);\n        }\n      }\n      parentElm.appendChild(rowElm);\n      if (!oldParentElm.hasChildNodes()) {\n        dom.remove(oldParentElm);\n      }\n    };\n    var updateAdvancedProps$1 = function (modifiers, data) {\n      modifiers.setStyle('background-color', data.backgroundcolor);\n      modifiers.setStyle('border-color', data.bordercolor);\n      modifiers.setStyle('border-style', data.borderstyle);\n    };\n    var onSubmitRowForm = function (editor, rows, oldData, api) {\n      var dom = editor.dom;\n      var data = api.getData();\n      api.close();\n      var createModifier = rows.length === 1 ? DomModifiers.normal : DomModifiers.ifTruthy;\n      editor.undoManager.transact(function () {\n        global$1.each(rows, function (rowElm) {\n          if (data.type !== rowElm.parentNode.nodeName.toLowerCase()) {\n            switchRowType(editor.dom, rowElm, data.type);\n          }\n          var modifiers = createModifier(dom, rowElm);\n          modifiers.setAttrib('scope', data.scope);\n          modifiers.setAttrib('class', data.class);\n          modifiers.setStyle('height', addSizeSuffix(data.height));\n          if (hasAdvancedRowTab(editor)) {\n            updateAdvancedProps$1(modifiers, data);\n          }\n          if (data.align !== oldData.align) {\n            Styles$1.unApplyAlign(editor, rowElm);\n            Styles$1.applyAlign(editor, rowElm, data.align);\n          }\n        });\n        editor.focus();\n      });\n    };\n    var open$1 = function (editor) {\n      var dom = editor.dom;\n      var tableElm, cellElm, rowElm;\n      var rows = [];\n      tableElm = dom.getParent(editor.selection.getStart(), 'table');\n      if (!tableElm) {\n        return;\n      }\n      cellElm = dom.getParent(editor.selection.getStart(), 'td,th');\n      global$1.each(tableElm.rows, function (row) {\n        global$1.each(row.cells, function (cell) {\n          if ((dom.getAttrib(cell, 'data-mce-selected') || cell === cellElm) && rows.indexOf(row) < 0) {\n            rows.push(row);\n            return false;\n          }\n        });\n      });\n      rowElm = rows[0];\n      if (!rowElm) {\n        return;\n      }\n      var rowsData = global$1.map(rows, function (rowElm) {\n        return Helpers.extractDataFromRowElement(editor, rowElm, hasAdvancedRowTab(editor));\n      });\n      var data = Helpers.getSharedValues(rowsData);\n      var dialogTabPanel = {\n        type: 'tabpanel',\n        tabs: [\n          {\n            title: 'General',\n            items: RowDialogGeneralTab.items(editor)\n          },\n          Helpers.getAdvancedTab()\n        ]\n      };\n      var dialogPanel = {\n        type: 'panel',\n        items: [{\n            type: 'grid',\n            columns: 2,\n            items: RowDialogGeneralTab.items(editor)\n          }]\n      };\n      editor.windowManager.open({\n        title: 'Row Properties',\n        size: 'normal',\n        body: hasAdvancedRowTab(editor) ? dialogTabPanel : dialogPanel,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: data,\n        onSubmit: curry(onSubmitRowForm, editor, rows, data)\n      });\n    };\n    var RowDialog = { open: open$1 };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var DefaultRenderOptions = {\n      styles: {\n        'border-collapse': 'collapse',\n        'width': '100%'\n      },\n      attributes: { border: '1' },\n      percentages: true\n    };\n    var makeTable = function () {\n      return Element.fromTag('table');\n    };\n    var tableBody = function () {\n      return Element.fromTag('tbody');\n    };\n    var tableRow = function () {\n      return Element.fromTag('tr');\n    };\n    var tableHeaderCell = function () {\n      return Element.fromTag('th');\n    };\n    var tableCell = function () {\n      return Element.fromTag('td');\n    };\n    var render$1 = function (rows, columns, rowHeaders, columnHeaders, renderOpts) {\n      if (renderOpts === void 0) {\n        renderOpts = DefaultRenderOptions;\n      }\n      var table = makeTable();\n      setAll$1(table, renderOpts.styles);\n      setAll(table, renderOpts.attributes);\n      var tbody = tableBody();\n      append(table, tbody);\n      var trs = [];\n      for (var i = 0; i < rows; i++) {\n        var tr = tableRow();\n        for (var j = 0; j < columns; j++) {\n          var td = i < rowHeaders || j < columnHeaders ? tableHeaderCell() : tableCell();\n          if (j < columnHeaders) {\n            set(td, 'scope', 'row');\n          }\n          if (i < rowHeaders) {\n            set(td, 'scope', 'col');\n          }\n          append(td, Element.fromTag('br'));\n          if (renderOpts.percentages) {\n            set$1(td, 'width', 100 / columns + '%');\n          }\n          append(tr, td);\n        }\n        trs.push(tr);\n      }\n      append$1(tbody, trs);\n      return table;\n    };\n\n    var get$8 = function (element) {\n      return element.dom().innerHTML;\n    };\n    var getOuter$2 = function (element) {\n      var container = Element.fromTag('div');\n      var clone = Element.fromDom(element.dom().cloneNode(true));\n      append(container, clone);\n      return get$8(container);\n    };\n\n    var placeCaretInCell = function (editor, cell) {\n      editor.selection.select(cell.dom(), true);\n      editor.selection.collapse(true);\n    };\n    var selectFirstCellInTable = function (editor, tableElm) {\n      descendant$1(tableElm, 'td,th').each(curry(placeCaretInCell, editor));\n    };\n    var fireEvents = function (editor, table) {\n      each(descendants$1(table, 'tr'), function (row) {\n        fireNewRow(editor, row.dom());\n        each(descendants$1(row, 'th,td'), function (cell) {\n          fireNewCell(editor, cell.dom());\n        });\n      });\n    };\n    var isPercentage = function (width) {\n      return isString(width) && width.indexOf('%') !== -1;\n    };\n    var insert$1 = function (editor, columns, rows) {\n      var defaultStyles = getDefaultStyles(editor);\n      var options = {\n        styles: defaultStyles,\n        attributes: getDefaultAttributes(editor),\n        percentages: isPercentage(defaultStyles.width) && !isPixelsForced(editor)\n      };\n      var table = render$1(rows, columns, 0, 0, options);\n      set(table, 'data-mce-id', '__mce');\n      var html = getOuter$2(table);\n      editor.insertContent(html);\n      return descendant$1(getBody$1(editor), 'table[data-mce-id=\"__mce\"]').map(function (table) {\n        if (isPixelsForced(editor)) {\n          set$1(table, 'width', get$2(table, 'width'));\n        }\n        remove(table, 'data-mce-id');\n        fireEvents(editor, table);\n        selectFirstCellInTable(editor, table);\n        return table.dom();\n      }).getOr(null);\n    };\n    var InsertTable = { insert: insert$1 };\n\n    var styleTDTH = function (dom, elm, name, value) {\n      if (elm.tagName === 'TD' || elm.tagName === 'TH') {\n        dom.setStyle(elm, name, value);\n      } else {\n        if (elm.children) {\n          for (var i = 0; i < elm.children.length; i++) {\n            styleTDTH(dom, elm.children[i], name, value);\n          }\n        }\n      }\n    };\n    var applyDataToElement = function (editor, tableElm, data) {\n      var dom = editor.dom;\n      var attrs = {};\n      var styles = {};\n      attrs.class = data.class;\n      styles.height = addSizeSuffix(data.height);\n      if (dom.getAttrib(tableElm, 'width') && !shouldStyleWithCss(editor)) {\n        attrs.width = removePxSuffix(data.width);\n      } else {\n        styles.width = addSizeSuffix(data.width);\n      }\n      if (shouldStyleWithCss(editor)) {\n        styles['border-width'] = addSizeSuffix(data.border);\n        styles['border-spacing'] = addSizeSuffix(data.cellspacing);\n      } else {\n        attrs.border = data.border;\n        attrs.cellpadding = data.cellpadding;\n        attrs.cellspacing = data.cellspacing;\n      }\n      if (shouldStyleWithCss(editor) && tableElm.children) {\n        for (var i = 0; i < tableElm.children.length; i++) {\n          styleTDTH(dom, tableElm.children[i], {\n            'border-width': addSizeSuffix(data.border),\n            'padding': addSizeSuffix(data.cellpadding)\n          });\n          if (hasAdvancedTableTab(editor)) {\n            styleTDTH(dom, tableElm.children[i], { 'border-color': data.bordercolor });\n          }\n        }\n      }\n      if (hasAdvancedTableTab(editor)) {\n        styles['background-color'] = data.backgroundcolor;\n        styles['border-color'] = data.bordercolor;\n        styles['border-style'] = data.borderstyle;\n      }\n      attrs.style = dom.serializeStyle(merge(getDefaultStyles(editor), styles));\n      dom.setAttribs(tableElm, merge(getDefaultAttributes(editor), attrs));\n    };\n    var onSubmitTableForm = function (editor, tableElm, api) {\n      var dom = editor.dom;\n      var captionElm;\n      var data = api.getData();\n      api.close();\n      if (data.class === '') {\n        delete data.class;\n      }\n      editor.undoManager.transact(function () {\n        if (!tableElm) {\n          var cols = parseInt(data.cols, 10) || 1;\n          var rows = parseInt(data.rows, 10) || 1;\n          tableElm = InsertTable.insert(editor, cols, rows);\n        }\n        applyDataToElement(editor, tableElm, data);\n        captionElm = dom.select('caption', tableElm)[0];\n        if (captionElm && !data.caption) {\n          dom.remove(captionElm);\n        }\n        if (!captionElm && data.caption) {\n          captionElm = dom.create('caption');\n          captionElm.innerHTML = !global$2.ie ? '<br data-mce-bogus=\"1\"/>' : '\\xA0';\n          tableElm.insertBefore(captionElm, tableElm.firstChild);\n        }\n        if (data.align === '') {\n          Styles$1.unApplyAlign(editor, tableElm);\n        } else {\n          Styles$1.applyAlign(editor, tableElm, data.align);\n        }\n        editor.focus();\n        editor.addVisual();\n      });\n    };\n    var open$2 = function (editor, isNew) {\n      var dom = editor.dom;\n      var tableElm;\n      var data = Helpers.extractDataFromSettings(editor, hasAdvancedTableTab(editor));\n      if (isNew === false) {\n        tableElm = dom.getParent(editor.selection.getStart(), 'table');\n        if (tableElm) {\n          data = Helpers.extractDataFromTableElement(editor, tableElm, hasAdvancedTableTab(editor));\n        } else {\n          if (hasAdvancedTableTab(editor)) {\n            data.borderstyle = '';\n            data.bordercolor = '';\n            data.backgroundcolor = '';\n          }\n        }\n      } else {\n        data.cols = '1';\n        data.rows = '1';\n        if (hasAdvancedTableTab(editor)) {\n          data.borderstyle = '';\n          data.bordercolor = '';\n          data.backgroundcolor = '';\n        }\n      }\n      var hasClasses = getTableClassList(editor).length > 0;\n      if (hasClasses) {\n        if (data.class) {\n          data.class = data.class.replace(/\\s*mce\\-item\\-table\\s*/g, '');\n        }\n      }\n      var rowColCountItems = !isNew ? [] : [\n        {\n          type: 'input',\n          name: 'cols',\n          label: 'Cols'\n        },\n        {\n          type: 'input',\n          name: 'rows',\n          label: 'Rows'\n        }\n      ];\n      var alwaysItems = [\n        {\n          type: 'input',\n          name: 'width',\n          label: 'Width'\n        },\n        {\n          type: 'input',\n          name: 'height',\n          label: 'Height'\n        }\n      ];\n      var appearanceItems = hasAppearanceOptions(editor) ? [\n        {\n          type: 'input',\n          name: 'cellspacing',\n          label: 'Cell spacing'\n        },\n        {\n          type: 'input',\n          name: 'cellpadding',\n          label: 'Cell padding'\n        },\n        {\n          type: 'input',\n          name: 'border',\n          label: 'Border width'\n        },\n        {\n          type: 'label',\n          label: 'Caption',\n          items: [{\n              type: 'checkbox',\n              name: 'caption',\n              label: 'Show caption'\n            }]\n        }\n      ] : [];\n      var alignmentItem = [{\n          type: 'selectbox',\n          name: 'align',\n          label: 'Alignment',\n          items: [\n            {\n              text: 'None',\n              value: ''\n            },\n            {\n              text: 'Left',\n              value: 'left'\n            },\n            {\n              text: 'Center',\n              value: 'center'\n            },\n            {\n              text: 'Right',\n              value: 'right'\n            }\n          ]\n        }];\n      var classListItem = hasClasses ? [{\n          type: 'selectbox',\n          name: 'class',\n          label: 'Class',\n          items: Helpers.buildListItems(getTableClassList(editor), function (item) {\n            if (item.value) {\n              item.textStyle = function () {\n                return editor.formatter.getCssText({\n                  block: 'table',\n                  classes: [item.value]\n                });\n              };\n            }\n          })\n        }] : [];\n      var generalTabItems = rowColCountItems.concat(alwaysItems).concat(appearanceItems).concat(alignmentItem).concat(classListItem);\n      var generalPanel = {\n        type: 'grid',\n        columns: 2,\n        items: generalTabItems\n      };\n      var nonAdvancedForm = {\n        type: 'panel',\n        items: [generalPanel]\n      };\n      var advancedForm = {\n        type: 'tabpanel',\n        tabs: [\n          {\n            title: 'General',\n            items: [generalPanel]\n          },\n          Helpers.getAdvancedTab()\n        ]\n      };\n      var dialogBody = hasAdvancedTableTab(editor) ? advancedForm : nonAdvancedForm;\n      editor.windowManager.open({\n        title: 'Table Properties',\n        size: 'normal',\n        body: dialogBody,\n        onSubmit: curry(onSubmitTableForm, editor, tableElm),\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: data\n      });\n    };\n    var TableDialog = { open: open$2 };\n\n    var getSelectionStartFromSelector = function (selector) {\n      return function (editor) {\n        return Option.from(editor.dom.getParent(editor.selection.getStart(), selector)).map(Element.fromDom);\n      };\n    };\n    var getSelectionStartCell = getSelectionStartFromSelector('th,td');\n    var getSelectionStartCellOrCaption = getSelectionStartFromSelector('th,td,caption');\n\n    var each$3 = global$1.each;\n    var registerCommands = function (editor, actions, cellSelection, selections, clipboardRows) {\n      var isRoot = getIsRoot(editor);\n      var eraseTable = function () {\n        getSelectionStartCellOrCaption(editor).each(function (cellOrCaption) {\n          var tableOpt = TableLookup.table(cellOrCaption, isRoot);\n          tableOpt.filter(not(isRoot)).each(function (table) {\n            var cursor = Element.fromText('');\n            after(table, cursor);\n            remove$2(table);\n            if (editor.dom.isEmpty(editor.getBody())) {\n              editor.setContent('');\n              editor.selection.setCursorLocation();\n            } else {\n              var rng = editor.dom.createRng();\n              rng.setStart(cursor.dom(), 0);\n              rng.setEnd(cursor.dom(), 0);\n              editor.selection.setRng(rng);\n              editor.nodeChanged();\n            }\n          });\n        });\n      };\n      var getTableFromCell = function (cell) {\n        return TableLookup.table(cell, isRoot);\n      };\n      var getSize = function (table) {\n        return {\n          width: getPixelWidth$1(table.dom()),\n          height: getPixelWidth$1(table.dom())\n        };\n      };\n      var resizeChange = function (editor, oldSize, table) {\n        var newSize = getSize(table);\n        if (oldSize.width !== newSize.width || oldSize.height !== newSize.height) {\n          fireObjectResizeStart(editor, table.dom(), oldSize.width, oldSize.height);\n          fireObjectResized(editor, table.dom(), newSize.width, newSize.height);\n        }\n      };\n      var actOnSelection = function (execute) {\n        getSelectionStartCell(editor).each(function (cell) {\n          getTableFromCell(cell).each(function (table) {\n            var targets = TableTargets.forMenu(selections, table, cell);\n            var beforeSize = getSize(table);\n            execute(table, targets).each(function (rng) {\n              resizeChange(editor, beforeSize, table);\n              editor.selection.setRng(rng);\n              editor.focus();\n              cellSelection.clear(table);\n              removeDataStyle(table);\n            });\n          });\n        });\n      };\n      var copyRowSelection = function (execute) {\n        return getSelectionStartCell(editor).map(function (cell) {\n          return getTableFromCell(cell).bind(function (table) {\n            var doc = Element.fromDom(editor.getDoc());\n            var targets = TableTargets.forMenu(selections, table, cell);\n            var generators = TableFill.cellOperations(noop, doc, Option.none());\n            return CopyRows.copyRows(table, targets, generators);\n          });\n        });\n      };\n      var pasteOnSelection = function (execute) {\n        clipboardRows.get().each(function (rows) {\n          var clonedRows = map(rows, function (row) {\n            return deep(row);\n          });\n          getSelectionStartCell(editor).each(function (cell) {\n            getTableFromCell(cell).each(function (table) {\n              var doc = Element.fromDom(editor.getDoc());\n              var generators = TableFill.paste(doc);\n              var targets = TableTargets.pasteRows(selections, table, cell, clonedRows, generators);\n              execute(table, targets).each(function (rng) {\n                editor.selection.setRng(rng);\n                editor.focus();\n                cellSelection.clear(table);\n              });\n            });\n          });\n        });\n      };\n      each$3({\n        mceTableSplitCells: function () {\n          actOnSelection(actions.unmergeCells);\n        },\n        mceTableMergeCells: function () {\n          actOnSelection(actions.mergeCells);\n        },\n        mceTableInsertRowBefore: function () {\n          actOnSelection(actions.insertRowsBefore);\n        },\n        mceTableInsertRowAfter: function () {\n          actOnSelection(actions.insertRowsAfter);\n        },\n        mceTableInsertColBefore: function () {\n          actOnSelection(actions.insertColumnsBefore);\n        },\n        mceTableInsertColAfter: function () {\n          actOnSelection(actions.insertColumnsAfter);\n        },\n        mceTableDeleteCol: function () {\n          actOnSelection(actions.deleteColumn);\n        },\n        mceTableDeleteRow: function () {\n          actOnSelection(actions.deleteRow);\n        },\n        mceTableCutRow: function (grid) {\n          copyRowSelection().each(function (selection) {\n            clipboardRows.set(selection);\n            actOnSelection(actions.deleteRow);\n          });\n        },\n        mceTableCopyRow: function (grid) {\n          copyRowSelection().each(function (selection) {\n            clipboardRows.set(selection);\n          });\n        },\n        mceTablePasteRowBefore: function (grid) {\n          pasteOnSelection(actions.pasteRowsBefore);\n        },\n        mceTablePasteRowAfter: function (grid) {\n          pasteOnSelection(actions.pasteRowsAfter);\n        },\n        mceTableDelete: eraseTable\n      }, function (func, name) {\n        editor.addCommand(name, func);\n      });\n      each$3({\n        mceInsertTable: curry(TableDialog.open, editor, true),\n        mceTableProps: curry(TableDialog.open, editor, false),\n        mceTableRowProps: curry(RowDialog.open, editor),\n        mceTableCellProps: curry(CellDialog.open, editor)\n      }, function (func, name) {\n        editor.addCommand(name, function (ui, val) {\n          func(val);\n        });\n      });\n    };\n    var Commands = { registerCommands: registerCommands };\n\n    var only$1 = function (element) {\n      var parent = Option.from(element.dom().documentElement).map(Element.fromDom).getOr(element);\n      return {\n        parent: constant(parent),\n        view: constant(element),\n        origin: constant(Position(0, 0))\n      };\n    };\n    var detached = function (editable, chrome) {\n      var origin = curry(absolute, chrome);\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: origin\n      };\n    };\n    var body$1 = function (editable, chrome) {\n      return {\n        parent: constant(chrome),\n        view: constant(editable),\n        origin: constant(Position(0, 0))\n      };\n    };\n    var ResizeWire = {\n      only: only$1,\n      detached: detached,\n      body: body$1\n    };\n\n    function Event (fields) {\n      var struct = Immutable.apply(null, fields);\n      var handlers = [];\n      var bind = function (handler) {\n        if (handler === undefined) {\n          throw 'Event bind error: undefined handler';\n        }\n        handlers.push(handler);\n      };\n      var unbind = function (handler) {\n        handlers = filter(handlers, function (h) {\n          return h !== handler;\n        });\n      };\n      var trigger = function () {\n        var event = struct.apply(null, arguments);\n        each(handlers, function (handler) {\n          handler(event);\n        });\n      };\n      return {\n        bind: bind,\n        unbind: unbind,\n        trigger: trigger\n      };\n    }\n\n    var create = function (typeDefs) {\n      var registry = map$1(typeDefs, function (event) {\n        return {\n          bind: event.bind,\n          unbind: event.unbind\n        };\n      });\n      var trigger = map$1(typeDefs, function (event) {\n        return event.trigger;\n      });\n      return {\n        registry: registry,\n        trigger: trigger\n      };\n    };\n    var Events = { create: create };\n\n    var mode = exactly([\n      'compare',\n      'extract',\n      'mutate',\n      'sink'\n    ]);\n    var sink = exactly([\n      'element',\n      'start',\n      'stop',\n      'destroy'\n    ]);\n    var api$3 = exactly([\n      'forceDrop',\n      'drop',\n      'move',\n      'delayDrop'\n    ]);\n    var DragApis = {\n      mode: mode,\n      sink: sink,\n      api: api$3\n    };\n\n    var styles$1 = css('ephox-dragster');\n    var Styles$2 = { resolve: styles$1.resolve };\n\n    function Blocker (options) {\n      var settings = merge({ 'layerClass': Styles$2.resolve('blocker') }, options);\n      var div = Element.fromTag('div');\n      set(div, 'role', 'presentation');\n      setAll$1(div, {\n        position: 'fixed',\n        left: '0px',\n        top: '0px',\n        width: '100%',\n        height: '100%'\n      });\n      add$2(div, Styles$2.resolve('blocker'));\n      add$2(div, settings.layerClass);\n      var element = function () {\n        return div;\n      };\n      var destroy = function () {\n        remove$2(div);\n      };\n      return {\n        element: element,\n        destroy: destroy\n      };\n    }\n\n    var mkEvent = function (target, x, y, stop, prevent, kill, raw) {\n      return {\n        target: constant(target),\n        x: constant(x),\n        y: constant(y),\n        stop: stop,\n        prevent: prevent,\n        kill: kill,\n        raw: constant(raw)\n      };\n    };\n    var handle = function (filter, handler) {\n      return function (rawEvent) {\n        if (!filter(rawEvent)) {\n          return;\n        }\n        var target = Element.fromDom(rawEvent.target);\n        var stop = function () {\n          rawEvent.stopPropagation();\n        };\n        var prevent = function () {\n          rawEvent.preventDefault();\n        };\n        var kill = compose(prevent, stop);\n        var evt = mkEvent(target, rawEvent.clientX, rawEvent.clientY, stop, prevent, kill, rawEvent);\n        handler(evt);\n      };\n    };\n    var binder = function (element, event, filter, handler, useCapture) {\n      var wrapped = handle(filter, handler);\n      element.dom().addEventListener(event, wrapped, useCapture);\n      return { unbind: curry(unbind, element, event, wrapped, useCapture) };\n    };\n    var bind$1 = function (element, event, filter, handler) {\n      return binder(element, event, filter, handler, false);\n    };\n    var unbind = function (element, event, handler, useCapture) {\n      element.dom().removeEventListener(event, handler, useCapture);\n    };\n\n    var filter$1 = constant(true);\n    var bind$2 = function (element, event, handler) {\n      return bind$1(element, event, filter$1, handler);\n    };\n\n    var compare = function (old, nu) {\n      return Position(nu.left() - old.left(), nu.top() - old.top());\n    };\n    var extract$1 = function (event) {\n      return Option.some(Position(event.x(), event.y()));\n    };\n    var mutate = function (mutation, info) {\n      mutation.mutate(info.left(), info.top());\n    };\n    var sink$1 = function (dragApi, settings) {\n      var blocker = Blocker(settings);\n      var mdown = bind$2(blocker.element(), 'mousedown', dragApi.forceDrop);\n      var mup = bind$2(blocker.element(), 'mouseup', dragApi.drop);\n      var mmove = bind$2(blocker.element(), 'mousemove', dragApi.move);\n      var mout = bind$2(blocker.element(), 'mouseout', dragApi.delayDrop);\n      var destroy = function () {\n        blocker.destroy();\n        mup.unbind();\n        mmove.unbind();\n        mout.unbind();\n        mdown.unbind();\n      };\n      var start = function (parent) {\n        append(parent, blocker.element());\n      };\n      var stop = function () {\n        remove$2(blocker.element());\n      };\n      return DragApis.sink({\n        element: blocker.element,\n        start: start,\n        stop: stop,\n        destroy: destroy\n      });\n    };\n    var MouseDrag = DragApis.mode({\n      compare: compare,\n      extract: extract$1,\n      sink: sink$1,\n      mutate: mutate\n    });\n\n    function InDrag () {\n      var previous = Option.none();\n      var reset = function () {\n        previous = Option.none();\n      };\n      var update = function (mode, nu) {\n        var result = previous.map(function (old) {\n          return mode.compare(old, nu);\n        });\n        previous = Option.some(nu);\n        return result;\n      };\n      var onEvent = function (event, mode) {\n        var dataOption = mode.extract(event);\n        dataOption.each(function (data) {\n          var offset = update(mode, data);\n          offset.each(function (d) {\n            events.trigger.move(d);\n          });\n        });\n      };\n      var events = Events.create({ move: Event(['info']) });\n      return {\n        onEvent: onEvent,\n        reset: reset,\n        events: events.registry\n      };\n    }\n\n    function NoDrag (anchor) {\n      var onEvent = function (event, mode) {\n      };\n      return {\n        onEvent: onEvent,\n        reset: noop\n      };\n    }\n\n    function Movement () {\n      var noDragState = NoDrag();\n      var inDragState = InDrag();\n      var dragState = noDragState;\n      var on = function () {\n        dragState.reset();\n        dragState = inDragState;\n      };\n      var off = function () {\n        dragState.reset();\n        dragState = noDragState;\n      };\n      var onEvent = function (event, mode) {\n        dragState.onEvent(event, mode);\n      };\n      var isOn = function () {\n        return dragState === inDragState;\n      };\n      return {\n        on: on,\n        off: off,\n        isOn: isOn,\n        onEvent: onEvent,\n        events: inDragState.events\n      };\n    }\n\n    var last$2 = function (fn, rate) {\n      var timer = null;\n      var cancel = function () {\n        if (timer !== null) {\n          clearTimeout(timer);\n          timer = null;\n        }\n      };\n      var throttle = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (timer !== null)\n          clearTimeout(timer);\n        timer = setTimeout(function () {\n          fn.apply(null, args);\n          timer = null;\n        }, rate);\n      };\n      return {\n        cancel: cancel,\n        throttle: throttle\n      };\n    };\n\n    var setup = function (mutation, mode, settings) {\n      var active = false;\n      var events = Events.create({\n        start: Event([]),\n        stop: Event([])\n      });\n      var movement = Movement();\n      var drop = function () {\n        sink.stop();\n        if (movement.isOn()) {\n          movement.off();\n          events.trigger.stop();\n        }\n      };\n      var throttledDrop = last$2(drop, 200);\n      var go = function (parent) {\n        sink.start(parent);\n        movement.on();\n        events.trigger.start();\n      };\n      var mousemove = function (event, ui) {\n        throttledDrop.cancel();\n        movement.onEvent(event, mode);\n      };\n      movement.events.move.bind(function (event) {\n        mode.mutate(mutation, event.info());\n      });\n      var on = function () {\n        active = true;\n      };\n      var off = function () {\n        active = false;\n      };\n      var runIfActive = function (f) {\n        return function () {\n          var args = Array.prototype.slice.call(arguments, 0);\n          if (active) {\n            return f.apply(null, args);\n          }\n        };\n      };\n      var sink = mode.sink(DragApis.api({\n        forceDrop: drop,\n        drop: runIfActive(drop),\n        move: runIfActive(mousemove),\n        delayDrop: runIfActive(throttledDrop.throttle)\n      }), settings);\n      var destroy = function () {\n        sink.destroy();\n      };\n      return {\n        element: sink.element,\n        go: go,\n        on: on,\n        off: off,\n        destroy: destroy,\n        events: events.registry\n      };\n    };\n    var Dragging = { setup: setup };\n\n    var transform$1 = function (mutation, options) {\n      var settings = options !== undefined ? options : {};\n      var mode = settings.mode !== undefined ? settings.mode : MouseDrag;\n      return Dragging.setup(mutation, mode, options);\n    };\n    var Dragger = { transform: transform$1 };\n\n    var closest$2 = function (scope, selector, isRoot) {\n      return closest$1(scope, selector, isRoot).isSome();\n    };\n\n    function Mutation () {\n      var events = Events.create({\n        drag: Event([\n          'xDelta',\n          'yDelta'\n        ])\n      });\n      var mutate = function (x, y) {\n        events.trigger.drag(x, y);\n      };\n      return {\n        mutate: mutate,\n        events: events.registry\n      };\n    }\n\n    function BarMutation () {\n      var events = Events.create({\n        drag: Event([\n          'xDelta',\n          'yDelta',\n          'target'\n        ])\n      });\n      var target = Option.none();\n      var delegate = Mutation();\n      delegate.events.drag.bind(function (event) {\n        target.each(function (t) {\n          events.trigger.drag(event.xDelta(), event.yDelta(), t);\n        });\n      });\n      var assign = function (t) {\n        target = Option.some(t);\n      };\n      var get = function () {\n        return target;\n      };\n      return {\n        assign: assign,\n        get: get,\n        mutate: delegate.mutate,\n        events: events.registry\n      };\n    }\n\n    var resizeBarDragging = Styles.resolve('resizer-bar-dragging');\n    function BarManager (wire, direction, hdirection) {\n      var mutation = BarMutation();\n      var resizing = Dragger.transform(mutation, {});\n      var hoverTable = Option.none();\n      var getResizer = function (element, type) {\n        return Option.from(get$1(element, type));\n      };\n      mutation.events.drag.bind(function (event) {\n        getResizer(event.target(), 'data-row').each(function (_dataRow) {\n          var currentRow = CellUtils.getInt(event.target(), 'top');\n          set$1(event.target(), 'top', currentRow + event.yDelta() + 'px');\n        });\n        getResizer(event.target(), 'data-column').each(function (_dataCol) {\n          var currentCol = CellUtils.getInt(event.target(), 'left');\n          set$1(event.target(), 'left', currentCol + event.xDelta() + 'px');\n        });\n      });\n      var getDelta = function (target, dir) {\n        var newX = CellUtils.getInt(target, dir);\n        var oldX = parseInt(get$1(target, 'data-initial-' + dir), 10);\n        return newX - oldX;\n      };\n      resizing.events.stop.bind(function () {\n        mutation.get().each(function (target) {\n          hoverTable.each(function (table) {\n            getResizer(target, 'data-row').each(function (row) {\n              var delta = getDelta(target, 'top');\n              remove(target, 'data-initial-top');\n              events.trigger.adjustHeight(table, delta, parseInt(row, 10));\n            });\n            getResizer(target, 'data-column').each(function (column) {\n              var delta = getDelta(target, 'left');\n              remove(target, 'data-initial-left');\n              events.trigger.adjustWidth(table, delta, parseInt(column, 10));\n            });\n            Bars.refresh(wire, table, hdirection, direction);\n          });\n        });\n      });\n      var handler = function (target, dir) {\n        events.trigger.startAdjust();\n        mutation.assign(target);\n        set(target, 'data-initial-' + dir, parseInt(get$2(target, dir), 10));\n        add$2(target, resizeBarDragging);\n        set$1(target, 'opacity', '0.2');\n        resizing.go(wire.parent());\n      };\n      var mousedown = bind$2(wire.parent(), 'mousedown', function (event) {\n        if (Bars.isRowBar(event.target())) {\n          handler(event.target(), 'top');\n        }\n        if (Bars.isColBar(event.target())) {\n          handler(event.target(), 'left');\n        }\n      });\n      var isRoot = function (e) {\n        return eq(e, wire.view());\n      };\n      var mouseover = bind$2(wire.view(), 'mouseover', function (event) {\n        if (name(event.target()) === 'table' || closest$2(event.target(), 'table', isRoot)) {\n          hoverTable = name(event.target()) === 'table' ? Option.some(event.target()) : ancestor$1(event.target(), 'table', isRoot);\n          hoverTable.each(function (ht) {\n            Bars.refresh(wire, ht, hdirection, direction);\n          });\n        } else if (inBody(event.target())) {\n          Bars.destroy(wire);\n        }\n      });\n      var destroy = function () {\n        mousedown.unbind();\n        mouseover.unbind();\n        resizing.destroy();\n        Bars.destroy(wire);\n      };\n      var refresh = function (tbl) {\n        Bars.refresh(wire, tbl, hdirection, direction);\n      };\n      var events = Events.create({\n        adjustHeight: Event([\n          'table',\n          'delta',\n          'row'\n        ]),\n        adjustWidth: Event([\n          'table',\n          'delta',\n          'column'\n        ]),\n        startAdjust: Event([])\n      });\n      return {\n        destroy: destroy,\n        refresh: refresh,\n        on: resizing.on,\n        off: resizing.off,\n        hideBars: curry(Bars.hide, wire),\n        showBars: curry(Bars.show, wire),\n        events: events.registry\n      };\n    }\n\n    function TableResize (wire, vdirection) {\n      var hdirection = BarPositions.height;\n      var manager = BarManager(wire, vdirection, hdirection);\n      var events = Events.create({\n        beforeResize: Event(['table']),\n        afterResize: Event(['table']),\n        startDrag: Event([])\n      });\n      manager.events.adjustHeight.bind(function (event) {\n        events.trigger.beforeResize(event.table());\n        var delta = hdirection.delta(event.delta());\n        Adjustments.adjustHeight(event.table(), delta, event.row(), hdirection);\n        events.trigger.afterResize(event.table());\n      });\n      manager.events.startAdjust.bind(function (event) {\n        events.trigger.startDrag();\n      });\n      manager.events.adjustWidth.bind(function (event) {\n        events.trigger.beforeResize(event.table());\n        var delta = vdirection.delta(event.delta(), event.table());\n        Adjustments.adjustWidth(event.table(), delta, event.column(), vdirection);\n        events.trigger.afterResize(event.table());\n      });\n      return {\n        on: manager.on,\n        off: manager.off,\n        hideBars: manager.hideBars,\n        showBars: manager.showBars,\n        destroy: manager.destroy,\n        events: events.registry\n      };\n    }\n\n    var createContainer = function () {\n      var container = Element.fromTag('div');\n      setAll$1(container, {\n        position: 'static',\n        height: '0',\n        width: '0',\n        padding: '0',\n        margin: '0',\n        border: '0'\n      });\n      append(body(), container);\n      return container;\n    };\n    var get$9 = function (editor, container) {\n      return editor.inline ? ResizeWire.body(getBody$1(editor), createContainer()) : ResizeWire.only(Element.fromDom(editor.getDoc()));\n    };\n    var remove$6 = function (editor, wire) {\n      if (editor.inline) {\n        remove$2(wire.parent());\n      }\n    };\n    var TableWire = {\n      get: get$9,\n      remove: remove$6\n    };\n\n    var ResizeHandler = function (editor) {\n      var selectionRng = Option.none();\n      var resize = Option.none();\n      var wire = Option.none();\n      var percentageBasedSizeRegex = /(\\d+(\\.\\d+)?)%/;\n      var startW, startRawW;\n      var isTable = function (elm) {\n        return elm.nodeName === 'TABLE';\n      };\n      var getRawWidth = function (elm) {\n        return editor.dom.getStyle(elm, 'width') || editor.dom.getAttrib(elm, 'width');\n      };\n      var lazyResize = function () {\n        return resize;\n      };\n      var lazyWire = function () {\n        return wire.getOr(ResizeWire.only(Element.fromDom(editor.getBody())));\n      };\n      var destroy = function () {\n        resize.each(function (sz) {\n          sz.destroy();\n        });\n        wire.each(function (w) {\n          TableWire.remove(editor, w);\n        });\n      };\n      editor.on('init', function () {\n        var direction = TableDirection(Direction.directionAt);\n        var rawWire = TableWire.get(editor);\n        wire = Option.some(rawWire);\n        if (hasObjectResizing(editor) && hasTableResizeBars(editor)) {\n          var sz = TableResize(rawWire, direction);\n          sz.on();\n          sz.events.startDrag.bind(function (event) {\n            selectionRng = Option.some(editor.selection.getRng());\n          });\n          sz.events.beforeResize.bind(function (event) {\n            var rawTable = event.table().dom();\n            fireObjectResizeStart(editor, rawTable, getPixelWidth$1(rawTable), getPixelHeight(rawTable));\n          });\n          sz.events.afterResize.bind(function (event) {\n            var table = event.table();\n            var rawTable = table.dom();\n            removeDataStyle(table);\n            selectionRng.each(function (rng) {\n              editor.selection.setRng(rng);\n              editor.focus();\n            });\n            fireObjectResized(editor, rawTable, getPixelWidth$1(rawTable), getPixelHeight(rawTable));\n            editor.undoManager.add();\n          });\n          resize = Option.some(sz);\n        }\n      });\n      editor.on('ObjectResizeStart', function (e) {\n        var targetElm = e.target;\n        if (isTable(targetElm)) {\n          startW = e.width;\n          startRawW = getRawWidth(targetElm);\n        }\n      });\n      editor.on('ObjectResized', function (e) {\n        var targetElm = e.target;\n        if (isTable(targetElm)) {\n          var table = targetElm;\n          if (percentageBasedSizeRegex.test(startRawW)) {\n            var percentW = parseFloat(percentageBasedSizeRegex.exec(startRawW)[1]);\n            var targetPercentW = e.width * percentW / startW;\n            editor.dom.setStyle(table, 'width', targetPercentW + '%');\n          } else {\n            var newCellSizes_1 = [];\n            global$1.each(table.rows, function (row) {\n              global$1.each(row.cells, function (cell) {\n                var width = editor.dom.getStyle(cell, 'width', true);\n                newCellSizes_1.push({\n                  cell: cell,\n                  width: width\n                });\n              });\n            });\n            global$1.each(newCellSizes_1, function (newCellSize) {\n              editor.dom.setStyle(newCellSize.cell, 'width', newCellSize.width);\n              editor.dom.setAttrib(newCellSize.cell, 'width', null);\n            });\n          }\n        }\n      });\n      return {\n        lazyResize: lazyResize,\n        lazyWire: lazyWire,\n        destroy: destroy\n      };\n    };\n\n    var folder$1 = function (fold) {\n      return { fold: fold };\n    };\n    var none$2 = function (current) {\n      return folder$1(function (n, f, m, l) {\n        return n(current);\n      });\n    };\n    var first$1 = function (current) {\n      return folder$1(function (n, f, m, l) {\n        return f(current);\n      });\n    };\n    var middle$1 = function (current, target) {\n      return folder$1(function (n, f, m, l) {\n        return m(current, target);\n      });\n    };\n    var last$3 = function (current) {\n      return folder$1(function (n, f, m, l) {\n        return l(current);\n      });\n    };\n    var CellLocation = {\n      none: none$2,\n      first: first$1,\n      middle: middle$1,\n      last: last$3\n    };\n\n    var detect$4 = function (current, isRoot) {\n      return TableLookup.table(current, isRoot).bind(function (table) {\n        var all = TableLookup.cells(table);\n        var index = findIndex(all, function (x) {\n          return eq(current, x);\n        });\n        return index.map(function (ind) {\n          return {\n            index: constant(ind),\n            all: constant(all)\n          };\n        });\n      });\n    };\n    var next = function (current, isRoot) {\n      var detection = detect$4(current, isRoot);\n      return detection.fold(function () {\n        return CellLocation.none(current);\n      }, function (info) {\n        return info.index() + 1 < info.all().length ? CellLocation.middle(current, info.all()[info.index() + 1]) : CellLocation.last(current);\n      });\n    };\n    var prev = function (current, isRoot) {\n      var detection = detect$4(current, isRoot);\n      return detection.fold(function () {\n        return CellLocation.none();\n      }, function (info) {\n        return info.index() - 1 >= 0 ? CellLocation.middle(current, info.all()[info.index() - 1]) : CellLocation.first(current);\n      });\n    };\n    var CellNavigation = {\n      next: next,\n      prev: prev\n    };\n\n    var adt = Adt.generate([\n      { before: ['element'] },\n      {\n        on: [\n          'element',\n          'offset'\n        ]\n      },\n      { after: ['element'] }\n    ]);\n    var cata$1 = function (subject, onBefore, onOn, onAfter) {\n      return subject.fold(onBefore, onOn, onAfter);\n    };\n    var getStart = function (situ) {\n      return situ.fold(identity, identity, identity);\n    };\n    var before$2 = adt.before;\n    var on = adt.on;\n    var after$2 = adt.after;\n    var Situ = {\n      before: before$2,\n      on: on,\n      after: after$2,\n      cata: cata$1,\n      getStart: getStart\n    };\n\n    var type$2 = Adt.generate([\n      { domRange: ['rng'] },\n      {\n        relative: [\n          'startSitu',\n          'finishSitu'\n        ]\n      },\n      {\n        exact: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    var range$1 = Immutable('start', 'soffset', 'finish', 'foffset');\n    var getStart$1 = function (selection) {\n      return selection.match({\n        domRange: function (rng) {\n          return Element.fromDom(rng.startContainer);\n        },\n        relative: function (startSitu, finishSitu) {\n          return Situ.getStart(startSitu);\n        },\n        exact: function (start, soffset, finish, foffset) {\n          return start;\n        }\n      });\n    };\n    var getWin = function (selection) {\n      var start = getStart$1(selection);\n      return defaultView(start);\n    };\n    var domRange = type$2.domRange;\n    var relative = type$2.relative;\n    var exact = type$2.exact;\n\n    var makeRange = function (start, soffset, finish, foffset) {\n      var doc = owner(start);\n      var rng = doc.dom().createRange();\n      rng.setStart(start.dom(), soffset);\n      rng.setEnd(finish.dom(), foffset);\n      return rng;\n    };\n    var after$3 = function (start, soffset, finish, foffset) {\n      var r = makeRange(start, soffset, finish, foffset);\n      var same = eq(start, finish) && soffset === foffset;\n      return r.collapsed && !same;\n    };\n\n    var selectNodeContents = function (win, element) {\n      var rng = win.document.createRange();\n      selectNodeContentsUsing(rng, element);\n      return rng;\n    };\n    var selectNodeContentsUsing = function (rng, element) {\n      rng.selectNodeContents(element.dom());\n    };\n    var setStart = function (rng, situ) {\n      situ.fold(function (e) {\n        rng.setStartBefore(e.dom());\n      }, function (e, o) {\n        rng.setStart(e.dom(), o);\n      }, function (e) {\n        rng.setStartAfter(e.dom());\n      });\n    };\n    var setFinish = function (rng, situ) {\n      situ.fold(function (e) {\n        rng.setEndBefore(e.dom());\n      }, function (e, o) {\n        rng.setEnd(e.dom(), o);\n      }, function (e) {\n        rng.setEndAfter(e.dom());\n      });\n    };\n    var relativeToNative = function (win, startSitu, finishSitu) {\n      var range = win.document.createRange();\n      setStart(range, startSitu);\n      setFinish(range, finishSitu);\n      return range;\n    };\n    var exactToNative = function (win, start, soffset, finish, foffset) {\n      var rng = win.document.createRange();\n      rng.setStart(start.dom(), soffset);\n      rng.setEnd(finish.dom(), foffset);\n      return rng;\n    };\n    var toRect = function (rect) {\n      return {\n        left: constant(rect.left),\n        top: constant(rect.top),\n        right: constant(rect.right),\n        bottom: constant(rect.bottom),\n        width: constant(rect.width),\n        height: constant(rect.height)\n      };\n    };\n    var getFirstRect = function (rng) {\n      var rects = rng.getClientRects();\n      var rect = rects.length > 0 ? rects[0] : rng.getBoundingClientRect();\n      return rect.width > 0 || rect.height > 0 ? Option.some(rect).map(toRect) : Option.none();\n    };\n\n    var adt$1 = Adt.generate([\n      {\n        ltr: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      },\n      {\n        rtl: [\n          'start',\n          'soffset',\n          'finish',\n          'foffset'\n        ]\n      }\n    ]);\n    var fromRange = function (win, type, range) {\n      return type(Element.fromDom(range.startContainer), range.startOffset, Element.fromDom(range.endContainer), range.endOffset);\n    };\n    var getRanges = function (win, selection) {\n      return selection.match({\n        domRange: function (rng) {\n          return {\n            ltr: constant(rng),\n            rtl: Option.none\n          };\n        },\n        relative: function (startSitu, finishSitu) {\n          return {\n            ltr: cached(function () {\n              return relativeToNative(win, startSitu, finishSitu);\n            }),\n            rtl: cached(function () {\n              return Option.some(relativeToNative(win, finishSitu, startSitu));\n            })\n          };\n        },\n        exact: function (start, soffset, finish, foffset) {\n          return {\n            ltr: cached(function () {\n              return exactToNative(win, start, soffset, finish, foffset);\n            }),\n            rtl: cached(function () {\n              return Option.some(exactToNative(win, finish, foffset, start, soffset));\n            })\n          };\n        }\n      });\n    };\n    var doDiagnose = function (win, ranges) {\n      var rng = ranges.ltr();\n      if (rng.collapsed) {\n        var reversed = ranges.rtl().filter(function (rev) {\n          return rev.collapsed === false;\n        });\n        return reversed.map(function (rev) {\n          return adt$1.rtl(Element.fromDom(rev.endContainer), rev.endOffset, Element.fromDom(rev.startContainer), rev.startOffset);\n        }).getOrThunk(function () {\n          return fromRange(win, adt$1.ltr, rng);\n        });\n      } else {\n        return fromRange(win, adt$1.ltr, rng);\n      }\n    };\n    var diagnose = function (win, selection) {\n      var ranges = getRanges(win, selection);\n      return doDiagnose(win, ranges);\n    };\n    var asLtrRange = function (win, selection) {\n      var diagnosis = diagnose(win, selection);\n      return diagnosis.match({\n        ltr: function (start, soffset, finish, foffset) {\n          var rng = win.document.createRange();\n          rng.setStart(start.dom(), soffset);\n          rng.setEnd(finish.dom(), foffset);\n          return rng;\n        },\n        rtl: function (start, soffset, finish, foffset) {\n          var rng = win.document.createRange();\n          rng.setStart(finish.dom(), foffset);\n          rng.setEnd(start.dom(), soffset);\n          return rng;\n        }\n      });\n    };\n    var ltr$2 = adt$1.ltr;\n    var rtl$2 = adt$1.rtl;\n\n    var searchForPoint = function (rectForOffset, x, y, maxX, length) {\n      if (length === 0) {\n        return 0;\n      } else if (x === maxX) {\n        return length - 1;\n      }\n      var xDelta = maxX;\n      for (var i = 1; i < length; i++) {\n        var rect = rectForOffset(i);\n        var curDeltaX = Math.abs(x - rect.left);\n        if (y <= rect.bottom) {\n          if (y < rect.top || curDeltaX > xDelta) {\n            return i - 1;\n          } else {\n            xDelta = curDeltaX;\n          }\n        }\n      }\n      return 0;\n    };\n    var inRect = function (rect, x, y) {\n      return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n    };\n\n    var locateOffset = function (doc, textnode, x, y, rect) {\n      var rangeForOffset = function (o) {\n        var r = doc.dom().createRange();\n        r.setStart(textnode.dom(), o);\n        r.collapse(true);\n        return r;\n      };\n      var rectForOffset = function (o) {\n        var r = rangeForOffset(o);\n        return r.getBoundingClientRect();\n      };\n      var length = get$3(textnode).length;\n      var offset = searchForPoint(rectForOffset, x, y, rect.right, length);\n      return rangeForOffset(offset);\n    };\n    var locate = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rects = r.getClientRects();\n      var foundRect = findMap(rects, function (rect) {\n        return inRect(rect, x, y) ? Option.some(rect) : Option.none();\n      });\n      return foundRect.map(function (rect) {\n        return locateOffset(doc, node, x, y, rect);\n      });\n    };\n\n    var searchInChildren = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      var nodes = children(node);\n      return findMap(nodes, function (n) {\n        r.selectNode(n.dom());\n        return inRect(r.getBoundingClientRect(), x, y) ? locateNode(doc, n, x, y) : Option.none();\n      });\n    };\n    var locateNode = function (doc, node, x, y) {\n      var locator = isText(node) ? locate : searchInChildren;\n      return locator(doc, node, x, y);\n    };\n    var locate$1 = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rect = r.getBoundingClientRect();\n      var boundedX = Math.max(rect.left, Math.min(rect.right, x));\n      var boundedY = Math.max(rect.top, Math.min(rect.bottom, y));\n      return locateNode(doc, node, boundedX, boundedY);\n    };\n\n    var COLLAPSE_TO_LEFT = true;\n    var COLLAPSE_TO_RIGHT = false;\n    var getCollapseDirection = function (rect, x) {\n      return x - rect.left < rect.right - x ? COLLAPSE_TO_LEFT : COLLAPSE_TO_RIGHT;\n    };\n    var createCollapsedNode = function (doc, target, collapseDirection) {\n      var r = doc.dom().createRange();\n      r.selectNode(target.dom());\n      r.collapse(collapseDirection);\n      return r;\n    };\n    var locateInElement = function (doc, node, x) {\n      var cursorRange = doc.dom().createRange();\n      cursorRange.selectNode(node.dom());\n      var rect = cursorRange.getBoundingClientRect();\n      var collapseDirection = getCollapseDirection(rect, x);\n      var f = collapseDirection === COLLAPSE_TO_LEFT ? first : last$1;\n      return f(node).map(function (target) {\n        return createCollapsedNode(doc, target, collapseDirection);\n      });\n    };\n    var locateInEmpty = function (doc, node, x) {\n      var rect = node.dom().getBoundingClientRect();\n      var collapseDirection = getCollapseDirection(rect, x);\n      return Option.some(createCollapsedNode(doc, node, collapseDirection));\n    };\n    var search = function (doc, node, x) {\n      var f = children(node).length === 0 ? locateInEmpty : locateInElement;\n      return f(doc, node, x);\n    };\n\n    var caretPositionFromPoint = function (doc, x, y) {\n      return Option.from(doc.dom().caretPositionFromPoint(x, y)).bind(function (pos) {\n        if (pos.offsetNode === null) {\n          return Option.none();\n        }\n        var r = doc.dom().createRange();\n        r.setStart(pos.offsetNode, pos.offset);\n        r.collapse();\n        return Option.some(r);\n      });\n    };\n    var caretRangeFromPoint = function (doc, x, y) {\n      return Option.from(doc.dom().caretRangeFromPoint(x, y));\n    };\n    var searchTextNodes = function (doc, node, x, y) {\n      var r = doc.dom().createRange();\n      r.selectNode(node.dom());\n      var rect = r.getBoundingClientRect();\n      var boundedX = Math.max(rect.left, Math.min(rect.right, x));\n      var boundedY = Math.max(rect.top, Math.min(rect.bottom, y));\n      return locate$1(doc, node, boundedX, boundedY);\n    };\n    var searchFromPoint = function (doc, x, y) {\n      return Element.fromPoint(doc, x, y).bind(function (elem) {\n        var fallback = function () {\n          return search(doc, elem, x);\n        };\n        return children(elem).length === 0 ? fallback() : searchTextNodes(doc, elem, x, y).orThunk(fallback);\n      });\n    };\n    var availableSearch = document.caretPositionFromPoint ? caretPositionFromPoint : document.caretRangeFromPoint ? caretRangeFromPoint : searchFromPoint;\n    var fromPoint$1 = function (win, x, y) {\n      var doc = Element.fromDom(win.document);\n      return availableSearch(doc, x, y).map(function (rng) {\n        return range$1(Element.fromDom(rng.startContainer), rng.startOffset, Element.fromDom(rng.endContainer), rng.endOffset);\n      });\n    };\n\n    var beforeSpecial = function (element, offset) {\n      var name$1 = name(element);\n      if ('input' === name$1) {\n        return Situ.after(element);\n      } else if (!contains([\n          'br',\n          'img'\n        ], name$1)) {\n        return Situ.on(element, offset);\n      } else {\n        return offset === 0 ? Situ.before(element) : Situ.after(element);\n      }\n    };\n    var preprocessRelative = function (startSitu, finishSitu) {\n      var start = startSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      var finish = finishSitu.fold(Situ.before, beforeSpecial, Situ.after);\n      return relative(start, finish);\n    };\n    var preprocessExact = function (start, soffset, finish, foffset) {\n      var startSitu = beforeSpecial(start, soffset);\n      var finishSitu = beforeSpecial(finish, foffset);\n      return relative(startSitu, finishSitu);\n    };\n    var preprocess = function (selection) {\n      return selection.match({\n        domRange: function (rng) {\n          var start = Element.fromDom(rng.startContainer);\n          var finish = Element.fromDom(rng.endContainer);\n          return preprocessExact(start, rng.startOffset, finish, rng.endOffset);\n        },\n        relative: preprocessRelative,\n        exact: preprocessExact\n      });\n    };\n\n    var doSetNativeRange = function (win, rng) {\n      Option.from(win.getSelection()).each(function (selection) {\n        selection.removeAllRanges();\n        selection.addRange(rng);\n      });\n    };\n    var doSetRange = function (win, start, soffset, finish, foffset) {\n      var rng = exactToNative(win, start, soffset, finish, foffset);\n      doSetNativeRange(win, rng);\n    };\n    var setLegacyRtlRange = function (win, selection, start, soffset, finish, foffset) {\n      selection.collapse(start.dom(), soffset);\n      selection.extend(finish.dom(), foffset);\n    };\n    var setRangeFromRelative = function (win, relative) {\n      return diagnose(win, relative).match({\n        ltr: function (start, soffset, finish, foffset) {\n          doSetRange(win, start, soffset, finish, foffset);\n        },\n        rtl: function (start, soffset, finish, foffset) {\n          var selection = win.getSelection();\n          if (selection.setBaseAndExtent) {\n            selection.setBaseAndExtent(start.dom(), soffset, finish.dom(), foffset);\n          } else if (selection.extend) {\n            try {\n              setLegacyRtlRange(win, selection, start, soffset, finish, foffset);\n            } catch (e) {\n              doSetRange(win, finish, foffset, start, soffset);\n            }\n          } else {\n            doSetRange(win, finish, foffset, start, soffset);\n          }\n        }\n      });\n    };\n    var setExact = function (win, start, soffset, finish, foffset) {\n      var relative = preprocessExact(start, soffset, finish, foffset);\n      setRangeFromRelative(win, relative);\n    };\n    var setRelative = function (win, startSitu, finishSitu) {\n      var relative = preprocessRelative(startSitu, finishSitu);\n      setRangeFromRelative(win, relative);\n    };\n    var toNative = function (selection) {\n      var win = getWin(selection).dom();\n      var getDomRange = function (start, soffset, finish, foffset) {\n        return exactToNative(win, start, soffset, finish, foffset);\n      };\n      var filtered = preprocess(selection);\n      return diagnose(win, filtered).match({\n        ltr: getDomRange,\n        rtl: getDomRange\n      });\n    };\n    var readRange = function (selection) {\n      if (selection.rangeCount > 0) {\n        var firstRng = selection.getRangeAt(0);\n        var lastRng = selection.getRangeAt(selection.rangeCount - 1);\n        return Option.some(range$1(Element.fromDom(firstRng.startContainer), firstRng.startOffset, Element.fromDom(lastRng.endContainer), lastRng.endOffset));\n      } else {\n        return Option.none();\n      }\n    };\n    var doGetExact = function (selection) {\n      var anchor = Element.fromDom(selection.anchorNode);\n      var focus = Element.fromDom(selection.focusNode);\n      return after$3(anchor, selection.anchorOffset, focus, selection.focusOffset) ? Option.some(range$1(anchor, selection.anchorOffset, focus, selection.focusOffset)) : readRange(selection);\n    };\n    var setToElement = function (win, element) {\n      var rng = selectNodeContents(win, element);\n      doSetNativeRange(win, rng);\n    };\n    var getExact = function (win) {\n      return Option.from(win.getSelection()).filter(function (sel) {\n        return sel.rangeCount > 0;\n      }).bind(doGetExact);\n    };\n    var get$a = function (win) {\n      return getExact(win).map(function (range) {\n        return exact(range.start(), range.soffset(), range.finish(), range.foffset());\n      });\n    };\n    var getFirstRect$1 = function (win, selection) {\n      var rng = asLtrRange(win, selection);\n      return getFirstRect(rng);\n    };\n    var getAtPoint = function (win, x, y) {\n      return fromPoint$1(win, x, y);\n    };\n    var clear$1 = function (win) {\n      var selection = win.getSelection();\n      selection.removeAllRanges();\n    };\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var forward = function (editor, isRoot, cell, lazyWire) {\n      return go(editor, isRoot, CellNavigation.next(cell), lazyWire);\n    };\n    var backward = function (editor, isRoot, cell, lazyWire) {\n      return go(editor, isRoot, CellNavigation.prev(cell), lazyWire);\n    };\n    var getCellFirstCursorPosition = function (editor, cell) {\n      var selection = exact(cell, 0, cell, 0);\n      return toNative(selection);\n    };\n    var getNewRowCursorPosition = function (editor, table) {\n      var rows = descendants$1(table, 'tr');\n      return last(rows).bind(function (last) {\n        return descendant$1(last, 'td,th').map(function (first) {\n          return getCellFirstCursorPosition(editor, first);\n        });\n      });\n    };\n    var go = function (editor, isRoot, cell, actions, lazyWire) {\n      return cell.fold(Option.none, Option.none, function (current, next) {\n        return first(next).map(function (cell) {\n          return getCellFirstCursorPosition(editor, cell);\n        });\n      }, function (current) {\n        return TableLookup.table(current, isRoot).bind(function (table) {\n          var targets = TableTargets.noMenu(current);\n          editor.undoManager.transact(function () {\n            actions.insertRowsAfter(table, targets);\n          });\n          return getNewRowCursorPosition(editor, table);\n        });\n      });\n    };\n    var rootElements = [\n      'table',\n      'li',\n      'dl'\n    ];\n    var handle$1 = function (event, editor, actions, lazyWire) {\n      if (event.keyCode === global$3.TAB) {\n        var body_1 = getBody$1(editor);\n        var isRoot_1 = function (element) {\n          var name$1 = name(element);\n          return eq(element, body_1) || contains(rootElements, name$1);\n        };\n        var rng = editor.selection.getRng();\n        if (rng.collapsed) {\n          var start = Element.fromDom(rng.startContainer);\n          TableLookup.cell(start, isRoot_1).each(function (cell) {\n            event.preventDefault();\n            var navigation = event.shiftKey ? backward : forward;\n            var rng = navigation(editor, isRoot_1, cell, actions, lazyWire);\n            rng.each(function (range) {\n              editor.selection.setRng(range);\n            });\n          });\n        }\n      }\n    };\n    var TabContext = { handle: handle$1 };\n\n    var response = Immutable('selection', 'kill');\n    var Responses = { response: response };\n\n    var isKey = function (key) {\n      return function (keycode) {\n        return keycode === key;\n      };\n    };\n    var isUp = isKey(38);\n    var isDown = isKey(40);\n    var isNavigation = function (keycode) {\n      return keycode >= 37 && keycode <= 40;\n    };\n    var SelectionKeys = {\n      ltr: {\n        isBackward: isKey(37),\n        isForward: isKey(39)\n      },\n      rtl: {\n        isBackward: isKey(39),\n        isForward: isKey(37)\n      },\n      isUp: isUp,\n      isDown: isDown,\n      isNavigation: isNavigation\n    };\n\n    var convertToRange = function (win, selection) {\n      var rng = asLtrRange(win, selection);\n      return {\n        start: constant(Element.fromDom(rng.startContainer)),\n        soffset: constant(rng.startOffset),\n        finish: constant(Element.fromDom(rng.endContainer)),\n        foffset: constant(rng.endOffset)\n      };\n    };\n    var makeSitus = function (start, soffset, finish, foffset) {\n      return {\n        start: constant(Situ.on(start, soffset)),\n        finish: constant(Situ.on(finish, foffset))\n      };\n    };\n    var Util$1 = {\n      convertToRange: convertToRange,\n      makeSitus: makeSitus\n    };\n\n    var isSafari = PlatformDetection$1.detect().browser.isSafari();\n    var get$b = function (_DOC) {\n      var doc = _DOC !== undefined ? _DOC.dom() : domGlobals.document;\n      var x = doc.body.scrollLeft || doc.documentElement.scrollLeft;\n      var y = doc.body.scrollTop || doc.documentElement.scrollTop;\n      return Position(x, y);\n    };\n    var by = function (x, y, _DOC) {\n      var doc = _DOC !== undefined ? _DOC.dom() : domGlobals.document;\n      var win = doc.defaultView;\n      win.scrollBy(x, y);\n    };\n\n    function WindowBridge (win) {\n      var elementFromPoint = function (x, y) {\n        return Element.fromPoint(Element.fromDom(win.document), x, y);\n      };\n      var getRect = function (element) {\n        return element.dom().getBoundingClientRect();\n      };\n      var getRangedRect = function (start, soffset, finish, foffset) {\n        var sel = exact(start, soffset, finish, foffset);\n        return getFirstRect$1(win, sel).map(function (structRect) {\n          return map$1(structRect, apply);\n        });\n      };\n      var getSelection = function () {\n        return get$a(win).map(function (exactAdt) {\n          return Util$1.convertToRange(win, exactAdt);\n        });\n      };\n      var fromSitus = function (situs) {\n        var relative$1 = relative(situs.start(), situs.finish());\n        return Util$1.convertToRange(win, relative$1);\n      };\n      var situsFromPoint = function (x, y) {\n        return getAtPoint(win, x, y).map(function (exact) {\n          return {\n            start: constant(Situ.on(exact.start(), exact.soffset())),\n            finish: constant(Situ.on(exact.finish(), exact.foffset()))\n          };\n        });\n      };\n      var clearSelection = function () {\n        clear$1(win);\n      };\n      var selectContents = function (element) {\n        setToElement(win, element);\n      };\n      var setSelection = function (sel) {\n        setExact(win, sel.start(), sel.soffset(), sel.finish(), sel.foffset());\n      };\n      var setRelativeSelection = function (start, finish) {\n        setRelative(win, start, finish);\n      };\n      var getInnerHeight = function () {\n        return win.innerHeight;\n      };\n      var getScrollY = function () {\n        var pos = get$b(Element.fromDom(win.document));\n        return pos.top();\n      };\n      var scrollBy = function (x, y) {\n        by(x, y, Element.fromDom(win.document));\n      };\n      return {\n        elementFromPoint: elementFromPoint,\n        getRect: getRect,\n        getRangedRect: getRangedRect,\n        getSelection: getSelection,\n        fromSitus: fromSitus,\n        situsFromPoint: situsFromPoint,\n        clearSelection: clearSelection,\n        setSelection: setSelection,\n        setRelativeSelection: setRelativeSelection,\n        selectContents: selectContents,\n        getInnerHeight: getInnerHeight,\n        getScrollY: getScrollY,\n        scrollBy: scrollBy\n      };\n    }\n\n    var sync = function (container, isRoot, start, soffset, finish, foffset, selectRange) {\n      if (!(eq(start, finish) && soffset === foffset)) {\n        return closest$1(start, 'td,th', isRoot).bind(function (s) {\n          return closest$1(finish, 'td,th', isRoot).bind(function (f) {\n            return detect$5(container, isRoot, s, f, selectRange);\n          });\n        });\n      } else {\n        return Option.none();\n      }\n    };\n    var detect$5 = function (container, isRoot, start, finish, selectRange) {\n      if (!eq(start, finish)) {\n        return CellSelection.identify(start, finish, isRoot).bind(function (cellSel) {\n          var boxes = cellSel.boxes().getOr([]);\n          if (boxes.length > 0) {\n            selectRange(container, boxes, cellSel.start(), cellSel.finish());\n            return Option.some(Responses.response(Option.some(Util$1.makeSitus(start, 0, start, getEnd(start))), true));\n          } else {\n            return Option.none();\n          }\n        });\n      } else {\n        return Option.none();\n      }\n    };\n    var update = function (rows, columns, container, selected, annotations) {\n      var updateSelection = function (newSels) {\n        annotations.clear(container);\n        annotations.selectRange(container, newSels.boxes(), newSels.start(), newSels.finish());\n        return newSels.boxes();\n      };\n      return CellSelection.shiftSelection(selected, rows, columns, annotations.firstSelectedSelector(), annotations.lastSelectedSelector()).map(updateSelection);\n    };\n    var KeySelection = {\n      sync: sync,\n      detect: detect$5,\n      update: update\n    };\n\n    var nu$3 = MixedBag([\n      'left',\n      'top',\n      'right',\n      'bottom'\n    ], []);\n    var moveDown = function (caret, amount) {\n      return nu$3({\n        left: caret.left(),\n        top: caret.top() + amount,\n        right: caret.right(),\n        bottom: caret.bottom() + amount\n      });\n    };\n    var moveUp = function (caret, amount) {\n      return nu$3({\n        left: caret.left(),\n        top: caret.top() - amount,\n        right: caret.right(),\n        bottom: caret.bottom() - amount\n      });\n    };\n    var moveBottomTo = function (caret, bottom) {\n      var height = caret.bottom() - caret.top();\n      return nu$3({\n        left: caret.left(),\n        top: bottom - height,\n        right: caret.right(),\n        bottom: bottom\n      });\n    };\n    var moveTopTo = function (caret, top) {\n      var height = caret.bottom() - caret.top();\n      return nu$3({\n        left: caret.left(),\n        top: top,\n        right: caret.right(),\n        bottom: top + height\n      });\n    };\n    var translate = function (caret, xDelta, yDelta) {\n      return nu$3({\n        left: caret.left() + xDelta,\n        top: caret.top() + yDelta,\n        right: caret.right() + xDelta,\n        bottom: caret.bottom() + yDelta\n      });\n    };\n    var getTop$1 = function (caret) {\n      return caret.top();\n    };\n    var getBottom = function (caret) {\n      return caret.bottom();\n    };\n    var toString = function (caret) {\n      return '(' + caret.left() + ', ' + caret.top() + ') -> (' + caret.right() + ', ' + caret.bottom() + ')';\n    };\n    var Carets = {\n      nu: nu$3,\n      moveUp: moveUp,\n      moveDown: moveDown,\n      moveBottomTo: moveBottomTo,\n      moveTopTo: moveTopTo,\n      getTop: getTop$1,\n      getBottom: getBottom,\n      translate: translate,\n      toString: toString\n    };\n\n    var getPartialBox = function (bridge, element, offset) {\n      if (offset >= 0 && offset < getEnd(element))\n        return bridge.getRangedRect(element, offset, element, offset + 1);\n      else if (offset > 0)\n        return bridge.getRangedRect(element, offset - 1, element, offset);\n      return Option.none();\n    };\n    var toCaret = function (rect) {\n      return Carets.nu({\n        left: rect.left,\n        top: rect.top,\n        right: rect.right,\n        bottom: rect.bottom\n      });\n    };\n    var getElemBox = function (bridge, element) {\n      return Option.some(bridge.getRect(element));\n    };\n    var getBoxAt = function (bridge, element, offset) {\n      if (isElement(element))\n        return getElemBox(bridge, element).map(toCaret);\n      else if (isText(element))\n        return getPartialBox(bridge, element, offset).map(toCaret);\n      else\n        return Option.none();\n    };\n    var getEntireBox = function (bridge, element) {\n      if (isElement(element))\n        return getElemBox(bridge, element).map(toCaret);\n      else if (isText(element))\n        return bridge.getRangedRect(element, 0, element, getEnd(element)).map(toCaret);\n      else\n        return Option.none();\n    };\n    var Rectangles = {\n      getBoxAt: getBoxAt,\n      getEntireBox: getEntireBox\n    };\n\n    var traverse = Immutable('item', 'mode');\n    var backtrack = function (universe, item, _direction, transition) {\n      if (transition === void 0) {\n        transition = sidestep;\n      }\n      return universe.property().parent(item).map(function (p) {\n        return traverse(p, transition);\n      });\n    };\n    var sidestep = function (universe, item, direction, transition) {\n      if (transition === void 0) {\n        transition = advance;\n      }\n      return direction.sibling(universe, item).map(function (p) {\n        return traverse(p, transition);\n      });\n    };\n    var advance = function (universe, item, direction, transition) {\n      if (transition === void 0) {\n        transition = advance;\n      }\n      var children = universe.property().children(item);\n      var result = direction.first(children);\n      return result.map(function (r) {\n        return traverse(r, transition);\n      });\n    };\n    var successors = [\n      {\n        current: backtrack,\n        next: sidestep,\n        fallback: Option.none()\n      },\n      {\n        current: sidestep,\n        next: advance,\n        fallback: Option.some(backtrack)\n      },\n      {\n        current: advance,\n        next: advance,\n        fallback: Option.some(sidestep)\n      }\n    ];\n    var go$1 = function (universe, item, mode, direction, rules) {\n      if (rules === void 0) {\n        rules = successors;\n      }\n      var ruleOpt = find(rules, function (succ) {\n        return succ.current === mode;\n      });\n      return ruleOpt.bind(function (rule) {\n        return rule.current(universe, item, direction, rule.next).orThunk(function () {\n          return rule.fallback.bind(function (fb) {\n            return go$1(universe, item, fb, direction);\n          });\n        });\n      });\n    };\n\n    var left$1 = function () {\n      var sibling = function (universe, item) {\n        return universe.query().prevSibling(item);\n      };\n      var first = function (children) {\n        return children.length > 0 ? Option.some(children[children.length - 1]) : Option.none();\n      };\n      return {\n        sibling: sibling,\n        first: first\n      };\n    };\n    var right$1 = function () {\n      var sibling = function (universe, item) {\n        return universe.query().nextSibling(item);\n      };\n      var first = function (children) {\n        return children.length > 0 ? Option.some(children[0]) : Option.none();\n      };\n      return {\n        sibling: sibling,\n        first: first\n      };\n    };\n    var Walkers = {\n      left: left$1,\n      right: right$1\n    };\n\n    var hone = function (universe, item, predicate, mode, direction, isRoot) {\n      var next = go$1(universe, item, mode, direction);\n      return next.bind(function (n) {\n        if (isRoot(n.item()))\n          return Option.none();\n        else\n          return predicate(n.item()) ? Option.some(n.item()) : hone(universe, n.item(), predicate, n.mode(), direction, isRoot);\n      });\n    };\n    var left$2 = function (universe, item, predicate, isRoot) {\n      return hone(universe, item, predicate, sidestep, Walkers.left(), isRoot);\n    };\n    var right$2 = function (universe, item, predicate, isRoot) {\n      return hone(universe, item, predicate, sidestep, Walkers.right(), isRoot);\n    };\n\n    var isLeaf = function (universe) {\n      return function (element) {\n        return universe.property().children(element).length === 0;\n      };\n    };\n    var before$3 = function (universe, item, isRoot) {\n      return seekLeft(universe, item, isLeaf(universe), isRoot);\n    };\n    var after$4 = function (universe, item, isRoot) {\n      return seekRight(universe, item, isLeaf(universe), isRoot);\n    };\n    var seekLeft = left$2;\n    var seekRight = right$2;\n\n    var universe$2 = DomUniverse();\n    var before$4 = function (element, isRoot) {\n      return before$3(universe$2, element, isRoot);\n    };\n    var after$5 = function (element, isRoot) {\n      return after$4(universe$2, element, isRoot);\n    };\n    var seekLeft$1 = function (element, predicate, isRoot) {\n      return seekLeft(universe$2, element, predicate, isRoot);\n    };\n    var seekRight$1 = function (element, predicate, isRoot) {\n      return seekRight(universe$2, element, predicate, isRoot);\n    };\n\n    var JUMP_SIZE = 5;\n    var NUM_RETRIES = 100;\n    var adt$2 = Adt.generate([\n      { 'none': [] },\n      { 'retry': ['caret'] }\n    ]);\n    var isOutside = function (caret, box) {\n      return caret.left() < box.left() || Math.abs(box.right() - caret.left()) < 1 || caret.left() > box.right();\n    };\n    var inOutsideBlock = function (bridge, element, caret) {\n      return closest(element, DomStructure.isBlock).fold(constant(false), function (cell) {\n        return Rectangles.getEntireBox(bridge, cell).exists(function (box) {\n          return isOutside(caret, box);\n        });\n      });\n    };\n    var adjustDown = function (bridge, element, guessBox, original, caret) {\n      var lowerCaret = Carets.moveDown(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.bottom() - original.bottom()) < 1)\n        return adt$2.retry(lowerCaret);\n      else if (guessBox.top() > caret.bottom())\n        return adt$2.retry(lowerCaret);\n      else if (guessBox.top() === caret.bottom())\n        return adt$2.retry(Carets.moveDown(caret, 1));\n      else\n        return inOutsideBlock(bridge, element, caret) ? adt$2.retry(Carets.translate(lowerCaret, JUMP_SIZE, 0)) : adt$2.none();\n    };\n    var adjustUp = function (bridge, element, guessBox, original, caret) {\n      var higherCaret = Carets.moveUp(caret, JUMP_SIZE);\n      if (Math.abs(guessBox.top() - original.top()) < 1)\n        return adt$2.retry(higherCaret);\n      else if (guessBox.bottom() < caret.top())\n        return adt$2.retry(higherCaret);\n      else if (guessBox.bottom() === caret.top())\n        return adt$2.retry(Carets.moveUp(caret, 1));\n      else\n        return inOutsideBlock(bridge, element, caret) ? adt$2.retry(Carets.translate(higherCaret, JUMP_SIZE, 0)) : adt$2.none();\n    };\n    var upMovement = {\n      point: Carets.getTop,\n      adjuster: adjustUp,\n      move: Carets.moveUp,\n      gather: before$4\n    };\n    var downMovement = {\n      point: Carets.getBottom,\n      adjuster: adjustDown,\n      move: Carets.moveDown,\n      gather: after$5\n    };\n    var isAtTable = function (bridge, x, y) {\n      return bridge.elementFromPoint(x, y).filter(function (elm) {\n        return name(elm) === 'table';\n      }).isSome();\n    };\n    var adjustForTable = function (bridge, movement, original, caret, numRetries) {\n      return adjustTil(bridge, movement, original, movement.move(caret, JUMP_SIZE), numRetries);\n    };\n    var adjustTil = function (bridge, movement, original, caret, numRetries) {\n      if (numRetries === 0)\n        return Option.some(caret);\n      if (isAtTable(bridge, caret.left(), movement.point(caret)))\n        return adjustForTable(bridge, movement, original, caret, numRetries - 1);\n      return bridge.situsFromPoint(caret.left(), movement.point(caret)).bind(function (guess) {\n        return guess.start().fold(Option.none, function (element, offset) {\n          return Rectangles.getEntireBox(bridge, element, offset).bind(function (guessBox) {\n            return movement.adjuster(bridge, element, guessBox, original, caret).fold(Option.none, function (newCaret) {\n              return adjustTil(bridge, movement, original, newCaret, numRetries - 1);\n            });\n          }).orThunk(function () {\n            return Option.some(caret);\n          });\n        }, Option.none);\n      });\n    };\n    var ieTryDown = function (bridge, caret) {\n      return bridge.situsFromPoint(caret.left(), caret.bottom() + JUMP_SIZE);\n    };\n    var ieTryUp = function (bridge, caret) {\n      return bridge.situsFromPoint(caret.left(), caret.top() - JUMP_SIZE);\n    };\n    var checkScroll = function (movement, adjusted, bridge) {\n      if (movement.point(adjusted) > bridge.getInnerHeight())\n        return Option.some(movement.point(adjusted) - bridge.getInnerHeight());\n      else if (movement.point(adjusted) < 0)\n        return Option.some(-movement.point(adjusted));\n      else\n        return Option.none();\n    };\n    var retry = function (movement, bridge, caret) {\n      var moved = movement.move(caret, JUMP_SIZE);\n      var adjusted = adjustTil(bridge, movement, caret, moved, NUM_RETRIES).getOr(moved);\n      return checkScroll(movement, adjusted, bridge).fold(function () {\n        return bridge.situsFromPoint(adjusted.left(), movement.point(adjusted));\n      }, function (delta) {\n        bridge.scrollBy(0, delta);\n        return bridge.situsFromPoint(adjusted.left(), movement.point(adjusted) - delta);\n      });\n    };\n    var Retries = {\n      tryUp: curry(retry, upMovement),\n      tryDown: curry(retry, downMovement),\n      ieTryUp: ieTryUp,\n      ieTryDown: ieTryDown,\n      getJumpSize: constant(JUMP_SIZE)\n    };\n\n    var adt$3 = Adt.generate([\n      { 'none': ['message'] },\n      { 'success': [] },\n      { 'failedUp': ['cell'] },\n      { 'failedDown': ['cell'] }\n    ]);\n    var isOverlapping = function (bridge, before, after) {\n      var beforeBounds = bridge.getRect(before);\n      var afterBounds = bridge.getRect(after);\n      return afterBounds.right > beforeBounds.left && afterBounds.left < beforeBounds.right;\n    };\n    var verify = function (bridge, before, beforeOffset, after, afterOffset, failure, isRoot) {\n      return closest$1(after, 'td,th', isRoot).bind(function (afterCell) {\n        return closest$1(before, 'td,th', isRoot).map(function (beforeCell) {\n          if (!eq(afterCell, beforeCell)) {\n            return DomParent.sharedOne(isRow, [\n              afterCell,\n              beforeCell\n            ]).fold(function () {\n              return isOverlapping(bridge, beforeCell, afterCell) ? adt$3.success() : failure(beforeCell);\n            }, function (sharedRow) {\n              return failure(beforeCell);\n            });\n          } else {\n            return eq(after, afterCell) && getEnd(afterCell) === afterOffset ? failure(beforeCell) : adt$3.none('in same cell');\n          }\n        });\n      }).getOr(adt$3.none('default'));\n    };\n    var isRow = function (elem) {\n      return closest$1(elem, 'tr');\n    };\n    var cata$2 = function (subject, onNone, onSuccess, onFailedUp, onFailedDown) {\n      return subject.fold(onNone, onSuccess, onFailedUp, onFailedDown);\n    };\n    var BeforeAfter = {\n      verify: verify,\n      cata: cata$2,\n      adt: adt$3\n    };\n\n    var point = Immutable('element', 'offset');\n    var delta = Immutable('element', 'deltaOffset');\n    var range$2 = Immutable('element', 'start', 'finish');\n    var points = Immutable('begin', 'end');\n    var text = Immutable('element', 'text');\n\n    var inAncestor = Immutable('ancestor', 'descendants', 'element', 'index');\n    var inParent = Immutable('parent', 'children', 'element', 'index');\n    var indexInParent = function (element) {\n      return parent(element).bind(function (parent) {\n        var children$1 = children(parent);\n        return indexOf(children$1, element).map(function (index) {\n          return inParent(parent, children$1, element, index);\n        });\n      });\n    };\n    var indexOf = function (elements, element) {\n      return findIndex(elements, curry(eq, element));\n    };\n\n    var isBr = function (elem) {\n      return name(elem) === 'br';\n    };\n    var gatherer = function (cand, gather, isRoot) {\n      return gather(cand, isRoot).bind(function (target) {\n        return isText(target) && get$3(target).trim().length === 0 ? gatherer(target, gather, isRoot) : Option.some(target);\n      });\n    };\n    var handleBr = function (isRoot, element, direction) {\n      return direction.traverse(element).orThunk(function () {\n        return gatherer(element, direction.gather, isRoot);\n      }).map(direction.relative);\n    };\n    var findBr = function (element, offset) {\n      return child(element, offset).filter(isBr).orThunk(function () {\n        return child(element, offset - 1).filter(isBr);\n      });\n    };\n    var handleParent = function (isRoot, element, offset, direction) {\n      return findBr(element, offset).bind(function (br) {\n        return direction.traverse(br).fold(function () {\n          return gatherer(br, direction.gather, isRoot).map(direction.relative);\n        }, function (adjacent) {\n          return indexInParent(adjacent).map(function (info) {\n            return Situ.on(info.parent(), info.index());\n          });\n        });\n      });\n    };\n    var tryBr = function (isRoot, element, offset, direction) {\n      var target = isBr(element) ? handleBr(isRoot, element, direction) : handleParent(isRoot, element, offset, direction);\n      return target.map(function (tgt) {\n        return {\n          start: constant(tgt),\n          finish: constant(tgt)\n        };\n      });\n    };\n    var process = function (analysis) {\n      return BeforeAfter.cata(analysis, function (message) {\n        return Option.none();\n      }, function () {\n        return Option.none();\n      }, function (cell) {\n        return Option.some(point(cell, 0));\n      }, function (cell) {\n        return Option.some(point(cell, getEnd(cell)));\n      });\n    };\n    var BrTags = {\n      tryBr: tryBr,\n      process: process\n    };\n\n    var MAX_RETRIES = 20;\n    var platform$1 = PlatformDetection$1.detect();\n    var findSpot = function (bridge, isRoot, direction) {\n      return bridge.getSelection().bind(function (sel) {\n        return BrTags.tryBr(isRoot, sel.finish(), sel.foffset(), direction).fold(function () {\n          return Option.some(point(sel.finish(), sel.foffset()));\n        }, function (brNeighbour) {\n          var range = bridge.fromSitus(brNeighbour);\n          var analysis = BeforeAfter.verify(bridge, sel.finish(), sel.foffset(), range.finish(), range.foffset(), direction.failure, isRoot);\n          return BrTags.process(analysis);\n        });\n      });\n    };\n    var scan = function (bridge, isRoot, element, offset, direction, numRetries) {\n      if (numRetries === 0)\n        return Option.none();\n      return tryCursor(bridge, isRoot, element, offset, direction).bind(function (situs) {\n        var range = bridge.fromSitus(situs);\n        var analysis = BeforeAfter.verify(bridge, element, offset, range.finish(), range.foffset(), direction.failure, isRoot);\n        return BeforeAfter.cata(analysis, function () {\n          return Option.none();\n        }, function () {\n          return Option.some(situs);\n        }, function (cell) {\n          if (eq(element, cell) && offset === 0)\n            return tryAgain(bridge, element, offset, Carets.moveUp, direction);\n          else\n            return scan(bridge, isRoot, cell, 0, direction, numRetries - 1);\n        }, function (cell) {\n          if (eq(element, cell) && offset === getEnd(cell))\n            return tryAgain(bridge, element, offset, Carets.moveDown, direction);\n          else\n            return scan(bridge, isRoot, cell, getEnd(cell), direction, numRetries - 1);\n        });\n      });\n    };\n    var tryAgain = function (bridge, element, offset, move, direction) {\n      return Rectangles.getBoxAt(bridge, element, offset).bind(function (box) {\n        return tryAt(bridge, direction, move(box, Retries.getJumpSize()));\n      });\n    };\n    var tryAt = function (bridge, direction, box) {\n      if (platform$1.browser.isChrome() || platform$1.browser.isSafari() || platform$1.browser.isFirefox() || platform$1.browser.isEdge())\n        return direction.otherRetry(bridge, box);\n      else if (platform$1.browser.isIE())\n        return direction.ieRetry(bridge, box);\n      else\n        return Option.none();\n    };\n    var tryCursor = function (bridge, isRoot, element, offset, direction) {\n      return Rectangles.getBoxAt(bridge, element, offset).bind(function (box) {\n        return tryAt(bridge, direction, box);\n      });\n    };\n    var handle$2 = function (bridge, isRoot, direction) {\n      return findSpot(bridge, isRoot, direction).bind(function (spot) {\n        return scan(bridge, isRoot, spot.element(), spot.offset(), direction, MAX_RETRIES).map(bridge.fromSitus);\n      });\n    };\n    var TableKeys = { handle: handle$2 };\n\n    var ancestor$2 = function (scope, predicate, isRoot) {\n      return ancestor(scope, predicate, isRoot).isSome();\n    };\n\n    var detection = PlatformDetection$1.detect();\n    var inSameTable = function (elem, table) {\n      return ancestor$2(elem, function (e) {\n        return parent(e).exists(function (p) {\n          return eq(p, table);\n        });\n      });\n    };\n    var simulate = function (bridge, isRoot, direction, initial, anchor) {\n      return closest$1(initial, 'td,th', isRoot).bind(function (start) {\n        return closest$1(start, 'table', isRoot).bind(function (table) {\n          if (!inSameTable(anchor, table))\n            return Option.none();\n          return TableKeys.handle(bridge, isRoot, direction).bind(function (range) {\n            return closest$1(range.finish(), 'td,th', isRoot).map(function (finish) {\n              return {\n                start: constant(start),\n                finish: constant(finish),\n                range: constant(range)\n              };\n            });\n          });\n        });\n      });\n    };\n    var navigate = function (bridge, isRoot, direction, initial, anchor, precheck) {\n      if (detection.browser.isIE()) {\n        return Option.none();\n      } else {\n        return precheck(initial, isRoot).orThunk(function () {\n          return simulate(bridge, isRoot, direction, initial, anchor).map(function (info) {\n            var range = info.range();\n            return Responses.response(Option.some(Util$1.makeSitus(range.start(), range.soffset(), range.finish(), range.foffset())), true);\n          });\n        });\n      }\n    };\n    var firstUpCheck = function (initial, isRoot) {\n      return closest$1(initial, 'tr', isRoot).bind(function (startRow) {\n        return closest$1(startRow, 'table', isRoot).bind(function (table) {\n          var rows = descendants$1(table, 'tr');\n          if (eq(startRow, rows[0])) {\n            return seekLeft$1(table, function (element) {\n              return last$1(element).isSome();\n            }, isRoot).map(function (last) {\n              var lastOffset = getEnd(last);\n              return Responses.response(Option.some(Util$1.makeSitus(last, lastOffset, last, lastOffset)), true);\n            });\n          } else {\n            return Option.none();\n          }\n        });\n      });\n    };\n    var lastDownCheck = function (initial, isRoot) {\n      return closest$1(initial, 'tr', isRoot).bind(function (startRow) {\n        return closest$1(startRow, 'table', isRoot).bind(function (table) {\n          var rows = descendants$1(table, 'tr');\n          if (eq(startRow, rows[rows.length - 1])) {\n            return seekRight$1(table, function (element) {\n              return first(element).isSome();\n            }, isRoot).map(function (first) {\n              return Responses.response(Option.some(Util$1.makeSitus(first, 0, first, 0)), true);\n            });\n          } else {\n            return Option.none();\n          }\n        });\n      });\n    };\n    var select = function (bridge, container, isRoot, direction, initial, anchor, selectRange) {\n      return simulate(bridge, isRoot, direction, initial, anchor).bind(function (info) {\n        return KeySelection.detect(container, isRoot, info.start(), info.finish(), selectRange);\n      });\n    };\n    var VerticalMovement = {\n      navigate: navigate,\n      select: select,\n      firstUpCheck: firstUpCheck,\n      lastDownCheck: lastDownCheck\n    };\n\n    var findCell = function (target, isRoot) {\n      return closest$1(target, 'td,th', isRoot);\n    };\n    function MouseSelection (bridge, container, isRoot, annotations) {\n      var cursor = Option.none();\n      var clearState = function () {\n        cursor = Option.none();\n      };\n      var mousedown = function (event) {\n        annotations.clear(container);\n        cursor = findCell(event.target(), isRoot);\n      };\n      var mouseover = function (event) {\n        cursor.each(function (start) {\n          annotations.clear(container);\n          findCell(event.target(), isRoot).each(function (finish) {\n            CellSelection.identify(start, finish, isRoot).each(function (cellSel) {\n              var boxes = cellSel.boxes().getOr([]);\n              if (boxes.length > 1 || boxes.length === 1 && !eq(start, finish)) {\n                annotations.selectRange(container, boxes, cellSel.start(), cellSel.finish());\n                bridge.selectContents(finish);\n              }\n            });\n          });\n        });\n      };\n      var mouseup = function () {\n        cursor.each(clearState);\n      };\n      return {\n        mousedown: mousedown,\n        mouseover: mouseover,\n        mouseup: mouseup\n      };\n    }\n\n    var KeyDirection = {\n      down: {\n        traverse: nextSibling,\n        gather: after$5,\n        relative: Situ.before,\n        otherRetry: Retries.tryDown,\n        ieRetry: Retries.ieTryDown,\n        failure: BeforeAfter.adt.failedDown\n      },\n      up: {\n        traverse: prevSibling,\n        gather: before$4,\n        relative: Situ.before,\n        otherRetry: Retries.tryUp,\n        ieRetry: Retries.ieTryUp,\n        failure: BeforeAfter.adt.failedUp\n      }\n    };\n\n    var rc = Immutable('rows', 'cols');\n    var mouse = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      var handlers = MouseSelection(bridge, container, isRoot, annotations);\n      return {\n        mousedown: handlers.mousedown,\n        mouseover: handlers.mouseover,\n        mouseup: handlers.mouseup\n      };\n    };\n    var keyboard = function (win, container, isRoot, annotations) {\n      var bridge = WindowBridge(win);\n      var clearToNavigate = function () {\n        annotations.clear(container);\n        return Option.none();\n      };\n      var keydown = function (event, start, soffset, finish, foffset, direction) {\n        var keycode = event.raw().which;\n        var shiftKey = event.raw().shiftKey === true;\n        var handler = CellSelection.retrieve(container, annotations.selectedSelector()).fold(function () {\n          if (SelectionKeys.isDown(keycode) && shiftKey) {\n            return curry(VerticalMovement.select, bridge, container, isRoot, KeyDirection.down, finish, start, annotations.selectRange);\n          } else if (SelectionKeys.isUp(keycode) && shiftKey) {\n            return curry(VerticalMovement.select, bridge, container, isRoot, KeyDirection.up, finish, start, annotations.selectRange);\n          } else if (SelectionKeys.isDown(keycode)) {\n            return curry(VerticalMovement.navigate, bridge, isRoot, KeyDirection.down, finish, start, VerticalMovement.lastDownCheck);\n          } else if (SelectionKeys.isUp(keycode)) {\n            return curry(VerticalMovement.navigate, bridge, isRoot, KeyDirection.up, finish, start, VerticalMovement.firstUpCheck);\n          } else {\n            return Option.none;\n          }\n        }, function (selected) {\n          var update = function (attempts) {\n            return function () {\n              var navigation = findMap(attempts, function (delta) {\n                return KeySelection.update(delta.rows(), delta.cols(), container, selected, annotations);\n              });\n              return navigation.fold(function () {\n                return CellSelection.getEdges(container, annotations.firstSelectedSelector(), annotations.lastSelectedSelector()).map(function (edges) {\n                  var relative = SelectionKeys.isDown(keycode) || direction.isForward(keycode) ? Situ.after : Situ.before;\n                  bridge.setRelativeSelection(Situ.on(edges.first(), 0), relative(edges.table()));\n                  annotations.clear(container);\n                  return Responses.response(Option.none(), true);\n                });\n              }, function (_) {\n                return Option.some(Responses.response(Option.none(), true));\n              });\n            };\n          };\n          if (SelectionKeys.isDown(keycode) && shiftKey)\n            return update([rc(+1, 0)]);\n          else if (SelectionKeys.isUp(keycode) && shiftKey)\n            return update([rc(-1, 0)]);\n          else if (direction.isBackward(keycode) && shiftKey)\n            return update([\n              rc(0, -1),\n              rc(-1, 0)\n            ]);\n          else if (direction.isForward(keycode) && shiftKey)\n            return update([\n              rc(0, +1),\n              rc(+1, 0)\n            ]);\n          else if (SelectionKeys.isNavigation(keycode) && shiftKey === false)\n            return clearToNavigate;\n          else\n            return Option.none;\n        });\n        return handler();\n      };\n      var keyup = function (event, start, soffset, finish, foffset) {\n        return CellSelection.retrieve(container, annotations.selectedSelector()).fold(function () {\n          var keycode = event.raw().which;\n          var shiftKey = event.raw().shiftKey === true;\n          if (shiftKey === false)\n            return Option.none();\n          if (SelectionKeys.isNavigation(keycode))\n            return KeySelection.sync(container, isRoot, start, soffset, finish, foffset, annotations.selectRange);\n          else\n            return Option.none();\n        }, Option.none);\n      };\n      return {\n        keydown: keydown,\n        keyup: keyup\n      };\n    };\n    var InputHandlers = {\n      mouse: mouse,\n      keyboard: keyboard\n    };\n\n    var remove$7 = function (element, classes) {\n      each(classes, function (x) {\n        remove$5(element, x);\n      });\n    };\n\n    var addClass = function (clazz) {\n      return function (element) {\n        add$2(element, clazz);\n      };\n    };\n    var removeClasses = function (classes) {\n      return function (element) {\n        remove$7(element, classes);\n      };\n    };\n\n    var byClass = function (ephemera) {\n      var addSelectionClass = addClass(ephemera.selected());\n      var removeSelectionClasses = removeClasses([\n        ephemera.selected(),\n        ephemera.lastSelected(),\n        ephemera.firstSelected()\n      ]);\n      var clear = function (container) {\n        var sels = descendants$1(container, ephemera.selectedSelector());\n        each(sels, removeSelectionClasses);\n      };\n      var selectRange = function (container, cells, start, finish) {\n        clear(container);\n        each(cells, addSelectionClass);\n        add$2(start, ephemera.firstSelected());\n        add$2(finish, ephemera.lastSelected());\n      };\n      return {\n        clear: clear,\n        selectRange: selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    var byAttr = function (ephemera) {\n      var removeSelectionAttributes = function (element) {\n        remove(element, ephemera.selected());\n        remove(element, ephemera.firstSelected());\n        remove(element, ephemera.lastSelected());\n      };\n      var addSelectionAttribute = function (element) {\n        set(element, ephemera.selected(), '1');\n      };\n      var clear = function (container) {\n        var sels = descendants$1(container, ephemera.selectedSelector());\n        each(sels, removeSelectionAttributes);\n      };\n      var selectRange = function (container, cells, start, finish) {\n        clear(container);\n        each(cells, addSelectionAttribute);\n        set(start, ephemera.firstSelected(), '1');\n        set(finish, ephemera.lastSelected(), '1');\n      };\n      return {\n        clear: clear,\n        selectRange: selectRange,\n        selectedSelector: ephemera.selectedSelector,\n        firstSelectedSelector: ephemera.firstSelectedSelector,\n        lastSelectedSelector: ephemera.lastSelectedSelector\n      };\n    };\n    var SelectionAnnotation = {\n      byClass: byClass,\n      byAttr: byAttr\n    };\n\n    var hasInternalTarget = function (e) {\n      return has$2(Element.fromDom(e.target), 'ephox-snooker-resizer-bar') === false;\n    };\n    function CellSelection$1 (editor, lazyResize) {\n      var handlerStruct = MixedBag([\n        'mousedown',\n        'mouseover',\n        'mouseup',\n        'keyup',\n        'keydown'\n      ], []);\n      var handlers = Option.none();\n      var annotations = SelectionAnnotation.byAttr(Ephemera);\n      editor.on('init', function (e) {\n        var win = editor.getWin();\n        var body = getBody$1(editor);\n        var isRoot = getIsRoot(editor);\n        var syncSelection = function () {\n          var sel = editor.selection;\n          var start = Element.fromDom(sel.getStart());\n          var end = Element.fromDom(sel.getEnd());\n          var shared = DomParent.sharedOne(TableLookup.table, [\n            start,\n            end\n          ]);\n          shared.fold(function () {\n            annotations.clear(body);\n          }, noop);\n        };\n        var mouseHandlers = InputHandlers.mouse(win, body, isRoot, annotations);\n        var keyHandlers = InputHandlers.keyboard(win, body, isRoot, annotations);\n        var hasShiftKey = function (event) {\n          return event.raw().shiftKey === true;\n        };\n        var handleResponse = function (event, response) {\n          if (!hasShiftKey(event)) {\n            return;\n          }\n          if (response.kill()) {\n            event.kill();\n          }\n          response.selection().each(function (ns) {\n            var relative$1 = relative(ns.start(), ns.finish());\n            var rng = asLtrRange(win, relative$1);\n            editor.selection.setRng(rng);\n          });\n        };\n        var keyup = function (event) {\n          var wrappedEvent = wrapEvent(event);\n          if (wrappedEvent.raw().shiftKey && SelectionKeys.isNavigation(wrappedEvent.raw().which)) {\n            var rng = editor.selection.getRng();\n            var start = Element.fromDom(rng.startContainer);\n            var end = Element.fromDom(rng.endContainer);\n            keyHandlers.keyup(wrappedEvent, start, rng.startOffset, end, rng.endOffset).each(function (response) {\n              handleResponse(wrappedEvent, response);\n            });\n          }\n        };\n        var keydown = function (event) {\n          var wrappedEvent = wrapEvent(event);\n          lazyResize().each(function (resize) {\n            resize.hideBars();\n          });\n          var rng = editor.selection.getRng();\n          var startContainer = Element.fromDom(editor.selection.getStart());\n          var start = Element.fromDom(rng.startContainer);\n          var end = Element.fromDom(rng.endContainer);\n          var direction = Direction.directionAt(startContainer).isRtl() ? SelectionKeys.rtl : SelectionKeys.ltr;\n          keyHandlers.keydown(wrappedEvent, start, rng.startOffset, end, rng.endOffset, direction).each(function (response) {\n            handleResponse(wrappedEvent, response);\n          });\n          lazyResize().each(function (resize) {\n            resize.showBars();\n          });\n        };\n        var isMouseEvent = function (event) {\n          return event.hasOwnProperty('x') && event.hasOwnProperty('y');\n        };\n        var wrapEvent = function (event) {\n          var target = Element.fromDom(event.target);\n          var stop = function () {\n            event.stopPropagation();\n          };\n          var prevent = function () {\n            event.preventDefault();\n          };\n          var kill = compose(prevent, stop);\n          return {\n            target: constant(target),\n            x: constant(isMouseEvent(event) ? event.x : null),\n            y: constant(isMouseEvent(event) ? event.y : null),\n            stop: stop,\n            prevent: prevent,\n            kill: kill,\n            raw: constant(event)\n          };\n        };\n        var isLeftMouse = function (raw) {\n          return raw.button === 0;\n        };\n        var isLeftButtonPressed = function (raw) {\n          if (raw.buttons === undefined) {\n            return true;\n          }\n          return (raw.buttons & 1) !== 0;\n        };\n        var mouseDown = function (e) {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mousedown(wrapEvent(e));\n          }\n        };\n        var mouseOver = function (e) {\n          if (isLeftButtonPressed(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseover(wrapEvent(e));\n          }\n        };\n        var mouseUp = function (e) {\n          if (isLeftMouse(e) && hasInternalTarget(e)) {\n            mouseHandlers.mouseup(wrapEvent(e));\n          }\n        };\n        editor.on('mousedown', mouseDown);\n        editor.on('mouseover', mouseOver);\n        editor.on('mouseup', mouseUp);\n        editor.on('keyup', keyup);\n        editor.on('keydown', keydown);\n        editor.on('nodechange', syncSelection);\n        handlers = Option.some(handlerStruct({\n          mousedown: mouseDown,\n          mouseover: mouseOver,\n          mouseup: mouseUp,\n          keyup: keyup,\n          keydown: keydown\n        }));\n      });\n      var destroy = function () {\n        handlers.each(function (handlers) {\n        });\n      };\n      return {\n        clear: annotations.clear,\n        destroy: destroy\n      };\n    }\n\n    var Selections = function (editor) {\n      var get = function () {\n        var body = getBody$1(editor);\n        return TableSelection.retrieve(body, Ephemera.selectedSelector()).fold(function () {\n          if (editor.selection.getStart() === undefined) {\n            return SelectionTypes.none();\n          } else {\n            return SelectionTypes.single(editor.selection);\n          }\n        }, function (cells) {\n          return SelectionTypes.multiple(cells);\n        });\n      };\n      return { get: get };\n    };\n\n    var SelectionTargets = function (editor, selections) {\n      var targets = Cell(Option.none());\n      var changeHandlers = Cell([]);\n      var findTargets = function () {\n        return getSelectionStartCellOrCaption(editor).bind(function (cellOrCaption) {\n          var table = TableLookup.table(cellOrCaption);\n          return table.map(function (table) {\n            if (name(cellOrCaption) === 'caption') {\n              return TableTargets.notCell(cellOrCaption);\n            } else {\n              return TableTargets.forMenu(selections, table, cellOrCaption);\n            }\n          });\n        });\n      };\n      var resetTargets = function () {\n        targets.set(cached(findTargets)());\n        each(changeHandlers.get(), function (handler) {\n          return handler();\n        });\n      };\n      var onSetup = function (api, isDisabled) {\n        var handler = function () {\n          return targets.get().fold(function () {\n            api.setDisabled(true);\n          }, function (targets) {\n            api.setDisabled(isDisabled(targets));\n          });\n        };\n        handler();\n        changeHandlers.set(changeHandlers.get().concat([handler]));\n        return function () {\n          changeHandlers.set(filter(changeHandlers.get(), function (h) {\n            return h !== handler;\n          }));\n        };\n      };\n      var onSetupTable = function (api) {\n        return onSetup(api, function (_) {\n          return false;\n        });\n      };\n      var onSetupCellOrRow = function (api) {\n        return onSetup(api, function (targets) {\n          return name(targets.element()) === 'caption';\n        });\n      };\n      var onSetupMergeable = function (api) {\n        return onSetup(api, function (targets) {\n          return targets.mergable().isNone();\n        });\n      };\n      var onSetupUnmergeable = function (api) {\n        return onSetup(api, function (targets) {\n          return targets.unmergable().isNone();\n        });\n      };\n      editor.on('nodechange', resetTargets);\n      return {\n        onSetupTable: onSetupTable,\n        onSetupCellOrRow: onSetupCellOrRow,\n        onSetupMergeable: onSetupMergeable,\n        onSetupUnmergeable: onSetupUnmergeable,\n        resetTargets: resetTargets,\n        targets: function () {\n          return targets.get();\n        }\n      };\n    };\n\n    var addButtons = function (editor, selectionTargets) {\n      editor.ui.registry.addMenuButton('table', {\n        tooltip: 'Table',\n        icon: 'table',\n        fetch: function (callback) {\n          return callback('inserttable tableprops deletetable | cell row column');\n        }\n      });\n      var cmd = function (command) {\n        return function () {\n          return editor.execCommand(command);\n        };\n      };\n      editor.ui.registry.addButton('tableprops', {\n        tooltip: 'Table properties',\n        onAction: cmd('mceTableProps'),\n        icon: 'table',\n        onSetup: selectionTargets.onSetupTable\n      });\n      editor.ui.registry.addButton('tabledelete', {\n        tooltip: 'Delete table',\n        onAction: cmd('mceTableDelete'),\n        icon: 'table-delete-table',\n        onSetup: selectionTargets.onSetupTable\n      });\n      editor.ui.registry.addButton('tablecellprops', {\n        tooltip: 'Cell properties',\n        onAction: cmd('mceTableCellProps'),\n        icon: 'table-cell-properties',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablemergecells', {\n        tooltip: 'Merge cells',\n        onAction: cmd('mceTableMergeCells'),\n        icon: 'table-merge-cells',\n        onSetup: selectionTargets.onSetupMergeable\n      });\n      editor.ui.registry.addButton('tablesplitcells', {\n        tooltip: 'Split cell',\n        onAction: cmd('mceTableSplitCells'),\n        icon: 'table-split-cells',\n        onSetup: selectionTargets.onSetupUnmergeable\n      });\n      editor.ui.registry.addButton('tableinsertrowbefore', {\n        tooltip: 'Insert row before',\n        onAction: cmd('mceTableInsertRowBefore'),\n        icon: 'table-insert-row-above',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tableinsertrowafter', {\n        tooltip: 'Insert row after',\n        onAction: cmd('mceTableInsertRowAfter'),\n        icon: 'table-insert-row-after',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tabledeleterow', {\n        tooltip: 'Delete row',\n        onAction: cmd('mceTableDeleteRow'),\n        icon: 'table-delete-row',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablerowprops', {\n        tooltip: 'Row properties',\n        onAction: cmd('mceTableRowProps'),\n        icon: 'table-row-properties',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tableinsertcolbefore', {\n        tooltip: 'Insert column before',\n        onAction: cmd('mceTableInsertColBefore'),\n        icon: 'table-insert-column-before',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tableinsertcolafter', {\n        tooltip: 'Insert column after',\n        onAction: cmd('mceTableInsertColAfter'),\n        icon: 'table-insert-column-after',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tabledeletecol', {\n        tooltip: 'Delete column',\n        onAction: cmd('mceTableDeleteCol'),\n        icon: 'table-delete-column',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablecutrow', {\n        tooltip: 'Cut row',\n        onAction: cmd('mceTableCutRow'),\n        icon: 'temporary-placeholder',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablecopyrow', {\n        tooltip: 'Copy row',\n        onAction: cmd('mceTableCopyRow'),\n        icon: 'temporary-placeholder',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablepasterowbefore', {\n        tooltip: 'Paste row before',\n        onAction: cmd('mceTablePasteRowBefore'),\n        icon: 'temporary-placeholder',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n      editor.ui.registry.addButton('tablepasterowafter', {\n        tooltip: 'Paste row after',\n        onAction: cmd('mceTablePasteRowAfter'),\n        icon: 'temporary-placeholder',\n        onSetup: selectionTargets.onSetupCellOrRow\n      });\n    };\n    var addToolbars = function (editor) {\n      var isTable = function (table) {\n        return editor.dom.is(table, 'table') && editor.getBody().contains(table);\n      };\n      var toolbar = getToolbar(editor);\n      if (toolbar.length > 0) {\n        editor.ui.registry.addContextToolbar('table', {\n          predicate: isTable,\n          items: toolbar,\n          scope: 'node',\n          position: 'node'\n        });\n      }\n    };\n    var Buttons = {\n      addButtons: addButtons,\n      addToolbars: addToolbars\n    };\n\n    var addMenuItems = function (editor, selectionTargets) {\n      var cmd = function (command) {\n        return function () {\n          return editor.execCommand(command);\n        };\n      };\n      var insertTableAction = function (_a) {\n        var numRows = _a.numRows, numColumns = _a.numColumns;\n        editor.undoManager.transact(function () {\n          InsertTable.insert(editor, numColumns, numRows);\n        });\n        editor.addVisual();\n      };\n      var tableProperties = {\n        text: 'Table properties',\n        onSetup: selectionTargets.onSetupTable,\n        onAction: cmd('mceTableProps')\n      };\n      var deleteTable = {\n        text: 'Delete table',\n        icon: 'table-delete-table',\n        onSetup: selectionTargets.onSetupTable,\n        onAction: cmd('mceTableDelete')\n      };\n      var row = {\n        type: 'nestedmenuitem',\n        text: 'Row',\n        getSubmenuItems: function () {\n          return [\n            {\n              type: 'menuitem',\n              text: 'Insert row before',\n              icon: 'table-insert-row-above',\n              onAction: cmd('mceTableInsertRowBefore'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Insert row after',\n              icon: 'table-insert-row-after',\n              onAction: cmd('mceTableInsertRowAfter'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Delete row',\n              icon: 'table-delete-row',\n              onAction: cmd('mceTableDeleteRow'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Row properties',\n              icon: 'table-row-properties',\n              onAction: cmd('mceTableRowProps'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            { type: 'separator' },\n            {\n              type: 'menuitem',\n              text: 'Cut row',\n              onAction: cmd('mceTableCutRow'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Copy row',\n              onAction: cmd('mceTableCopyRow'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Paste row before',\n              onAction: cmd('mceTablePasteRowBefore'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Paste row after',\n              onAction: cmd('mceTablePasteRowAfter'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            }\n          ];\n        }\n      };\n      var column = {\n        type: 'nestedmenuitem',\n        text: 'Column',\n        getSubmenuItems: function () {\n          return [\n            {\n              type: 'menuitem',\n              text: 'Insert column before',\n              icon: 'table-insert-column-before',\n              onAction: cmd('mceTableInsertColBefore'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Insert column after',\n              icon: 'table-insert-column-after',\n              onAction: cmd('mceTableInsertColAfter'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Delete column',\n              icon: 'table-delete-column',\n              onAction: cmd('mceTableDeleteCol'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            }\n          ];\n        }\n      };\n      var cell = {\n        type: 'nestedmenuitem',\n        text: 'Cell',\n        getSubmenuItems: function () {\n          return [\n            {\n              type: 'menuitem',\n              text: 'Cell properties',\n              icon: 'table-cell-properties',\n              onAction: cmd('mceTableCellProps'),\n              onSetup: selectionTargets.onSetupCellOrRow\n            },\n            {\n              type: 'menuitem',\n              text: 'Merge cells',\n              icon: 'table-merge-cells',\n              onAction: cmd('mceTableMergeCells'),\n              onSetup: selectionTargets.onSetupMergeable\n            },\n            {\n              type: 'menuitem',\n              text: 'Split cell',\n              icon: 'table-split-cells',\n              onAction: cmd('mceTableSplitCells'),\n              onSetup: selectionTargets.onSetupUnmergeable\n            }\n          ];\n        }\n      };\n      if (hasTableGrid(editor) === false) {\n        editor.ui.registry.addMenuItem('inserttable', {\n          text: 'Table',\n          icon: 'table',\n          onAction: cmd('mceInsertTable')\n        });\n      } else {\n        editor.ui.registry.addNestedMenuItem('inserttable', {\n          text: 'Table',\n          icon: 'table',\n          getSubmenuItems: function () {\n            return [{\n                type: 'fancymenuitem',\n                fancytype: 'inserttable',\n                onAction: insertTableAction\n              }];\n          }\n        });\n      }\n      editor.ui.registry.addMenuItem('tableprops', tableProperties);\n      editor.ui.registry.addMenuItem('deletetable', deleteTable);\n      editor.ui.registry.addNestedMenuItem('row', row);\n      editor.ui.registry.addNestedMenuItem('column', column);\n      editor.ui.registry.addNestedMenuItem('cell', cell);\n      editor.ui.registry.addContextMenu('table', {\n        update: function () {\n          selectionTargets.resetTargets();\n          return selectionTargets.targets().fold(function () {\n            return '';\n          }, function (targets) {\n            if (name(targets.element()) === 'caption') {\n              return 'tableprops deletetable';\n            } else {\n              return 'cell row column | tableprops deletetable';\n            }\n          });\n        }\n      });\n    };\n    var MenuItems = { addMenuItems: addMenuItems };\n\n    var getClipboardRows = function (clipboardRows) {\n      return clipboardRows.get().fold(function () {\n        return;\n      }, function (rows) {\n        return map(rows, function (row) {\n          return row.dom();\n        });\n      });\n    };\n    var setClipboardRows = function (rows, clipboardRows) {\n      var sugarRows = map(rows, Element.fromDom);\n      clipboardRows.set(Option.from(sugarRows));\n    };\n    var getApi = function (editor, clipboardRows) {\n      return {\n        insertTable: function (columns, rows) {\n          return InsertTable.insert(editor, columns, rows);\n        },\n        setClipboardRows: function (rows) {\n          return setClipboardRows(rows, clipboardRows);\n        },\n        getClipboardRows: function () {\n          return getClipboardRows(clipboardRows);\n        }\n      };\n    };\n\n    function Plugin(editor) {\n      var resizeHandler = ResizeHandler(editor);\n      var cellSelection = CellSelection$1(editor, resizeHandler.lazyResize);\n      var actions = TableActions(editor, resizeHandler.lazyWire);\n      var selections = Selections(editor);\n      var selectionTargets = SelectionTargets(editor, selections);\n      var clipboardRows = Cell(Option.none());\n      Commands.registerCommands(editor, actions, cellSelection, selections, clipboardRows);\n      Clipboard.registerEvents(editor, selections, actions, cellSelection);\n      MenuItems.addMenuItems(editor, selectionTargets);\n      Buttons.addButtons(editor, selectionTargets);\n      Buttons.addToolbars(editor);\n      editor.on('PreInit', function () {\n        editor.serializer.addTempAttr(Ephemera.firstSelected());\n        editor.serializer.addTempAttr(Ephemera.lastSelected());\n      });\n      if (hasTabNavigation(editor)) {\n        editor.on('keydown', function (e) {\n          TabContext.handle(e, editor, actions, resizeHandler.lazyWire);\n        });\n      }\n      editor.on('remove', function () {\n        resizeHandler.destroy();\n        cellSelection.destroy();\n      });\n      return getApi(editor, clipboardRows);\n    }\n    global.add('table', Plugin);\n    function Plugin$1 () {\n    }\n\n    return Plugin$1;\n\n}(window));\n})();\n","// Exports the \"link\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/link')\n//   ES2015:\n//     import 'tinymce/plugins/link'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.0.2 (2019-03-05)\n */\n(function () {\nvar link = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.VK');\n\n    var assumeExternalTargets = function (editorSettings) {\n      return typeof editorSettings.link_assume_external_targets === 'boolean' ? editorSettings.link_assume_external_targets : false;\n    };\n    var hasContextToolbar = function (editorSettings) {\n      return typeof editorSettings.link_context_toolbar === 'boolean' ? editorSettings.link_context_toolbar : false;\n    };\n    var getLinkList = function (editorSettings) {\n      return editorSettings.link_list;\n    };\n    var hasDefaultLinkTarget = function (editorSettings) {\n      return typeof editorSettings.default_link_target === 'string';\n    };\n    var useQuickLink = function (editorSettings) {\n      return editorSettings.link_quicklink === true;\n    };\n    var getDefaultLinkTarget = function (editorSettings) {\n      return editorSettings.default_link_target;\n    };\n    var getTargetList = function (editorSettings) {\n      return editorSettings.target_list;\n    };\n    var setTargetList = function (editor, list) {\n      editor.settings.target_list = list;\n    };\n    var shouldShowTargetList = function (editorSettings) {\n      return getTargetList(editorSettings) !== false;\n    };\n    var getRelList = function (editorSettings) {\n      return editorSettings.rel_list;\n    };\n    var hasRelList = function (editorSettings) {\n      return getRelList(editorSettings) !== undefined;\n    };\n    var getLinkClassList = function (editorSettings) {\n      return editorSettings.link_class_list;\n    };\n    var hasLinkClassList = function (editorSettings) {\n      return getLinkClassList(editorSettings) !== undefined;\n    };\n    var shouldShowLinkTitle = function (editorSettings) {\n      return editorSettings.link_title !== false;\n    };\n    var allowUnsafeLinkTarget = function (editorSettings) {\n      return typeof editorSettings.allow_unsafe_link_target === 'boolean' ? editorSettings.allow_unsafe_link_target : false;\n    };\n    var Settings = {\n      assumeExternalTargets: assumeExternalTargets,\n      hasContextToolbar: hasContextToolbar,\n      getLinkList: getLinkList,\n      hasDefaultLinkTarget: hasDefaultLinkTarget,\n      getDefaultLinkTarget: getDefaultLinkTarget,\n      getTargetList: getTargetList,\n      setTargetList: setTargetList,\n      shouldShowTargetList: shouldShowTargetList,\n      getRelList: getRelList,\n      hasRelList: hasRelList,\n      getLinkClassList: getLinkClassList,\n      hasLinkClassList: hasLinkClassList,\n      shouldShowLinkTitle: shouldShowLinkTitle,\n      allowUnsafeLinkTarget: allowUnsafeLinkTarget,\n      useQuickLink: useQuickLink\n    };\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.Env');\n\n    var appendClickRemove = function (link, evt) {\n      domGlobals.document.body.appendChild(link);\n      link.dispatchEvent(evt);\n      domGlobals.document.body.removeChild(link);\n    };\n    var open = function (url) {\n      if (!global$3.ie || global$3.ie > 10) {\n        var link = domGlobals.document.createElement('a');\n        link.target = '_blank';\n        link.href = url;\n        link.rel = 'noreferrer noopener';\n        var evt = domGlobals.document.createEvent('MouseEvents');\n        evt.initMouseEvent('click', true, true, domGlobals.window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n        appendClickRemove(link, evt);\n      } else {\n        var win = domGlobals.window.open('', '_blank');\n        if (win) {\n          win.opener = null;\n          var doc = win.document;\n          doc.open();\n          doc.write('<meta http-equiv=\"refresh\" content=\"0; url=' + global$2.DOM.encode(url) + '\">');\n          doc.close();\n        }\n      }\n    };\n    var OpenUrl = { open: open };\n\n    var noop = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var never$1 = never;\n    var always$1 = always;\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var noop = function () {\n      };\n      var nul = function () {\n        return null;\n      };\n      var undef = function () {\n        return undefined;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never$1,\n        isSome: never$1,\n        isNone: always$1,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: nul,\n        getOrUndefined: undef,\n        or: id,\n        orThunk: call,\n        map: none,\n        ap: none,\n        each: noop,\n        bind: none,\n        flatten: none,\n        exists: never$1,\n        forall: always$1,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze)\n        Object.freeze(me);\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = function () {\n        return a;\n      };\n      var self = function () {\n        return me;\n      };\n      var map = function (f) {\n        return some(f(a));\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always$1,\n        isNone: never$1,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: map,\n        ap: function (optfab) {\n          return optfab.fold(none, function (fab) {\n            return some(fab(a));\n          });\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        flatten: constant_a,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never$1, function (b) {\n            return elementEq(a, b);\n          });\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null)\n        return 'null';\n      var t = typeof x;\n      if (t === 'object' && Array.prototype.isPrototypeOf(x))\n        return 'array';\n      if (t === 'object' && String.prototype.isPrototypeOf(x))\n        return 'string';\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isFunction = isType('function');\n\n    var rawIndexOf = function () {\n      var pIndexOf = Array.prototype.indexOf;\n      var fastIndex = function (xs, x) {\n        return pIndexOf.call(xs, x);\n      };\n      var slowIndex = function (xs, x) {\n        return slowIndexOf(xs, x);\n      };\n      return pIndexOf === undefined ? slowIndex : fastIndex;\n    }();\n    var contains = function (xs, x) {\n      return rawIndexOf(xs, x) > -1;\n    };\n    var map = function (xs, f) {\n      var len = xs.length;\n      var r = new Array(len);\n      for (var i = 0; i < len; i++) {\n        var x = xs[i];\n        r[i] = f(x, i, xs);\n      }\n      return r;\n    };\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i, xs);\n      }\n    };\n    var foldl = function (xs, f, acc) {\n      each(xs, function (x) {\n        acc = f(acc, x);\n      });\n      return acc;\n    };\n    var slowIndexOf = function (xs, x) {\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (xs[i] === x) {\n          return i;\n        }\n      }\n      return -1;\n    };\n    var push = Array.prototype.push;\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!Array.prototype.isPrototypeOf(xs[i]))\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        push.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var bind = function (xs, f) {\n      var output = map(xs, f);\n      return flatten(output);\n    };\n    var slice = Array.prototype.slice;\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return slice.call(x);\n    };\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var getHref = function (elm) {\n      var href = elm.getAttribute('data-mce-href');\n      return href ? href : elm.getAttribute('href');\n    };\n    var applyRelTargetRules = function (rel, isUnsafe) {\n      var rules = ['noopener'];\n      var rels = rel ? rel.split(/\\s+/) : [];\n      var toString = function (rels) {\n        return global$4.trim(rels.sort().join(' '));\n      };\n      var addTargetRules = function (rels) {\n        rels = removeTargetRules(rels);\n        return rels.length > 0 ? rels.concat(rules) : rules;\n      };\n      var removeTargetRules = function (rels) {\n        return rels.filter(function (val) {\n          return global$4.inArray(rules, val) === -1;\n        });\n      };\n      var newRels = isUnsafe ? addTargetRules(rels) : removeTargetRules(rels);\n      return newRels.length > 0 ? toString(newRels) : '';\n    };\n    var trimCaretContainers = function (text) {\n      return text.replace(/\\uFEFF/g, '');\n    };\n    var getAnchorElement = function (editor, selectedElm) {\n      selectedElm = selectedElm || editor.selection.getNode();\n      if (isImageFigure(selectedElm)) {\n        return editor.dom.select('a[href]', selectedElm)[0];\n      } else {\n        return editor.dom.getParent(selectedElm, 'a[href]');\n      }\n    };\n    var getAnchorText = function (selection, anchorElm) {\n      var text = anchorElm ? anchorElm.innerText || anchorElm.textContent : selection.getContent({ format: 'text' });\n      return trimCaretContainers(text);\n    };\n    var isLink = function (elm) {\n      return elm && elm.nodeName === 'A' && !!elm.href;\n    };\n    var hasLinks = function (elements) {\n      return global$4.grep(elements, isLink).length > 0;\n    };\n    var isOnlyTextSelected = function (html) {\n      if (/</.test(html) && (!/^<a [^>]+>[^<]+<\\/a>$/.test(html) || html.indexOf('href=') === -1)) {\n        return false;\n      }\n      return true;\n    };\n    var isImageFigure = function (elm) {\n      return elm && elm.nodeName === 'FIGURE' && /\\bimage\\b/i.test(elm.className);\n    };\n    var getLinkAttrs = function (data) {\n      return foldl([\n        'title',\n        'rel',\n        'class',\n        'target'\n      ], function (acc, key) {\n        data[key].each(function (value) {\n          acc[key] = value.length > 0 ? value : null;\n        });\n        return acc;\n      }, { href: data.href });\n    };\n    var updateLink = function (editor, anchorElm, text, linkAttrs) {\n      text.each(function (text) {\n        if (anchorElm.hasOwnProperty('innerText')) {\n          anchorElm.innerText = text;\n        } else {\n          anchorElm.textContent = text;\n        }\n      });\n      editor.dom.setAttribs(anchorElm, linkAttrs);\n      editor.selection.select(anchorElm);\n    };\n    var createLink = function (editor, selectedElm, text, linkAttrs) {\n      if (isImageFigure(selectedElm)) {\n        linkImageFigure(editor, selectedElm, linkAttrs);\n      } else {\n        text.fold(function () {\n          return editor.execCommand('mceInsertLink', false, linkAttrs);\n        }, function (text) {\n          return editor.insertContent(editor.dom.createHTML('a', linkAttrs, editor.dom.encode(text)));\n        });\n      }\n    };\n    var link = function (editor, attachState, data) {\n      editor.undoManager.transact(function () {\n        var selectedElm = editor.selection.getNode();\n        var anchorElm = getAnchorElement(editor, selectedElm);\n        var linkAttrs = getLinkAttrs(data);\n        if (!Settings.hasRelList(editor.settings) && Settings.allowUnsafeLinkTarget(editor.settings) === false) {\n          var newRel = applyRelTargetRules(linkAttrs.rel, linkAttrs.target === '_blank');\n          linkAttrs.rel = newRel ? newRel : null;\n        }\n        if (data.href === attachState.href) {\n          attachState.attach();\n        }\n        if (anchorElm) {\n          editor.focus();\n          updateLink(editor, anchorElm, data.text, linkAttrs);\n        } else {\n          createLink(editor, selectedElm, data.text, linkAttrs);\n        }\n      });\n    };\n    var unlink = function (editor) {\n      editor.undoManager.transact(function () {\n        var node = editor.selection.getNode();\n        if (isImageFigure(node)) {\n          unlinkImageFigure(editor, node);\n        } else {\n          var anchorElm = editor.dom.getParent(node, 'a[href]', editor.getBody());\n          if (anchorElm) {\n            editor.dom.remove(anchorElm, true);\n          }\n        }\n        editor.focus();\n      });\n    };\n    var unlinkImageFigure = function (editor, fig) {\n      var img = editor.dom.select('img', fig)[0];\n      if (img) {\n        var a = editor.dom.getParents(img, 'a[href]', fig)[0];\n        if (a) {\n          a.parentNode.insertBefore(img, a);\n          editor.dom.remove(a);\n        }\n      }\n    };\n    var linkImageFigure = function (editor, fig, attrs) {\n      var img = editor.dom.select('img', fig)[0];\n      if (img) {\n        var a = editor.dom.create('a', attrs);\n        img.parentNode.insertBefore(a, img);\n        a.appendChild(img);\n      }\n    };\n    var Utils = {\n      link: link,\n      unlink: unlink,\n      isLink: isLink,\n      hasLinks: hasLinks,\n      getHref: getHref,\n      isOnlyTextSelected: isOnlyTextSelected,\n      getAnchorElement: getAnchorElement,\n      getAnchorText: getAnchorText,\n      applyRelTargetRules: applyRelTargetRules\n    };\n\n    var cat = function (arr) {\n      var r = [];\n      var push = function (x) {\n        r.push(x);\n      };\n      for (var i = 0; i < arr.length; i++) {\n        arr[i].each(push);\n      }\n      return r;\n    };\n    var findMap = function (arr, f) {\n      for (var i = 0; i < arr.length; i++) {\n        var r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Option.none();\n    };\n\n    var getValue = function (item) {\n      return isString(item.value) ? item.value : '';\n    };\n    var sanitizeList = function (list, extractValue) {\n      var out = [];\n      global$4.each(list, function (item) {\n        var text = isString(item.text) ? item.text : isString(item.title) ? item.title : '';\n        if (item.menu !== undefined) ; else {\n          var value = extractValue(item);\n          out.push({\n            text: text,\n            value: value\n          });\n        }\n      });\n      return out;\n    };\n    var sanitizeWith = function (extracter) {\n      if (extracter === void 0) {\n        extracter = getValue;\n      }\n      return function (list) {\n        return Option.from(list).map(function (list) {\n          return sanitizeList(list, extracter);\n        });\n      };\n    };\n    var sanitize = function (list) {\n      return sanitizeWith(getValue)(list);\n    };\n    var createUi = function (name, label) {\n      return function (items) {\n        return {\n          name: name,\n          type: 'selectbox',\n          label: label,\n          items: items\n        };\n      };\n    };\n    var ListOptions = {\n      sanitize: sanitize,\n      sanitizeWith: sanitizeWith,\n      createUi: createUi,\n      getValue: getValue\n    };\n\n    var Cell = function (initial) {\n      var value = initial;\n      var get = function () {\n        return value;\n      };\n      var set = function (v) {\n        value = v;\n      };\n      var clone = function () {\n        return Cell(get());\n      };\n      return {\n        get: get,\n        set: set,\n        clone: clone\n      };\n    };\n\n    var findTextByValue = function (value, catalog) {\n      return findMap(catalog, function (item) {\n        return Option.some(item).filter(function (i) {\n          return i.value === value;\n        });\n      });\n    };\n    var getDelta = function (persistentText, fieldName, catalog, data) {\n      var value = data[fieldName];\n      var hasPersistentText = persistentText.length > 0;\n      return value !== undefined ? findTextByValue(value, catalog).map(function (i) {\n        return {\n          url: {\n            value: i.value,\n            meta: {\n              text: hasPersistentText ? persistentText : i.text,\n              attach: noop\n            }\n          },\n          text: hasPersistentText ? persistentText : i.text\n        };\n      }) : Option.none();\n    };\n    var findCatalog = function (settings, fieldName) {\n      if (fieldName === 'link') {\n        return settings.catalogs.link;\n      } else if (fieldName === 'anchor') {\n        return settings.catalogs.anchor;\n      } else {\n        return Option.none();\n      }\n    };\n    var init = function (initialData, linkSettings) {\n      var persistentText = Cell(initialData.text);\n      var onUrlChange = function (data) {\n        if (persistentText.get().length <= 0) {\n          var urlText = data.url.meta.text !== undefined ? data.url.meta.text : data.url.value;\n          return Option.some({ text: urlText });\n        } else {\n          return Option.none();\n        }\n      };\n      var onCatalogChange = function (data, change) {\n        var catalog = findCatalog(linkSettings, change.name).getOr([]);\n        return getDelta(persistentText.get(), change.name, catalog, data);\n      };\n      var onChange = function (getData, change) {\n        if (change.name === 'url') {\n          return onUrlChange(getData());\n        } else if (contains([\n            'anchor',\n            'link'\n          ], change.name)) {\n          return onCatalogChange(getData(), change);\n        } else if (change.name === 'text') {\n          persistentText.set(getData().text);\n          return Option.none();\n        } else {\n          return Option.none();\n        }\n      };\n      return { onChange: onChange };\n    };\n    var DialogChanges = {\n      init: init,\n      getDelta: getDelta\n    };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var nu = function (baseFn) {\n      var data = Option.none();\n      var callbacks = [];\n      var map = function (f) {\n        return nu(function (nCallback) {\n          get(function (data) {\n            nCallback(f(data));\n          });\n        });\n      };\n      var get = function (nCallback) {\n        if (isReady())\n          call(nCallback);\n        else\n          callbacks.push(nCallback);\n      };\n      var set = function (x) {\n        data = Option.some(x);\n        run(callbacks);\n        callbacks = [];\n      };\n      var isReady = function () {\n        return data.isSome();\n      };\n      var run = function (cbs) {\n        each(cbs, call);\n      };\n      var call = function (cb) {\n        data.each(function (x) {\n          setTimeout(function () {\n            cb(x);\n          }, 0);\n        });\n      };\n      baseFn(set);\n      return {\n        get: get,\n        map: map,\n        isReady: isReady\n      };\n    };\n    var pure = function (a) {\n      return nu(function (callback) {\n        callback(a);\n      });\n    };\n    var LazyValue = {\n      nu: nu,\n      pure: pure\n    };\n\n    var bounce = function (f) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var me = this;\n        setTimeout(function () {\n          f.apply(me, args);\n        }, 0);\n      };\n    };\n\n    var nu$1 = function (baseFn) {\n      var get = function (callback) {\n        baseFn(bounce(callback));\n      };\n      var map = function (fab) {\n        return nu$1(function (callback) {\n          get(function (a) {\n            var value = fab(a);\n            callback(value);\n          });\n        });\n      };\n      var bind = function (aFutureB) {\n        return nu$1(function (callback) {\n          get(function (a) {\n            aFutureB(a).get(callback);\n          });\n        });\n      };\n      var anonBind = function (futureB) {\n        return nu$1(function (callback) {\n          get(function (a) {\n            futureB.get(callback);\n          });\n        });\n      };\n      var toLazy = function () {\n        return LazyValue.nu(get);\n      };\n      var toCached = function () {\n        var cache = null;\n        return nu$1(function (callback) {\n          if (cache === null) {\n            cache = toLazy();\n          }\n          cache.get(callback);\n        });\n      };\n      return {\n        map: map,\n        bind: bind,\n        anonBind: anonBind,\n        toLazy: toLazy,\n        toCached: toCached,\n        get: get\n      };\n    };\n    var pure$1 = function (a) {\n      return nu$1(function (callback) {\n        callback(a);\n      });\n    };\n    var Future = {\n      nu: nu$1,\n      pure: pure$1\n    };\n\n    var global$5 = tinymce.util.Tools.resolve('tinymce.util.Delay');\n\n    var delayedConfirm = function (editor, message, callback) {\n      var rng = editor.selection.getRng();\n      global$5.setEditorTimeout(editor, function () {\n        editor.windowManager.confirm(message, function (state) {\n          editor.selection.setRng(rng);\n          callback(state);\n        });\n      });\n    };\n    var tryEmailTransform = function (data) {\n      var url = data.href;\n      var suggestMailTo = url.indexOf('@') > 0 && url.indexOf('//') === -1 && url.indexOf('mailto:') === -1;\n      return suggestMailTo ? Option.some({\n        message: 'The URL you entered seems to be an email address. Do you want to add the required mailto: prefix?',\n        preprocess: function (oldData) {\n          return __assign({}, oldData, { href: 'mailto:' + url });\n        }\n      }) : Option.none();\n    };\n    var tryProtocolTransform = function (assumeExternalTargets) {\n      return function (data) {\n        var url = data.href;\n        var suggestProtocol = assumeExternalTargets === true && !/^\\w+:/i.test(url) || assumeExternalTargets === false && /^\\s*www[\\.|\\d\\.]/i.test(url);\n        return suggestProtocol ? Option.some({\n          message: 'The URL you entered seems to be an external link. Do you want to add the required http:// prefix?',\n          preprocess: function (oldData) {\n            return __assign({}, oldData, { href: 'http://' + url });\n          }\n        }) : Option.none();\n      };\n    };\n    var preprocess = function (editor, assumeExternalTargets, data) {\n      return findMap([\n        tryEmailTransform,\n        tryProtocolTransform(assumeExternalTargets)\n      ], function (f) {\n        return f(data);\n      }).fold(function () {\n        return Future.pure(data);\n      }, function (transform) {\n        return Future.nu(function (callback) {\n          delayedConfirm(editor, transform.message, function (state) {\n            console.log('state', state);\n            callback(state ? transform.preprocess(data) : data);\n          });\n        });\n      });\n    };\n    var DialogConfirms = { preprocess: preprocess };\n\n    var getAnchors = function (editor) {\n      var anchorNodes = editor.dom.select('a:not([href])');\n      var anchors = bind(anchorNodes, function (anchor) {\n        var id = anchor.name || anchor.id;\n        return id ? [{\n            text: id,\n            value: '#' + id\n          }] : [];\n      });\n      return anchors.length > 0 ? Option.some([{\n          text: 'None',\n          value: ''\n        }].concat(anchors)) : Option.none();\n    };\n    var AnchorListOptions = { getAnchors: getAnchors };\n\n    var getClasses = function (editor) {\n      if (Settings.hasLinkClassList(editor.settings)) {\n        var list = Settings.getLinkClassList(editor.settings);\n        return ListOptions.sanitize(list);\n      }\n      return Option.none();\n    };\n    var ClassListOptions = { getClasses: getClasses };\n\n    var global$6 = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var parseJson = function (text) {\n      try {\n        return Option.some(JSON.parse(text));\n      } catch (err) {\n        return Option.none();\n      }\n    };\n    var getLinks = function (editor) {\n      var extractor = function (item) {\n        return editor.convertURL(item.value || item.url, 'href');\n      };\n      var linkList = Settings.getLinkList(editor.settings);\n      return Future.nu(function (callback) {\n        if (typeof linkList === 'string') {\n          global$6.send({\n            url: linkList,\n            success: function (text) {\n              return callback(parseJson(text));\n            },\n            error: function (_) {\n              return callback(Option.none());\n            }\n          });\n        } else if (typeof linkList === 'function') {\n          linkList(function (output) {\n            return callback(Option.some(output));\n          });\n        } else {\n          callback(Option.from(linkList));\n        }\n      }).map(function (opt) {\n        return opt.bind(ListOptions.sanitizeWith(extractor));\n      });\n    };\n    var LinkListOptions = { getLinks: getLinks };\n\n    var getRels = function (editor, initialTarget) {\n      if (Settings.hasRelList(editor.settings)) {\n        var list = Settings.getRelList(editor.settings);\n        var isTargetBlank_1 = initialTarget.is('_blank');\n        var enforceSafe = Settings.allowUnsafeLinkTarget(editor.settings) === false;\n        var safeRelExtractor = function (item) {\n          return Utils.applyRelTargetRules(ListOptions.getValue(item), isTargetBlank_1);\n        };\n        var sanitizer = enforceSafe ? ListOptions.sanitizeWith(safeRelExtractor) : ListOptions.sanitize;\n        return sanitizer(list);\n      }\n      return Option.none();\n    };\n    var RelOptions = { getRels: getRels };\n\n    var fallbacks = [\n      {\n        text: 'Current window',\n        value: ''\n      },\n      {\n        text: 'New window',\n        value: '_blank'\n      }\n    ];\n    var getTargets = function (editor) {\n      if (Settings.shouldShowTargetList(editor.settings)) {\n        var list = Settings.getTargetList(editor.settings);\n        return ListOptions.sanitize(list).orThunk(function () {\n          return Option.some(fallbacks);\n        });\n      }\n      return Option.none();\n    };\n    var TargetOptions = { getTargets: getTargets };\n\n    var nonEmptyAttr = function (dom, elem, name) {\n      var val = dom.getAttrib(elem, name);\n      return val !== null && val.length > 0 ? Option.some(val) : Option.none();\n    };\n    var extractFromAnchor = function (editor, settings, anchor, selection) {\n      var dom = editor.dom;\n      var onlyText = Utils.isOnlyTextSelected(selection.getContent());\n      var text = onlyText ? Option.some(Utils.getAnchorText(selection, anchor)) : Option.none();\n      var url = anchor ? Option.some(dom.getAttrib(anchor, 'href')) : Option.none();\n      var defaultTarget = Settings.hasDefaultLinkTarget(settings) ? Option.some(Settings.getDefaultLinkTarget(settings)) : Option.none();\n      var target = anchor ? Option.from(dom.getAttrib(anchor, 'target')) : defaultTarget;\n      var rel = nonEmptyAttr(dom, anchor, 'rel');\n      var linkClass = nonEmptyAttr(dom, anchor, 'class');\n      var title = nonEmptyAttr(dom, anchor, 'title');\n      return {\n        url: url,\n        text: text,\n        title: title,\n        target: target,\n        rel: rel,\n        linkClass: linkClass\n      };\n    };\n    var collect = function (editor, settings, linkNode) {\n      return LinkListOptions.getLinks(editor).map(function (links) {\n        var anchor = extractFromAnchor(editor, settings, linkNode, editor.selection);\n        return {\n          anchor: anchor,\n          catalogs: {\n            targets: TargetOptions.getTargets(editor),\n            rels: RelOptions.getRels(editor, anchor.target),\n            classes: ClassListOptions.getClasses(editor),\n            anchor: AnchorListOptions.getAnchors(editor),\n            link: links\n          },\n          optNode: Option.from(linkNode),\n          flags: { titleEnabled: Settings.shouldShowLinkTitle(settings) }\n        };\n      });\n    };\n    var DialogInfo = { collect: collect };\n\n    var handleSubmit = function (editor, info, assumeExternalTargets) {\n      return function (api) {\n        var data = api.getData();\n        if (!data.url.value) {\n          Utils.unlink(editor);\n          api.close();\n          return;\n        }\n        var getChangedValue = function (key) {\n          return Option.from(data[key]).filter(function (value) {\n            return !info.anchor[key].is(value);\n          });\n        };\n        var changedData = {\n          href: data.url.value,\n          text: getChangedValue('text'),\n          target: getChangedValue('target'),\n          rel: getChangedValue('rel'),\n          class: getChangedValue('linkClass'),\n          title: getChangedValue('title')\n        };\n        var attachState = {\n          href: data.url.value,\n          attach: data.url.meta !== undefined && data.url.meta.attach ? data.url.meta.attach : function () {\n          }\n        };\n        DialogConfirms.preprocess(editor, assumeExternalTargets, changedData).get(function (pData) {\n          Utils.link(editor, attachState, pData);\n        });\n        api.close();\n      };\n    };\n    var collectData = function (editor) {\n      var settings = editor.settings;\n      var anchorNode = Utils.getAnchorElement(editor);\n      return DialogInfo.collect(editor, settings, anchorNode);\n    };\n    var getInitialData = function (info) {\n      return {\n        url: {\n          value: info.anchor.url.getOr(''),\n          meta: {\n            attach: function () {\n            },\n            text: info.anchor.url.fold(function () {\n              return '';\n            }, function () {\n              return info.anchor.text.getOr('');\n            }),\n            original: { value: info.anchor.url.getOr('') }\n          }\n        },\n        text: info.anchor.text.getOr(''),\n        title: info.anchor.title.getOr(''),\n        anchor: info.anchor.url.getOr(''),\n        link: info.anchor.url.getOr(''),\n        rel: info.anchor.rel.getOr(''),\n        target: info.anchor.target.getOr(''),\n        linkClass: info.anchor.linkClass.getOr('')\n      };\n    };\n    var makeDialog = function (settings, onSubmit) {\n      var urlInput = [{\n          name: 'url',\n          type: 'urlinput',\n          filetype: 'file',\n          label: 'URL'\n        }];\n      var displayText = settings.anchor.text.map(function () {\n        return {\n          name: 'text',\n          type: 'input',\n          label: 'Text to display'\n        };\n      }).toArray();\n      var titleText = settings.flags.titleEnabled ? [{\n          name: 'title',\n          type: 'input',\n          label: 'Title'\n        }] : [];\n      var initialData = getInitialData(settings);\n      var dialogDelta = DialogChanges.init(initialData, settings);\n      var catalogs = settings.catalogs;\n      var body = {\n        type: 'panel',\n        items: flatten([\n          urlInput,\n          displayText,\n          titleText,\n          cat([\n            catalogs.anchor.map(ListOptions.createUi('anchor', 'Anchors')),\n            catalogs.rels.map(ListOptions.createUi('rel', 'Rel')),\n            catalogs.targets.map(ListOptions.createUi('target', 'Open link in...')),\n            catalogs.link.map(ListOptions.createUi('link', 'Link list')),\n            catalogs.classes.map(ListOptions.createUi('linkClass', 'Class'))\n          ])\n        ])\n      };\n      return {\n        title: 'Insert/Edit Link',\n        size: 'normal',\n        body: body,\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: initialData,\n        onChange: function (api, _a) {\n          var name = _a.name;\n          dialogDelta.onChange(api.getData, { name: name }).each(function (newData) {\n            api.setData(newData);\n          });\n        },\n        onSubmit: onSubmit\n      };\n    };\n    var open$1 = function (editor) {\n      var data = collectData(editor);\n      data.map(function (info) {\n        var onSubmit = handleSubmit(editor, info, Settings.assumeExternalTargets(editor.settings));\n        return makeDialog(info, onSubmit);\n      }).get(function (spec) {\n        editor.windowManager.open(spec);\n      });\n    };\n    var Dialog = { open: open$1 };\n\n    var getLink = function (editor, elm) {\n      return editor.dom.getParent(elm, 'a[href]');\n    };\n    var getSelectedLink = function (editor) {\n      return getLink(editor, editor.selection.getStart());\n    };\n    var hasOnlyAltModifier = function (e) {\n      return e.altKey === true && e.shiftKey === false && e.ctrlKey === false && e.metaKey === false;\n    };\n    var gotoLink = function (editor, a) {\n      if (a) {\n        var href = Utils.getHref(a);\n        if (/^#/.test(href)) {\n          var targetEl = editor.$(href);\n          if (targetEl.length) {\n            editor.selection.scrollIntoView(targetEl[0], true);\n          }\n        } else {\n          OpenUrl.open(a.href);\n        }\n      }\n    };\n    var openDialog = function (editor) {\n      return function () {\n        Dialog.open(editor);\n      };\n    };\n    var gotoSelectedLink = function (editor) {\n      return function () {\n        gotoLink(editor, getSelectedLink(editor));\n      };\n    };\n    var leftClickedOnAHref = function (editor) {\n      return function (elm) {\n        var sel, rng, node;\n        if (Settings.hasContextToolbar(editor.settings) && Utils.isLink(elm)) {\n          sel = editor.selection;\n          rng = sel.getRng();\n          node = rng.startContainer;\n          if (node.nodeType === 3 && sel.isCollapsed() && rng.startOffset > 0 && rng.startOffset < node.data.length) {\n            return true;\n          }\n        }\n        return false;\n      };\n    };\n    var setupGotoLinks = function (editor) {\n      editor.on('click', function (e) {\n        var link = getLink(editor, e.target);\n        if (link && global$1.metaKeyPressed(e)) {\n          e.preventDefault();\n          gotoLink(editor, link);\n        }\n      });\n      editor.on('keydown', function (e) {\n        var link = getSelectedLink(editor);\n        if (link && e.keyCode === 13 && hasOnlyAltModifier(e)) {\n          e.preventDefault();\n          gotoLink(editor, link);\n        }\n      });\n    };\n    var toggleActiveState = function (editor) {\n      return function (api) {\n        var nodeChangeHandler = function (e) {\n          return api.setActive(!editor.readonly && !!Utils.getAnchorElement(editor, e.element));\n        };\n        editor.on('nodechange', nodeChangeHandler);\n        return function () {\n          return editor.off('nodechange', nodeChangeHandler);\n        };\n      };\n    };\n    var toggleEnabledState = function (editor) {\n      return function (api) {\n        api.setDisabled(!Utils.hasLinks(editor.dom.getParents(editor.selection.getStart())));\n        var nodeChangeHandler = function (e) {\n          return api.setDisabled(!Utils.hasLinks(e.parents));\n        };\n        editor.on('nodechange', nodeChangeHandler);\n        return function () {\n          return editor.off('nodechange', nodeChangeHandler);\n        };\n      };\n    };\n    var Actions = {\n      openDialog: openDialog,\n      gotoSelectedLink: gotoSelectedLink,\n      leftClickedOnAHref: leftClickedOnAHref,\n      setupGotoLinks: setupGotoLinks,\n      toggleActiveState: toggleActiveState,\n      toggleEnabledState: toggleEnabledState\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mceLink', function () {\n        if (Settings.useQuickLink(editor.settings)) {\n          editor.fire('contexttoolbar-show', { toolbarKey: 'quicklink' });\n        } else {\n          Actions.openDialog(editor)();\n        }\n      });\n    };\n    var Commands = { register: register };\n\n    var setup = function (editor) {\n      editor.addShortcut('Meta+K', '', function () {\n        editor.execCommand('mceLink');\n      });\n    };\n    var Keyboard = { setup: setup };\n\n    var setupButtons = function (editor) {\n      editor.ui.registry.addToggleButton('link', {\n        icon: 'link',\n        tooltip: 'Insert/edit link',\n        onAction: Actions.openDialog(editor),\n        onSetup: Actions.toggleActiveState(editor)\n      });\n      editor.ui.registry.addButton('unlink', {\n        icon: 'unlink',\n        tooltip: 'Remove link',\n        onAction: function () {\n          return Utils.unlink(editor);\n        },\n        onSetup: Actions.toggleEnabledState(editor)\n      });\n    };\n    var setupMenuItems = function (editor) {\n      editor.ui.registry.addMenuItem('openlink', {\n        text: 'Open link',\n        icon: 'new-tab',\n        onAction: Actions.gotoSelectedLink(editor),\n        onSetup: Actions.toggleEnabledState(editor)\n      });\n      editor.ui.registry.addMenuItem('link', {\n        icon: 'link',\n        text: 'Link...',\n        shortcut: 'Meta+K',\n        onAction: Actions.openDialog(editor)\n      });\n      editor.ui.registry.addMenuItem('unlink', {\n        icon: 'unlink',\n        text: 'Remove link',\n        onAction: function () {\n          return Utils.unlink(editor);\n        },\n        onSetup: Actions.toggleEnabledState(editor)\n      });\n    };\n    var setupContextMenu = function (editor) {\n      var noLink = 'link';\n      var inLink = 'link unlink openlink';\n      editor.ui.registry.addContextMenu('link', {\n        update: function (element) {\n          return Utils.hasLinks(editor.dom.getParents(element, 'a')) ? inLink : noLink;\n        }\n      });\n    };\n    var setupContextToolbars = function (editor) {\n      var collapseSelectionToEnd = function (editor) {\n        editor.selection.collapse(false);\n      };\n      editor.ui.registry.addContextForm('quicklink', {\n        launch: {\n          type: 'contextformtogglebutton',\n          icon: 'link',\n          tooltip: 'Link',\n          onSetup: Actions.toggleActiveState(editor)\n        },\n        label: 'Link',\n        predicate: function (node) {\n          return !!Utils.getAnchorElement(editor, node) && Settings.hasContextToolbar(editor.settings);\n        },\n        initValue: function () {\n          var elm = Utils.getAnchorElement(editor);\n          return !!elm ? Utils.getHref(elm) : '';\n        },\n        commands: [\n          {\n            type: 'contextformtogglebutton',\n            icon: 'link',\n            tooltip: 'Link',\n            primary: true,\n            onSetup: function (buttonApi) {\n              var node = editor.selection.getNode();\n              buttonApi.setActive(!!Utils.getAnchorElement(editor, node));\n              return Actions.toggleActiveState(editor)(buttonApi);\n            },\n            onAction: function (formApi) {\n              var anchor = Utils.getAnchorElement(editor);\n              var value = formApi.getValue();\n              if (!anchor) {\n                var attachState = {\n                  href: value,\n                  attach: function () {\n                  }\n                };\n                var onlyText = Utils.isOnlyTextSelected(editor.selection.getContent());\n                var text = onlyText ? Option.some(Utils.getAnchorText(editor.selection, anchor)).filter(function (t) {\n                  return t.length > 0;\n                }).or(Option.from(value)) : Option.none();\n                Utils.link(editor, attachState, {\n                  href: value,\n                  text: text,\n                  title: Option.none(),\n                  rel: Option.none(),\n                  target: Option.none(),\n                  class: Option.none()\n                });\n                formApi.hide();\n              } else {\n                editor.dom.setAttrib(anchor, 'href', value);\n                collapseSelectionToEnd(editor);\n                formApi.hide();\n              }\n            }\n          },\n          {\n            type: 'contextformtogglebutton',\n            icon: 'unlink',\n            tooltip: 'Remove link',\n            active: false,\n            onSetup: function () {\n              return function () {\n              };\n            },\n            onAction: function (formApi) {\n              Utils.unlink(editor);\n              formApi.hide();\n            }\n          }\n        ]\n      });\n    };\n    var Controls = {\n      setupButtons: setupButtons,\n      setupMenuItems: setupMenuItems,\n      setupContextMenu: setupContextMenu,\n      setupContextToolbars: setupContextToolbars\n    };\n\n    global.add('link', function (editor) {\n      Controls.setupButtons(editor);\n      Controls.setupMenuItems(editor);\n      Controls.setupContextMenu(editor);\n      Controls.setupContextToolbars(editor);\n      Actions.setupGotoLinks(editor);\n      Commands.register(editor);\n      Keyboard.setup(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n","// Exports the \"image\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/image')\n//   ES2015:\n//     import 'tinymce/plugins/image'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.0.2 (2019-03-05)\n */\n(function () {\nvar image = (function (domGlobals) {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var noop = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n    };\n    var constant = function (value) {\n      return function () {\n        return value;\n      };\n    };\n    var identity = function (x) {\n      return x;\n    };\n    var die = function (msg) {\n      return function () {\n        throw new Error(msg);\n      };\n    };\n    var never = constant(false);\n    var always = constant(true);\n\n    var never$1 = never;\n    var always$1 = always;\n    var none = function () {\n      return NONE;\n    };\n    var NONE = function () {\n      var eq = function (o) {\n        return o.isNone();\n      };\n      var call = function (thunk) {\n        return thunk();\n      };\n      var id = function (n) {\n        return n;\n      };\n      var noop = function () {\n      };\n      var nul = function () {\n        return null;\n      };\n      var undef = function () {\n        return undefined;\n      };\n      var me = {\n        fold: function (n, s) {\n          return n();\n        },\n        is: never$1,\n        isSome: never$1,\n        isNone: always$1,\n        getOr: id,\n        getOrThunk: call,\n        getOrDie: function (msg) {\n          throw new Error(msg || 'error: getOrDie called on none.');\n        },\n        getOrNull: nul,\n        getOrUndefined: undef,\n        or: id,\n        orThunk: call,\n        map: none,\n        ap: none,\n        each: noop,\n        bind: none,\n        flatten: none,\n        exists: never$1,\n        forall: always$1,\n        filter: none,\n        equals: eq,\n        equals_: eq,\n        toArray: function () {\n          return [];\n        },\n        toString: constant('none()')\n      };\n      if (Object.freeze)\n        Object.freeze(me);\n      return me;\n    }();\n    var some = function (a) {\n      var constant_a = function () {\n        return a;\n      };\n      var self = function () {\n        return me;\n      };\n      var map = function (f) {\n        return some(f(a));\n      };\n      var bind = function (f) {\n        return f(a);\n      };\n      var me = {\n        fold: function (n, s) {\n          return s(a);\n        },\n        is: function (v) {\n          return a === v;\n        },\n        isSome: always$1,\n        isNone: never$1,\n        getOr: constant_a,\n        getOrThunk: constant_a,\n        getOrDie: constant_a,\n        getOrNull: constant_a,\n        getOrUndefined: constant_a,\n        or: self,\n        orThunk: self,\n        map: map,\n        ap: function (optfab) {\n          return optfab.fold(none, function (fab) {\n            return some(fab(a));\n          });\n        },\n        each: function (f) {\n          f(a);\n        },\n        bind: bind,\n        flatten: constant_a,\n        exists: bind,\n        forall: bind,\n        filter: function (f) {\n          return f(a) ? me : NONE;\n        },\n        equals: function (o) {\n          return o.is(a);\n        },\n        equals_: function (o, elementEq) {\n          return o.fold(never$1, function (b) {\n            return elementEq(a, b);\n          });\n        },\n        toArray: function () {\n          return [a];\n        },\n        toString: function () {\n          return 'some(' + a + ')';\n        }\n      };\n      return me;\n    };\n    var from = function (value) {\n      return value === null || value === undefined ? NONE : some(value);\n    };\n    var Option = {\n      some: some,\n      none: none,\n      from: from\n    };\n\n    var typeOf = function (x) {\n      if (x === null)\n        return 'null';\n      var t = typeof x;\n      if (t === 'object' && Array.prototype.isPrototypeOf(x))\n        return 'array';\n      if (t === 'object' && String.prototype.isPrototypeOf(x))\n        return 'string';\n      return t;\n    };\n    var isType = function (type) {\n      return function (value) {\n        return typeOf(value) === type;\n      };\n    };\n    var isString = isType('string');\n    var isObject = isType('object');\n    var isFunction = isType('function');\n    var isNumber = isType('number');\n\n    var each = function (xs, f) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        f(x, i, xs);\n      }\n    };\n    var find = function (xs, pred) {\n      for (var i = 0, len = xs.length; i < len; i++) {\n        var x = xs[i];\n        if (pred(x, i, xs)) {\n          return Option.some(x);\n        }\n      }\n      return Option.none();\n    };\n    var push = Array.prototype.push;\n    var flatten = function (xs) {\n      var r = [];\n      for (var i = 0, len = xs.length; i < len; ++i) {\n        if (!Array.prototype.isPrototypeOf(xs[i]))\n          throw new Error('Arr.flatten item ' + i + ' was not an array, input: ' + xs);\n        push.apply(r, xs[i]);\n      }\n      return r;\n    };\n    var slice = Array.prototype.slice;\n    var head = function (xs) {\n      return xs.length === 0 ? Option.none() : Option.some(xs[0]);\n    };\n    var from$1 = isFunction(Array.from) ? Array.from : function (x) {\n      return slice.call(x);\n    };\n\n    var __assign = function () {\n      __assign = Object.assign || function __assign(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n              t[p] = s[p];\n        }\n        return t;\n      };\n      return __assign.apply(this, arguments);\n    };\n\n    var nu = function (baseFn) {\n      var data = Option.none();\n      var callbacks = [];\n      var map = function (f) {\n        return nu(function (nCallback) {\n          get(function (data) {\n            nCallback(f(data));\n          });\n        });\n      };\n      var get = function (nCallback) {\n        if (isReady())\n          call(nCallback);\n        else\n          callbacks.push(nCallback);\n      };\n      var set = function (x) {\n        data = Option.some(x);\n        run(callbacks);\n        callbacks = [];\n      };\n      var isReady = function () {\n        return data.isSome();\n      };\n      var run = function (cbs) {\n        each(cbs, call);\n      };\n      var call = function (cb) {\n        data.each(function (x) {\n          setTimeout(function () {\n            cb(x);\n          }, 0);\n        });\n      };\n      baseFn(set);\n      return {\n        get: get,\n        map: map,\n        isReady: isReady\n      };\n    };\n    var pure = function (a) {\n      return nu(function (callback) {\n        callback(a);\n      });\n    };\n    var LazyValue = {\n      nu: nu,\n      pure: pure\n    };\n\n    var bounce = function (f) {\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        var me = this;\n        setTimeout(function () {\n          f.apply(me, args);\n        }, 0);\n      };\n    };\n\n    var nu$1 = function (baseFn) {\n      var get = function (callback) {\n        baseFn(bounce(callback));\n      };\n      var map = function (fab) {\n        return nu$1(function (callback) {\n          get(function (a) {\n            var value = fab(a);\n            callback(value);\n          });\n        });\n      };\n      var bind = function (aFutureB) {\n        return nu$1(function (callback) {\n          get(function (a) {\n            aFutureB(a).get(callback);\n          });\n        });\n      };\n      var anonBind = function (futureB) {\n        return nu$1(function (callback) {\n          get(function (a) {\n            futureB.get(callback);\n          });\n        });\n      };\n      var toLazy = function () {\n        return LazyValue.nu(get);\n      };\n      var toCached = function () {\n        var cache = null;\n        return nu$1(function (callback) {\n          if (cache === null) {\n            cache = toLazy();\n          }\n          cache.get(callback);\n        });\n      };\n      return {\n        map: map,\n        bind: bind,\n        anonBind: anonBind,\n        toLazy: toLazy,\n        toCached: toCached,\n        get: get\n      };\n    };\n    var pure$1 = function (a) {\n      return nu$1(function (callback) {\n        callback(a);\n      });\n    };\n    var Future = {\n      nu: nu$1,\n      pure: pure$1\n    };\n\n    var value = function (o) {\n      var is = function (v) {\n        return o === v;\n      };\n      var or = function (opt) {\n        return value(o);\n      };\n      var orThunk = function (f) {\n        return value(o);\n      };\n      var map = function (f) {\n        return value(f(o));\n      };\n      var mapError = function (f) {\n        return value(o);\n      };\n      var each = function (f) {\n        f(o);\n      };\n      var bind = function (f) {\n        return f(o);\n      };\n      var fold = function (_, onValue) {\n        return onValue(o);\n      };\n      var exists = function (f) {\n        return f(o);\n      };\n      var forall = function (f) {\n        return f(o);\n      };\n      var toOption = function () {\n        return Option.some(o);\n      };\n      return {\n        is: is,\n        isValue: always,\n        isError: never,\n        getOr: constant(o),\n        getOrThunk: constant(o),\n        getOrDie: constant(o),\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: each,\n        bind: bind,\n        exists: exists,\n        forall: forall,\n        toOption: toOption\n      };\n    };\n    var error = function (message) {\n      var getOrThunk = function (f) {\n        return f();\n      };\n      var getOrDie = function () {\n        return die(String(message))();\n      };\n      var or = function (opt) {\n        return opt;\n      };\n      var orThunk = function (f) {\n        return f();\n      };\n      var map = function (f) {\n        return error(message);\n      };\n      var mapError = function (f) {\n        return error(f(message));\n      };\n      var bind = function (f) {\n        return error(message);\n      };\n      var fold = function (onError, _) {\n        return onError(message);\n      };\n      return {\n        is: never,\n        isValue: never,\n        isError: always,\n        getOr: identity,\n        getOrThunk: getOrThunk,\n        getOrDie: getOrDie,\n        or: or,\n        orThunk: orThunk,\n        fold: fold,\n        map: map,\n        mapError: mapError,\n        each: noop,\n        bind: bind,\n        exists: never,\n        forall: always,\n        toOption: Option.none\n      };\n    };\n    var Result = {\n      value: value,\n      error: error\n    };\n\n    var wrap = function (delegate) {\n      var toCached = function () {\n        return wrap(delegate.toCached());\n      };\n      var bindFuture = function (f) {\n        return wrap(delegate.bind(function (resA) {\n          return resA.fold(function (err) {\n            return Future.pure(Result.error(err));\n          }, function (a) {\n            return f(a);\n          });\n        }));\n      };\n      var bindResult = function (f) {\n        return wrap(delegate.map(function (resA) {\n          return resA.bind(f);\n        }));\n      };\n      var mapResult = function (f) {\n        return wrap(delegate.map(function (resA) {\n          return resA.map(f);\n        }));\n      };\n      var mapError = function (f) {\n        return wrap(delegate.map(function (resA) {\n          return resA.mapError(f);\n        }));\n      };\n      var foldResult = function (whenError, whenValue) {\n        return delegate.map(function (res) {\n          return res.fold(whenError, whenValue);\n        });\n      };\n      var withTimeout = function (timeout, errorThunk) {\n        return wrap(Future.nu(function (callback) {\n          var timedOut = false;\n          var timer = window.setTimeout(function () {\n            timedOut = true;\n            callback(Result.error(errorThunk()));\n          }, timeout);\n          delegate.get(function (result) {\n            if (!timedOut) {\n              window.clearTimeout(timer);\n              callback(result);\n            }\n          });\n        }));\n      };\n      return __assign({}, delegate, {\n        toCached: toCached,\n        bindFuture: bindFuture,\n        bindResult: bindResult,\n        mapResult: mapResult,\n        mapError: mapError,\n        foldResult: foldResult,\n        withTimeout: withTimeout\n      });\n    };\n    var nu$2 = function (worker) {\n      return wrap(Future.nu(worker));\n    };\n    var value$1 = function (value) {\n      return wrap(Future.pure(Result.value(value)));\n    };\n    var error$1 = function (error) {\n      return wrap(Future.pure(Result.error(error)));\n    };\n    var fromResult = function (result) {\n      return wrap(Future.pure(result));\n    };\n    var fromFuture = function (future) {\n      return wrap(future.map(Result.value));\n    };\n    var fromPromise = function (promise) {\n      return nu$2(function (completer) {\n        promise.then(function (value) {\n          completer(Result.value(value));\n        }, function (error) {\n          completer(Result.error(error));\n        });\n      });\n    };\n    var FutureResult = {\n      nu: nu$2,\n      wrap: wrap,\n      pure: value$1,\n      value: value$1,\n      error: error$1,\n      fromResult: fromResult,\n      fromFuture: fromFuture,\n      fromPromise: fromPromise\n    };\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var shallow = function (old, nu) {\n      return nu;\n    };\n    var deep = function (old, nu) {\n      var bothObjects = isObject(old) && isObject(nu);\n      return bothObjects ? deepMerge(old, nu) : nu;\n    };\n    var baseMerge = function (merger) {\n      return function () {\n        var objects = new Array(arguments.length);\n        for (var i = 0; i < objects.length; i++)\n          objects[i] = arguments[i];\n        if (objects.length === 0)\n          throw new Error('Can\\'t merge zero objects');\n        var ret = {};\n        for (var j = 0; j < objects.length; j++) {\n          var curObject = objects[j];\n          for (var key in curObject)\n            if (hasOwnProperty.call(curObject, key)) {\n              ret[key] = merger(ret[key], curObject[key]);\n            }\n        }\n        return ret;\n      };\n    };\n    var deepMerge = baseMerge(deep);\n    var merge = baseMerge(shallow);\n\n    var Global = typeof window !== 'undefined' ? window : Function('return this;')();\n\n    var path = function (parts, scope) {\n      var o = scope !== undefined && scope !== null ? scope : Global;\n      for (var i = 0; i < parts.length && o !== undefined && o !== null; ++i)\n        o = o[parts[i]];\n      return o;\n    };\n    var resolve = function (p, scope) {\n      var parts = p.split('.');\n      return path(parts, scope);\n    };\n\n    var unsafe = function (name, scope) {\n      return resolve(name, scope);\n    };\n    var getOrDie = function (name, scope) {\n      var actual = unsafe(name, scope);\n      if (actual === undefined || actual === null)\n        throw name + ' not available on this browser';\n      return actual;\n    };\n    var Global$1 = { getOrDie: getOrDie };\n\n    var url = function () {\n      return Global$1.getOrDie('URL');\n    };\n    var createObjectURL = function (blob) {\n      return url().createObjectURL(blob);\n    };\n    var revokeObjectURL = function (u) {\n      url().revokeObjectURL(u);\n    };\n    var URL = {\n      createObjectURL: createObjectURL,\n      revokeObjectURL: revokeObjectURL\n    };\n\n    var makeItems = function (info) {\n      var imageUrl = {\n        name: 'src',\n        type: 'urlinput',\n        filetype: 'image',\n        label: 'Source'\n      };\n      var imageList = info.imageList.map(function (items) {\n        return {\n          name: 'images',\n          type: 'selectbox',\n          label: 'Image list',\n          items: items\n        };\n      });\n      var imageDescription = {\n        name: 'alt',\n        type: 'input',\n        label: 'Image description'\n      };\n      var imageTitle = {\n        name: 'title',\n        type: 'input',\n        label: 'Image title'\n      };\n      var imageDimensions = {\n        name: 'dimensions',\n        type: 'sizeinput'\n      };\n      var classList = info.classList.map(function (items) {\n        return {\n          name: 'classes',\n          type: 'selectbox',\n          label: 'Class',\n          items: items\n        };\n      });\n      var caption = {\n        type: 'label',\n        label: 'Caption',\n        items: [{\n            type: 'checkbox',\n            name: 'caption',\n            label: 'Show caption'\n          }]\n      };\n      return flatten([\n        [imageUrl],\n        imageList.toArray(),\n        info.hasDescription ? [imageDescription] : [],\n        info.hasImageTitle ? [imageTitle] : [],\n        info.hasDimensions ? [imageDimensions] : [],\n        [{\n            type: 'grid',\n            columns: 2,\n            items: flatten([\n              classList.toArray(),\n              info.hasImageCaption ? [caption] : []\n            ])\n          }]\n      ]);\n    };\n    var makeTab = function (info) {\n      return {\n        title: 'General',\n        items: makeItems(info)\n      };\n    };\n    var MainTab = {\n      makeTab: makeTab,\n      makeItems: makeItems\n    };\n\n    function FileReader () {\n      var f = Global$1.getOrDie('FileReader');\n      return new f();\n    }\n\n    var global$1 = tinymce.util.Tools.resolve('tinymce.util.Promise');\n\n    var global$2 = tinymce.util.Tools.resolve('tinymce.util.Tools');\n\n    var global$3 = tinymce.util.Tools.resolve('tinymce.util.XHR');\n\n    var hasDimensions = function (editor) {\n      return editor.settings.image_dimensions === false ? false : true;\n    };\n    var hasAdvTab = function (editor) {\n      return editor.settings.image_advtab === true ? true : false;\n    };\n    var getPrependUrl = function (editor) {\n      return editor.getParam('image_prepend_url', '');\n    };\n    var getClassList = function (editor) {\n      return editor.getParam('image_class_list');\n    };\n    var hasDescription = function (editor) {\n      return editor.settings.image_description === false ? false : true;\n    };\n    var hasImageTitle = function (editor) {\n      return editor.settings.image_title === true ? true : false;\n    };\n    var hasImageCaption = function (editor) {\n      return editor.settings.image_caption === true ? true : false;\n    };\n    var getImageList = function (editor) {\n      return editor.getParam('image_list', false);\n    };\n    var hasUploadUrl = function (editor) {\n      return !!editor.getParam('images_upload_url', false);\n    };\n    var hasUploadHandler = function (editor) {\n      return !!editor.getParam('images_upload_handler', false);\n    };\n    var getUploadUrl = function (editor) {\n      return editor.getParam('images_upload_url');\n    };\n    var getUploadHandler = function (editor) {\n      return editor.getParam('images_upload_handler');\n    };\n    var getUploadBasePath = function (editor) {\n      return editor.getParam('images_upload_base_path');\n    };\n    var getUploadCredentials = function (editor) {\n      return editor.getParam('images_upload_credentials');\n    };\n    var Settings = {\n      hasDimensions: hasDimensions,\n      hasAdvTab: hasAdvTab,\n      getPrependUrl: getPrependUrl,\n      getClassList: getClassList,\n      hasDescription: hasDescription,\n      hasImageTitle: hasImageTitle,\n      hasImageCaption: hasImageCaption,\n      getImageList: getImageList,\n      hasUploadUrl: hasUploadUrl,\n      hasUploadHandler: hasUploadHandler,\n      getUploadUrl: getUploadUrl,\n      getUploadHandler: getUploadHandler,\n      getUploadBasePath: getUploadBasePath,\n      getUploadCredentials: getUploadCredentials\n    };\n\n    var parseIntAndGetMax = function (val1, val2) {\n      return Math.max(parseInt(val1, 10), parseInt(val2, 10));\n    };\n    var getImageSize = function (url, callback) {\n      var img = domGlobals.document.createElement('img');\n      function done(dimensions) {\n        if (img.parentNode) {\n          img.parentNode.removeChild(img);\n        }\n        callback(dimensions);\n      }\n      img.onload = function () {\n        var width = parseIntAndGetMax(img.width, img.clientWidth);\n        var height = parseIntAndGetMax(img.height, img.clientHeight);\n        var dimensions = {\n          width: width,\n          height: height\n        };\n        done(Result.value(dimensions));\n      };\n      img.onerror = function () {\n        done(Result.error(undefined));\n      };\n      var style = img.style;\n      style.visibility = 'hidden';\n      style.position = 'fixed';\n      style.bottom = style.left = '0px';\n      style.width = style.height = 'auto';\n      domGlobals.document.body.appendChild(img);\n      img.src = url;\n    };\n    var buildListItems = function (inputList, itemCallback, startItems) {\n      function appendItems(values, output) {\n        output = output || [];\n        global$2.each(values, function (item) {\n          var menuItem = { text: item.text || item.title };\n          if (item.menu) {\n            menuItem.menu = appendItems(item.menu);\n          } else {\n            menuItem.value = item.value;\n            itemCallback(menuItem);\n          }\n          output.push(menuItem);\n        });\n        return output;\n      }\n      return appendItems(inputList, startItems || []);\n    };\n    var removePixelSuffix = function (value) {\n      if (value) {\n        value = value.replace(/px$/, '');\n      }\n      return value;\n    };\n    var addPixelSuffix = function (value) {\n      if (value.length > 0 && /^[0-9]+$/.test(value)) {\n        value += 'px';\n      }\n      return value;\n    };\n    var mergeMargins = function (css) {\n      if (css.margin) {\n        var splitMargin = String(css.margin).split(' ');\n        switch (splitMargin.length) {\n        case 1:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[0];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[0];\n          break;\n        case 2:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[0];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 3:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[1];\n          break;\n        case 4:\n          css['margin-top'] = css['margin-top'] || splitMargin[0];\n          css['margin-right'] = css['margin-right'] || splitMargin[1];\n          css['margin-bottom'] = css['margin-bottom'] || splitMargin[2];\n          css['margin-left'] = css['margin-left'] || splitMargin[3];\n        }\n        delete css.margin;\n      }\n      return css;\n    };\n    var createImageList = function (editor, callback) {\n      var imageList = Settings.getImageList(editor);\n      if (typeof imageList === 'string') {\n        global$3.send({\n          url: imageList,\n          success: function (text) {\n            callback(JSON.parse(text));\n          }\n        });\n      } else if (typeof imageList === 'function') {\n        imageList(callback);\n      } else {\n        callback(imageList);\n      }\n    };\n    var waitLoadImage = function (editor, data, imgElm) {\n      function selectImage() {\n        imgElm.onload = imgElm.onerror = null;\n        if (editor.selection) {\n          editor.selection.select(imgElm);\n          editor.nodeChanged();\n        }\n      }\n      imgElm.onload = function () {\n        if (!data.width && !data.height && Settings.hasDimensions(editor)) {\n          editor.dom.setAttribs(imgElm, {\n            width: imgElm.clientWidth,\n            height: imgElm.clientHeight\n          });\n        }\n        selectImage();\n      };\n      imgElm.onerror = selectImage;\n    };\n    var blobToDataUri = function (blob) {\n      return new global$1(function (resolve, reject) {\n        var reader = FileReader();\n        reader.onload = function () {\n          resolve(reader.result);\n        };\n        reader.onerror = function () {\n          reject(reader.error.message);\n        };\n        reader.readAsDataURL(blob);\n      });\n    };\n    var Utils = {\n      getImageSize: getImageSize,\n      buildListItems: buildListItems,\n      removePixelSuffix: removePixelSuffix,\n      addPixelSuffix: addPixelSuffix,\n      mergeMargins: mergeMargins,\n      createImageList: createImageList,\n      waitLoadImage: waitLoadImage,\n      blobToDataUri: blobToDataUri\n    };\n\n    var global$4 = tinymce.util.Tools.resolve('tinymce.dom.DOMUtils');\n\n    var DOM = global$4.DOM;\n    var getHspace = function (image) {\n      if (image.style.marginLeft && image.style.marginRight && image.style.marginLeft === image.style.marginRight) {\n        return Utils.removePixelSuffix(image.style.marginLeft);\n      } else {\n        return '';\n      }\n    };\n    var getVspace = function (image) {\n      if (image.style.marginTop && image.style.marginBottom && image.style.marginTop === image.style.marginBottom) {\n        return Utils.removePixelSuffix(image.style.marginTop);\n      } else {\n        return '';\n      }\n    };\n    var getBorder = function (image) {\n      if (image.style.borderWidth) {\n        return Utils.removePixelSuffix(image.style.borderWidth);\n      } else {\n        return '';\n      }\n    };\n    var getAttrib = function (image, name) {\n      if (image.hasAttribute(name)) {\n        return image.getAttribute(name);\n      } else {\n        return '';\n      }\n    };\n    var getStyle = function (image, name) {\n      return image.style[name] ? image.style[name] : '';\n    };\n    var hasCaption = function (image) {\n      return image.parentNode !== null && image.parentNode.nodeName === 'FIGURE';\n    };\n    var setAttrib = function (image, name, value) {\n      image.setAttribute(name, value);\n    };\n    var wrapInFigure = function (image) {\n      var figureElm = DOM.create('figure', { class: 'image' });\n      DOM.insertAfter(figureElm, image);\n      figureElm.appendChild(image);\n      figureElm.appendChild(DOM.create('figcaption', { contentEditable: true }, 'Caption'));\n      figureElm.contentEditable = 'false';\n    };\n    var removeFigure = function (image) {\n      var figureElm = image.parentNode;\n      DOM.insertAfter(image, figureElm);\n      DOM.remove(figureElm);\n    };\n    var toggleCaption = function (image) {\n      if (hasCaption(image)) {\n        removeFigure(image);\n      } else {\n        wrapInFigure(image);\n      }\n    };\n    var normalizeStyle = function (image, normalizeCss) {\n      var attrValue = image.getAttribute('style');\n      var value = normalizeCss(attrValue !== null ? attrValue : '');\n      if (value.length > 0) {\n        image.setAttribute('style', value);\n        image.setAttribute('data-mce-style', value);\n      } else {\n        image.removeAttribute('style');\n      }\n    };\n    var setSize = function (name, normalizeCss) {\n      return function (image, name, value) {\n        if (image.style[name]) {\n          image.style[name] = Utils.addPixelSuffix(value);\n          normalizeStyle(image, normalizeCss);\n        } else {\n          setAttrib(image, name, value);\n        }\n      };\n    };\n    var getSize = function (image, name) {\n      if (image.style[name]) {\n        return Utils.removePixelSuffix(image.style[name]);\n      } else {\n        return getAttrib(image, name);\n      }\n    };\n    var setHspace = function (image, value) {\n      var pxValue = Utils.addPixelSuffix(value);\n      image.style.marginLeft = pxValue;\n      image.style.marginRight = pxValue;\n    };\n    var setVspace = function (image, value) {\n      var pxValue = Utils.addPixelSuffix(value);\n      image.style.marginTop = pxValue;\n      image.style.marginBottom = pxValue;\n    };\n    var setBorder = function (image, value) {\n      var pxValue = Utils.addPixelSuffix(value);\n      image.style.borderWidth = pxValue;\n    };\n    var setBorderStyle = function (image, value) {\n      image.style.borderStyle = value;\n    };\n    var getBorderStyle = function (image) {\n      return getStyle(image, 'borderStyle');\n    };\n    var isFigure = function (elm) {\n      return elm.nodeName === 'FIGURE';\n    };\n    var isImage = function (elm) {\n      return elm.nodeName === 'IMG';\n    };\n    var defaultData = function () {\n      return {\n        src: '',\n        alt: '',\n        title: '',\n        width: '',\n        height: '',\n        class: '',\n        style: '',\n        caption: false,\n        hspace: '',\n        vspace: '',\n        border: '',\n        borderStyle: ''\n      };\n    };\n    var getStyleValue = function (normalizeCss, data) {\n      var image = domGlobals.document.createElement('img');\n      setAttrib(image, 'style', data.style);\n      if (getHspace(image) || data.hspace !== '') {\n        setHspace(image, data.hspace);\n      }\n      if (getVspace(image) || data.vspace !== '') {\n        setVspace(image, data.vspace);\n      }\n      if (getBorder(image) || data.border !== '') {\n        setBorder(image, data.border);\n      }\n      if (getBorderStyle(image) || data.borderStyle !== '') {\n        setBorderStyle(image, data.borderStyle);\n      }\n      return normalizeCss(image.getAttribute('style'));\n    };\n    var create = function (normalizeCss, data) {\n      var image = domGlobals.document.createElement('img');\n      write(normalizeCss, merge(data, { caption: false }), image);\n      setAttrib(image, 'alt', data.alt);\n      if (data.caption) {\n        var figure = DOM.create('figure', { class: 'image' });\n        figure.appendChild(image);\n        figure.appendChild(DOM.create('figcaption', { contentEditable: true }, 'Caption'));\n        figure.contentEditable = 'false';\n        return figure;\n      } else {\n        return image;\n      }\n    };\n    var read = function (normalizeCss, image) {\n      return {\n        src: getAttrib(image, 'src'),\n        alt: getAttrib(image, 'alt'),\n        title: getAttrib(image, 'title'),\n        width: getSize(image, 'width'),\n        height: getSize(image, 'height'),\n        class: getAttrib(image, 'class'),\n        style: normalizeCss(getAttrib(image, 'style')),\n        caption: hasCaption(image),\n        hspace: getHspace(image),\n        vspace: getVspace(image),\n        border: getBorder(image),\n        borderStyle: getStyle(image, 'borderStyle')\n      };\n    };\n    var updateProp = function (image, oldData, newData, name, set) {\n      if (newData[name] !== oldData[name]) {\n        set(image, name, newData[name]);\n      }\n    };\n    var normalized = function (set, normalizeCss) {\n      return function (image, name, value) {\n        set(image, value);\n        normalizeStyle(image, normalizeCss);\n      };\n    };\n    var write = function (normalizeCss, newData, image) {\n      var oldData = read(normalizeCss, image);\n      updateProp(image, oldData, newData, 'caption', function (image, _name, _value) {\n        return toggleCaption(image);\n      });\n      updateProp(image, oldData, newData, 'src', setAttrib);\n      updateProp(image, oldData, newData, 'alt', setAttrib);\n      updateProp(image, oldData, newData, 'title', setAttrib);\n      updateProp(image, oldData, newData, 'width', setSize('width', normalizeCss));\n      updateProp(image, oldData, newData, 'height', setSize('height', normalizeCss));\n      updateProp(image, oldData, newData, 'class', setAttrib);\n      updateProp(image, oldData, newData, 'style', normalized(function (image, value) {\n        return setAttrib(image, 'style', value);\n      }, normalizeCss));\n      updateProp(image, oldData, newData, 'hspace', normalized(setHspace, normalizeCss));\n      updateProp(image, oldData, newData, 'vspace', normalized(setVspace, normalizeCss));\n      updateProp(image, oldData, newData, 'border', normalized(setBorder, normalizeCss));\n      updateProp(image, oldData, newData, 'borderStyle', normalized(setBorderStyle, normalizeCss));\n    };\n\n    var normalizeCss = function (editor, cssText) {\n      var css = editor.dom.styles.parse(cssText);\n      var mergedCss = Utils.mergeMargins(css);\n      var compressed = editor.dom.styles.parse(editor.dom.styles.serialize(mergedCss));\n      return editor.dom.styles.serialize(compressed);\n    };\n    var getSelectedImage = function (editor) {\n      var imgElm = editor.selection.getNode();\n      var figureElm = editor.dom.getParent(imgElm, 'figure.image');\n      if (figureElm) {\n        return editor.dom.select('img', figureElm)[0];\n      }\n      if (imgElm && (imgElm.nodeName !== 'IMG' || imgElm.getAttribute('data-mce-object') || imgElm.getAttribute('data-mce-placeholder'))) {\n        return null;\n      }\n      return imgElm;\n    };\n    var splitTextBlock = function (editor, figure) {\n      var dom = editor.dom;\n      var textBlock = dom.getParent(figure.parentNode, function (node) {\n        return editor.schema.getTextBlockElements()[node.nodeName];\n      }, editor.getBody());\n      if (textBlock) {\n        return dom.split(textBlock, figure);\n      } else {\n        return figure;\n      }\n    };\n    var readImageDataFromSelection = function (editor) {\n      var image = getSelectedImage(editor);\n      return image ? read(function (css) {\n        return normalizeCss(editor, css);\n      }, image) : defaultData();\n    };\n    var insertImageAtCaret = function (editor, data) {\n      var elm = create(function (css) {\n        return normalizeCss(editor, css);\n      }, data);\n      editor.dom.setAttrib(elm, 'data-mce-id', '__mcenew');\n      editor.focus();\n      editor.selection.setContent(elm.outerHTML);\n      var insertedElm = editor.dom.select('*[data-mce-id=\"__mcenew\"]')[0];\n      editor.dom.setAttrib(insertedElm, 'data-mce-id', null);\n      if (isFigure(insertedElm)) {\n        var figure = splitTextBlock(editor, insertedElm);\n        editor.selection.select(figure);\n      } else {\n        editor.selection.select(insertedElm);\n      }\n    };\n    var syncSrcAttr = function (editor, image) {\n      editor.dom.setAttrib(image, 'src', image.getAttribute('src'));\n    };\n    var deleteImage = function (editor, image) {\n      if (image) {\n        var elm = editor.dom.is(image.parentNode, 'figure.image') ? image.parentNode : image;\n        editor.dom.remove(elm);\n        editor.focus();\n        editor.nodeChanged();\n        if (editor.dom.isEmpty(editor.getBody())) {\n          editor.setContent('');\n          editor.selection.setCursorLocation();\n        }\n      }\n    };\n    var writeImageDataToSelection = function (editor, data) {\n      var image = getSelectedImage(editor);\n      write(function (css) {\n        return normalizeCss(editor, css);\n      }, data, image);\n      syncSrcAttr(editor, image);\n      if (isFigure(image.parentNode)) {\n        var figure = image.parentNode;\n        splitTextBlock(editor, figure);\n        editor.selection.select(image.parentNode);\n      } else {\n        editor.selection.select(image);\n        Utils.waitLoadImage(editor, data, image);\n      }\n    };\n    var insertOrUpdateImage = function (editor, data) {\n      var image = getSelectedImage(editor);\n      if (image) {\n        if (data.src) {\n          writeImageDataToSelection(editor, data);\n        } else {\n          deleteImage(editor, image);\n        }\n      } else if (data.src) {\n        insertImageAtCaret(editor, data);\n      }\n    };\n\n    var findMap = function (arr, f) {\n      for (var i = 0; i < arr.length; i++) {\n        var r = f(arr[i], i);\n        if (r.isSome()) {\n          return r;\n        }\n      }\n      return Option.none();\n    };\n\n    var getValue = function (item) {\n      return isString(item.value) ? item.value : '';\n    };\n    var sanitizeList = function (list, extractValue) {\n      var out = [];\n      global$2.each(list, function (item) {\n        var text = isString(item.text) ? item.text : isString(item.title) ? item.title : '';\n        if (item.menu !== undefined) {\n          var items = sanitizeList(item.menu, extractValue);\n          out.push({\n            text: text,\n            items: items\n          });\n        } else {\n          var value = extractValue(item);\n          out.push({\n            text: text,\n            value: value\n          });\n        }\n      });\n      return out;\n    };\n    var sanitizer = function (extracter) {\n      if (extracter === void 0) {\n        extracter = getValue;\n      }\n      return function (list) {\n        if (list) {\n          return Option.from(list).map(function (list) {\n            return sanitizeList(list, extracter);\n          });\n        } else {\n          return Option.none();\n        }\n      };\n    };\n    var sanitize = function (list) {\n      return sanitizer(getValue)(list);\n    };\n    var isGroup = function (item) {\n      return Object.prototype.hasOwnProperty.call(item, 'items');\n    };\n    var findEntryDelegate = function (list, value) {\n      return findMap(list, function (item) {\n        if (isGroup(item)) {\n          return findEntryDelegate(item.items, value);\n        } else if (item.value === value) {\n          return Option.some(item);\n        } else {\n          return Option.none();\n        }\n      });\n    };\n    var findEntry = function (optList, value) {\n      return optList.bind(function (list) {\n        return findEntryDelegate(list, value);\n      });\n    };\n    var ListUtils = {\n      sanitizer: sanitizer,\n      sanitize: sanitize,\n      findEntry: findEntry\n    };\n\n    function XMLHttpRequest () {\n      var f = Global$1.getOrDie('XMLHttpRequest');\n      return new f();\n    }\n\n    var noop$1 = function () {\n    };\n    var pathJoin = function (path1, path2) {\n      if (path1) {\n        return path1.replace(/\\/$/, '') + '/' + path2.replace(/^\\//, '');\n      }\n      return path2;\n    };\n    function Uploader (settings) {\n      var defaultHandler = function (blobInfo, success, failure, progress) {\n        var xhr, formData;\n        xhr = XMLHttpRequest();\n        xhr.open('POST', settings.url);\n        xhr.withCredentials = settings.credentials;\n        xhr.upload.onprogress = function (e) {\n          progress(e.loaded / e.total * 100);\n        };\n        xhr.onerror = function () {\n          failure('Image upload failed due to a XHR Transport error. Code: ' + xhr.status);\n        };\n        xhr.onload = function () {\n          var json;\n          if (xhr.status < 200 || xhr.status >= 300) {\n            failure('HTTP Error: ' + xhr.status);\n            return;\n          }\n          json = JSON.parse(xhr.responseText);\n          if (!json || typeof json.location !== 'string') {\n            failure('Invalid JSON: ' + xhr.responseText);\n            return;\n          }\n          success(pathJoin(settings.basePath, json.location));\n        };\n        formData = new domGlobals.FormData();\n        formData.append('file', blobInfo.blob(), blobInfo.filename());\n        xhr.send(formData);\n      };\n      var uploadBlob = function (blobInfo, handler) {\n        return new global$1(function (resolve, reject) {\n          try {\n            handler(blobInfo, resolve, reject, noop$1);\n          } catch (ex) {\n            reject(ex.message);\n          }\n        });\n      };\n      var isDefaultHandler = function (handler) {\n        return handler === defaultHandler;\n      };\n      var upload = function (blobInfo) {\n        return !settings.url && isDefaultHandler(settings.handler) ? global$1.reject('Upload url missing from the settings.') : uploadBlob(blobInfo, settings.handler);\n      };\n      settings = global$2.extend({\n        credentials: false,\n        handler: defaultHandler\n      }, settings);\n      return { upload: upload };\n    }\n\n    var makeTab$1 = function (info) {\n      return {\n        title: 'Advanced',\n        items: [\n          {\n            type: 'input',\n            label: 'Style',\n            name: 'style'\n          },\n          {\n            type: 'grid',\n            columns: 2,\n            items: [\n              {\n                type: 'input',\n                label: 'Vertical space',\n                name: 'vspace'\n              },\n              {\n                type: 'input',\n                label: 'Horizontal space',\n                name: 'hspace'\n              },\n              {\n                type: 'input',\n                label: 'Border width',\n                name: 'border'\n              },\n              {\n                type: 'selectbox',\n                name: 'borderstyle',\n                label: 'Border style',\n                items: [\n                  {\n                    text: 'Select...',\n                    value: ''\n                  },\n                  {\n                    text: 'Solid',\n                    value: 'solid'\n                  },\n                  {\n                    text: 'Dotted',\n                    value: 'dotted'\n                  },\n                  {\n                    text: 'Dashed',\n                    value: 'dashed'\n                  },\n                  {\n                    text: 'Double',\n                    value: 'double'\n                  },\n                  {\n                    text: 'Groove',\n                    value: 'groove'\n                  },\n                  {\n                    text: 'Ridge',\n                    value: 'ridge'\n                  },\n                  {\n                    text: 'Inset',\n                    value: 'inset'\n                  },\n                  {\n                    text: 'Outset',\n                    value: 'outset'\n                  },\n                  {\n                    text: 'None',\n                    value: 'none'\n                  },\n                  {\n                    text: 'Hidden',\n                    value: 'hidden'\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      };\n    };\n    var AdvTab = { makeTab: makeTab$1 };\n\n    var collect = function (editor) {\n      var urlListSanitizer = ListUtils.sanitizer(function (item) {\n        return editor.convertURL(item.value || item.url, 'src');\n      });\n      var futureImageList = Future.nu(function (completer) {\n        Utils.createImageList(editor, function (imageList) {\n          completer(urlListSanitizer(imageList).map(function (items) {\n            return flatten([\n              [{\n                  text: 'None',\n                  value: ''\n                }],\n              items\n            ]);\n          }));\n        });\n      });\n      var classList = ListUtils.sanitize(Settings.getClassList(editor));\n      var hasAdvTab = Settings.hasAdvTab(editor);\n      var hasUploadUrl = Settings.hasUploadUrl(editor);\n      var hasUploadHandler = Settings.hasUploadHandler(editor);\n      var image = readImageDataFromSelection(editor);\n      var hasDescription = Settings.hasDescription(editor);\n      var hasImageTitle = Settings.hasImageTitle(editor);\n      var hasDimensions = Settings.hasDimensions(editor);\n      var hasImageCaption = Settings.hasImageCaption(editor);\n      var url = Settings.getUploadUrl(editor);\n      var basePath = Settings.getUploadBasePath(editor);\n      var credentials = Settings.getUploadCredentials(editor);\n      var handler = Settings.getUploadHandler(editor);\n      var prependURL = Option.some(Settings.getPrependUrl(editor)).filter(function (preUrl) {\n        return isString(preUrl) && preUrl.length > 0;\n      });\n      return futureImageList.map(function (imageList) {\n        return {\n          image: image,\n          imageList: imageList,\n          classList: classList,\n          hasAdvTab: hasAdvTab,\n          hasUploadUrl: hasUploadUrl,\n          hasUploadHandler: hasUploadHandler,\n          hasDescription: hasDescription,\n          hasImageTitle: hasImageTitle,\n          hasDimensions: hasDimensions,\n          hasImageCaption: hasImageCaption,\n          url: url,\n          basePath: basePath,\n          credentials: credentials,\n          handler: handler,\n          prependURL: prependURL\n        };\n      });\n    };\n\n    var makeTab$2 = function (info) {\n      var items = [{\n          type: 'dropzone',\n          name: 'fileinput'\n        }];\n      return {\n        title: 'Upload',\n        items: items\n      };\n    };\n    var UploadTab = { makeTab: makeTab$2 };\n\n    var createState = function (info) {\n      return {\n        prevImage: ListUtils.findEntry(info.imageList, info.image.src),\n        prevAlt: info.image.alt,\n        open: true\n      };\n    };\n    var fromImageData = function (image) {\n      return {\n        src: {\n          value: image.src,\n          meta: {}\n        },\n        images: image.src,\n        alt: image.alt,\n        title: image.title,\n        dimensions: {\n          width: image.width,\n          height: image.height\n        },\n        classes: image.class,\n        caption: image.caption,\n        style: image.style,\n        vspace: image.vspace,\n        border: image.border,\n        hspace: image.hspace,\n        borderstyle: image.borderStyle,\n        fileinput: []\n      };\n    };\n    var toImageData = function (data) {\n      return {\n        src: data.src.value,\n        alt: data.alt,\n        title: data.title,\n        width: data.dimensions.width,\n        height: data.dimensions.height,\n        class: data.classes,\n        style: data.style,\n        caption: data.caption,\n        hspace: data.hspace,\n        vspace: data.vspace,\n        border: data.border,\n        borderStyle: data.borderstyle\n      };\n    };\n    var addPrependUrl2 = function (info, srcURL) {\n      if (!/^(?:[a-zA-Z]+:)?\\/\\//.test(srcURL)) {\n        return info.prependURL.bind(function (prependUrl) {\n          if (srcURL.substring(0, prependUrl.length) !== prependUrl) {\n            return Option.some(prependUrl + srcURL);\n          }\n          return Option.none();\n        });\n      }\n      return Option.none();\n    };\n    var addPrependUrl = function (info, api) {\n      var data = api.getData();\n      addPrependUrl2(info, data.src.value).each(function (srcURL) {\n        api.setData({\n          src: {\n            value: srcURL,\n            meta: data.src.meta\n          }\n        });\n      });\n    };\n    var formFillFromMeta2 = function (info, data) {\n      var meta = data.src.meta;\n      if (meta !== undefined) {\n        var dataCopy_1 = deepMerge({}, data);\n        if (info.hasDescription && isString(meta.alt)) {\n          dataCopy_1.alt = meta.alt;\n        }\n        if (info.hasImageTitle && isString(meta.title)) {\n          dataCopy_1.title = meta.title;\n        }\n        if (info.hasDimensions) {\n          if (isString(meta.width)) {\n            dataCopy_1.dimensions.width = meta.width;\n          }\n          if (isString(meta.height)) {\n            dataCopy_1.dimensions.height = meta.height;\n          }\n        }\n        if (isString(meta.class)) {\n          ListUtils.findEntry(info.classList, meta.class).each(function (entry) {\n            dataCopy_1.classes = entry.value;\n          });\n        }\n        if (info.hasAdvTab) {\n          if (isString(meta.vspace)) {\n            dataCopy_1.vspace = meta.vspace;\n          }\n          if (isString(meta.border)) {\n            dataCopy_1.border = meta.border;\n          }\n          if (isString(meta.hspace)) {\n            dataCopy_1.hspace = meta.hspace;\n          }\n          if (isString(meta.borderstyle)) {\n            dataCopy_1.borderstyle = meta.borderstyle;\n          }\n        }\n        return Option.some(dataCopy_1);\n      }\n      return Option.none();\n    };\n    var formFillFromMeta = function (info, api) {\n      formFillFromMeta2(info, api.getData()).each(function (data) {\n        return api.setData(data);\n      });\n    };\n    var calculateImageSize = function (helpers, info, state, api) {\n      var data = api.getData();\n      var url = data.src.value;\n      var meta = data.src.meta || {};\n      if (!meta.width && !meta.height && info.hasDimensions) {\n        helpers.imageSize(url).get(function (result) {\n          result.each(function (size) {\n            if (state.open) {\n              api.setData({ dimensions: size });\n            }\n          });\n        });\n      }\n    };\n    var updateImagesDropdown = function (info, state, api) {\n      var data = api.getData();\n      var image = ListUtils.findEntry(info.imageList, data.src.value);\n      state.prevImage = image;\n      api.setData({\n        images: image.map(function (entry) {\n          return entry.value;\n        }).getOr('')\n      });\n    };\n    var changeSrc = function (helpers, info, state, api) {\n      addPrependUrl(info, api);\n      formFillFromMeta(info, api);\n      calculateImageSize(helpers, info, state, api);\n      updateImagesDropdown(info, state, api);\n    };\n    var changeImages = function (helpers, info, state, api) {\n      var data = api.getData();\n      var image = ListUtils.findEntry(info.imageList, data.images);\n      image.each(function (img) {\n        var updateAlt = data.alt === '' || state.prevImage.map(function (image) {\n          return image.text === data.alt;\n        }).getOr(false);\n        if (updateAlt) {\n          if (img.value === '') {\n            api.setData({\n              src: img,\n              alt: state.prevAlt\n            });\n          } else {\n            api.setData({\n              src: img,\n              alt: img.text\n            });\n          }\n        } else {\n          api.setData({ src: img });\n        }\n      });\n      state.prevImage = image;\n      changeSrc(helpers, info, state, api);\n    };\n    var calcVSpace = function (css) {\n      var matchingTopBottom = css['margin-top'] && css['margin-bottom'] && css['margin-top'] === css['margin-bottom'];\n      return matchingTopBottom ? Utils.removePixelSuffix(String(css['margin-top'])) : '';\n    };\n    var calcHSpace = function (css) {\n      var matchingLeftRight = css['margin-right'] && css['margin-left'] && css['margin-right'] === css['margin-left'];\n      return matchingLeftRight ? Utils.removePixelSuffix(String(css['margin-right'])) : '';\n    };\n    var calcBorderWidth = function (css) {\n      return css['border-width'] ? Utils.removePixelSuffix(String(css['border-width'])) : '';\n    };\n    var calcBorderStyle = function (css) {\n      return css['border-style'] ? String(css['border-style']) : '';\n    };\n    var calcStyle = function (parseStyle, serializeStyle, css) {\n      return serializeStyle(parseStyle(serializeStyle(css)));\n    };\n    var changeStyle2 = function (parseStyle, serializeStyle, data) {\n      var css = Utils.mergeMargins(parseStyle(data.style));\n      var dataCopy = deepMerge({}, data);\n      dataCopy.vspace = calcVSpace(css);\n      dataCopy.hspace = calcHSpace(css);\n      dataCopy.border = calcBorderWidth(css);\n      dataCopy.borderstyle = calcBorderStyle(css);\n      dataCopy.style = calcStyle(parseStyle, serializeStyle, css);\n      return dataCopy;\n    };\n    var changeStyle = function (helpers, api) {\n      var data = api.getData();\n      var newData = changeStyle2(helpers.parseStyle, helpers.serializeStyle, data);\n      api.setData(newData);\n    };\n    var changeAStyle = function (helpers, info, api) {\n      var data = deepMerge(fromImageData(info.image), api.getData());\n      var style = getStyleValue(helpers.normalizeCss, toImageData(data));\n      api.setData({ style: style });\n    };\n    var changeFileInput = function (helpers, info, state, api) {\n      var data = api.getData();\n      api.block('Uploading image');\n      head(data.fileinput).fold(function () {\n        api.unblock();\n      }, function (file) {\n        var blobUri = URL.createObjectURL(file);\n        var uploader = Uploader({\n          url: info.url,\n          basePath: info.basePath,\n          credentials: info.credentials,\n          handler: info.handler\n        });\n        var finalize = function () {\n          api.unblock();\n          URL.revokeObjectURL(blobUri);\n        };\n        Utils.blobToDataUri(file).then(function (dataUrl) {\n          var blobInfo = helpers.createBlobCache(file, blobUri, dataUrl);\n          uploader.upload(blobInfo).then(function (url) {\n            api.setData({\n              src: {\n                value: url,\n                meta: {}\n              }\n            });\n            api.showTab('General');\n            changeSrc(helpers, info, state, api);\n            finalize();\n          }).catch(function (err) {\n            finalize();\n            helpers.alertErr(api, err);\n          });\n        });\n      });\n    };\n    var changeHandler = function (helpers, info, state) {\n      return function (api, evt) {\n        if (evt.name === 'src') {\n          changeSrc(helpers, info, state, api);\n        } else if (evt.name === 'images') {\n          changeImages(helpers, info, state, api);\n        } else if (evt.name === 'alt') {\n          state.prevAlt = api.getData().alt;\n        } else if (evt.name === 'style') {\n          changeStyle(helpers, api);\n        } else if (evt.name === 'vspace' || evt.name === 'hspace' || evt.name === 'border' || evt.name === 'borderstyle') {\n          changeAStyle(helpers, info, api);\n        } else if (evt.name === 'fileinput') {\n          changeFileInput(helpers, info, state, api);\n        }\n      };\n    };\n    var closeHandler = function (state) {\n      return function () {\n        state.open = false;\n      };\n    };\n    var makeDialogBody = function (info) {\n      if (info.hasAdvTab || info.hasUploadUrl || info.hasUploadHandler) {\n        var tabPanel = {\n          type: 'tabpanel',\n          tabs: flatten([\n            [MainTab.makeTab(info)],\n            info.hasAdvTab ? [AdvTab.makeTab(info)] : [],\n            info.hasUploadUrl || info.hasUploadHandler ? [UploadTab.makeTab(info)] : []\n          ])\n        };\n        return tabPanel;\n      } else {\n        var panel = {\n          type: 'panel',\n          items: MainTab.makeItems(info)\n        };\n        return panel;\n      }\n    };\n    var makeDialog = function (helpers) {\n      return function (info) {\n        var state = createState(info);\n        return {\n          title: 'Insert/Edit Image',\n          size: 'normal',\n          body: makeDialogBody(info),\n          buttons: [\n            {\n              type: 'cancel',\n              name: 'cancel',\n              text: 'Cancel'\n            },\n            {\n              type: 'submit',\n              name: 'save',\n              text: 'Save',\n              primary: true\n            }\n          ],\n          initialData: fromImageData(info.image),\n          onSubmit: helpers.onSubmit(info),\n          onChange: changeHandler(helpers, info, state),\n          onClose: closeHandler(state)\n        };\n      };\n    };\n    var submitHandler = function (editor) {\n      return function (info) {\n        return function (api) {\n          var data = deepMerge(fromImageData(info.image), api.getData());\n          editor.undoManager.transact(function () {\n            insertOrUpdateImage(editor, toImageData(data));\n          });\n          editor.editorUpload.uploadImagesAuto();\n          api.close();\n        };\n      };\n    };\n    var imageSize = function (editor) {\n      return function (url) {\n        return FutureResult.nu(function (completer) {\n          Utils.getImageSize(editor.documentBaseURI.toAbsolute(url), function (data) {\n            var result = data.bind(function (dimensions) {\n              return (isString(dimensions.width) || isNumber(dimensions.width)) && (isString(dimensions.height) || isNumber(dimensions.height)) ? Result.value({\n                width: String(dimensions.width),\n                height: String(dimensions.height)\n              }) : Result.error(undefined);\n            });\n            completer(result);\n          });\n        });\n      };\n    };\n    var createBlobCache = function (editor) {\n      return function (file, blobUri, dataUrl) {\n        return editor.editorUpload.blobCache.create({\n          blob: file,\n          blobUri: blobUri,\n          name: file.name ? file.name.replace(/\\.[^\\.]+$/, '') : null,\n          base64: dataUrl.split(',')[1]\n        });\n      };\n    };\n    var alertErr = function (editor) {\n      return function (api, message) {\n        editor.windowManager.alert(message, api.close);\n      };\n    };\n    var normalizeCss$1 = function (editor) {\n      return function (cssText) {\n        return normalizeCss(editor, cssText);\n      };\n    };\n    var parseStyle = function (editor) {\n      return function (cssText) {\n        return editor.dom.parseStyle(cssText);\n      };\n    };\n    var serializeStyle = function (editor) {\n      return function (stylesArg, name) {\n        return editor.dom.serializeStyle(stylesArg, name);\n      };\n    };\n    var Dialog = function (editor) {\n      var helpers = {\n        onSubmit: submitHandler(editor),\n        imageSize: imageSize(editor),\n        createBlobCache: createBlobCache(editor),\n        alertErr: alertErr(editor),\n        normalizeCss: normalizeCss$1(editor),\n        parseStyle: parseStyle(editor),\n        serializeStyle: serializeStyle(editor)\n      };\n      var open = function () {\n        return collect(editor).map(makeDialog(helpers)).get(function (spec) {\n          editor.windowManager.open(spec);\n        });\n      };\n      return { open: open };\n    };\n\n    var register = function (editor) {\n      editor.addCommand('mceImage', Dialog(editor).open);\n    };\n    var Commands = { register: register };\n\n    var hasImageClass = function (node) {\n      var className = node.attr('class');\n      return className && /\\bimage\\b/.test(className);\n    };\n    var toggleContentEditableState = function (state) {\n      return function (nodes) {\n        var i = nodes.length, node;\n        var toggleContentEditable = function (node) {\n          node.attr('contenteditable', state ? 'true' : null);\n        };\n        while (i--) {\n          node = nodes[i];\n          if (hasImageClass(node)) {\n            node.attr('contenteditable', state ? 'false' : null);\n            global$2.each(node.getAll('figcaption'), toggleContentEditable);\n          }\n        }\n      };\n    };\n    var setup = function (editor) {\n      editor.on('preInit', function () {\n        editor.parser.addNodeFilter('figure', toggleContentEditableState(true));\n        editor.serializer.addNodeFilter('figure', toggleContentEditableState(false));\n      });\n    };\n    var FilterContent = { setup: setup };\n\n    var fromHtml = function (html, scope) {\n      var doc = scope || domGlobals.document;\n      var div = doc.createElement('div');\n      div.innerHTML = html;\n      if (!div.hasChildNodes() || div.childNodes.length > 1) {\n        domGlobals.console.error('HTML does not have a single root node', html);\n        throw new Error('HTML must have a single root node');\n      }\n      return fromDom(div.childNodes[0]);\n    };\n    var fromTag = function (tag, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createElement(tag);\n      return fromDom(node);\n    };\n    var fromText = function (text, scope) {\n      var doc = scope || domGlobals.document;\n      var node = doc.createTextNode(text);\n      return fromDom(node);\n    };\n    var fromDom = function (node) {\n      if (node === null || node === undefined) {\n        throw new Error('Node cannot be null or undefined');\n      }\n      return { dom: constant(node) };\n    };\n    var fromPoint = function (docElm, x, y) {\n      var doc = docElm.dom();\n      return Option.from(doc.elementFromPoint(x, y)).map(fromDom);\n    };\n    var Element = {\n      fromHtml: fromHtml,\n      fromTag: fromTag,\n      fromText: fromText,\n      fromDom: fromDom,\n      fromPoint: fromPoint\n    };\n\n    var ATTRIBUTE = domGlobals.Node.ATTRIBUTE_NODE;\n    var CDATA_SECTION = domGlobals.Node.CDATA_SECTION_NODE;\n    var COMMENT = domGlobals.Node.COMMENT_NODE;\n    var DOCUMENT = domGlobals.Node.DOCUMENT_NODE;\n    var DOCUMENT_TYPE = domGlobals.Node.DOCUMENT_TYPE_NODE;\n    var DOCUMENT_FRAGMENT = domGlobals.Node.DOCUMENT_FRAGMENT_NODE;\n    var ELEMENT = domGlobals.Node.ELEMENT_NODE;\n    var TEXT = domGlobals.Node.TEXT_NODE;\n    var PROCESSING_INSTRUCTION = domGlobals.Node.PROCESSING_INSTRUCTION_NODE;\n    var ENTITY_REFERENCE = domGlobals.Node.ENTITY_REFERENCE_NODE;\n    var ENTITY = domGlobals.Node.ENTITY_NODE;\n    var NOTATION = domGlobals.Node.NOTATION_NODE;\n\n    var name = function (element) {\n      var r = element.dom().nodeName;\n      return r.toLowerCase();\n    };\n\n    var Immutable = function () {\n      var fields = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        fields[_i] = arguments[_i];\n      }\n      return function () {\n        var values = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          values[_i] = arguments[_i];\n        }\n        if (fields.length !== values.length) {\n          throw new Error('Wrong number of arguments to struct. Expected \"[' + fields.length + ']\", got ' + values.length + ' arguments');\n        }\n        var struct = {};\n        each(fields, function (name, i) {\n          struct[name] = constant(values[i]);\n        });\n        return struct;\n      };\n    };\n\n    var node = function () {\n      var f = Global$1.getOrDie('Node');\n      return f;\n    };\n    var compareDocumentPosition = function (a, b, match) {\n      return (a.compareDocumentPosition(b) & match) !== 0;\n    };\n    var documentPositionPreceding = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_PRECEDING);\n    };\n    var documentPositionContainedBy = function (a, b) {\n      return compareDocumentPosition(a, b, node().DOCUMENT_POSITION_CONTAINED_BY);\n    };\n    var Node = {\n      documentPositionPreceding: documentPositionPreceding,\n      documentPositionContainedBy: documentPositionContainedBy\n    };\n\n    var cached = function (f) {\n      var called = false;\n      var r;\n      return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        if (!called) {\n          called = true;\n          r = f.apply(null, args);\n        }\n        return r;\n      };\n    };\n\n    var firstMatch = function (regexes, s) {\n      for (var i = 0; i < regexes.length; i++) {\n        var x = regexes[i];\n        if (x.test(s))\n          return x;\n      }\n      return undefined;\n    };\n    var find$1 = function (regexes, agent) {\n      var r = firstMatch(regexes, agent);\n      if (!r)\n        return {\n          major: 0,\n          minor: 0\n        };\n      var group = function (i) {\n        return Number(agent.replace(r, '$' + i));\n      };\n      return nu$3(group(1), group(2));\n    };\n    var detect = function (versionRegexes, agent) {\n      var cleanedAgent = String(agent).toLowerCase();\n      if (versionRegexes.length === 0)\n        return unknown();\n      return find$1(versionRegexes, cleanedAgent);\n    };\n    var unknown = function () {\n      return nu$3(0, 0);\n    };\n    var nu$3 = function (major, minor) {\n      return {\n        major: major,\n        minor: minor\n      };\n    };\n    var Version = {\n      nu: nu$3,\n      detect: detect,\n      unknown: unknown\n    };\n\n    var edge = 'Edge';\n    var chrome = 'Chrome';\n    var ie = 'IE';\n    var opera = 'Opera';\n    var firefox = 'Firefox';\n    var safari = 'Safari';\n    var isBrowser = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$1 = function () {\n      return nu$4({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$4 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isEdge: isBrowser(edge, current),\n        isChrome: isBrowser(chrome, current),\n        isIE: isBrowser(ie, current),\n        isOpera: isBrowser(opera, current),\n        isFirefox: isBrowser(firefox, current),\n        isSafari: isBrowser(safari, current)\n      };\n    };\n    var Browser = {\n      unknown: unknown$1,\n      nu: nu$4,\n      edge: constant(edge),\n      chrome: constant(chrome),\n      ie: constant(ie),\n      opera: constant(opera),\n      firefox: constant(firefox),\n      safari: constant(safari)\n    };\n\n    var windows = 'Windows';\n    var ios = 'iOS';\n    var android = 'Android';\n    var linux = 'Linux';\n    var osx = 'OSX';\n    var solaris = 'Solaris';\n    var freebsd = 'FreeBSD';\n    var isOS = function (name, current) {\n      return function () {\n        return current === name;\n      };\n    };\n    var unknown$2 = function () {\n      return nu$5({\n        current: undefined,\n        version: Version.unknown()\n      });\n    };\n    var nu$5 = function (info) {\n      var current = info.current;\n      var version = info.version;\n      return {\n        current: current,\n        version: version,\n        isWindows: isOS(windows, current),\n        isiOS: isOS(ios, current),\n        isAndroid: isOS(android, current),\n        isOSX: isOS(osx, current),\n        isLinux: isOS(linux, current),\n        isSolaris: isOS(solaris, current),\n        isFreeBSD: isOS(freebsd, current)\n      };\n    };\n    var OperatingSystem = {\n      unknown: unknown$2,\n      nu: nu$5,\n      windows: constant(windows),\n      ios: constant(ios),\n      android: constant(android),\n      linux: constant(linux),\n      osx: constant(osx),\n      solaris: constant(solaris),\n      freebsd: constant(freebsd)\n    };\n\n    var DeviceType = function (os, browser, userAgent) {\n      var isiPad = os.isiOS() && /ipad/i.test(userAgent) === true;\n      var isiPhone = os.isiOS() && !isiPad;\n      var isAndroid3 = os.isAndroid() && os.version.major === 3;\n      var isAndroid4 = os.isAndroid() && os.version.major === 4;\n      var isTablet = isiPad || isAndroid3 || isAndroid4 && /mobile/i.test(userAgent) === true;\n      var isTouch = os.isiOS() || os.isAndroid();\n      var isPhone = isTouch && !isTablet;\n      var iOSwebview = browser.isSafari() && os.isiOS() && /safari/i.test(userAgent) === false;\n      return {\n        isiPad: constant(isiPad),\n        isiPhone: constant(isiPhone),\n        isTablet: constant(isTablet),\n        isPhone: constant(isPhone),\n        isTouch: constant(isTouch),\n        isAndroid: os.isAndroid,\n        isiOS: os.isiOS,\n        isWebView: constant(iOSwebview)\n      };\n    };\n\n    var detect$1 = function (candidates, userAgent) {\n      var agent = String(userAgent).toLowerCase();\n      return find(candidates, function (candidate) {\n        return candidate.search(agent);\n      });\n    };\n    var detectBrowser = function (browsers, userAgent) {\n      return detect$1(browsers, userAgent).map(function (browser) {\n        var version = Version.detect(browser.versionRegexes, userAgent);\n        return {\n          current: browser.name,\n          version: version\n        };\n      });\n    };\n    var detectOs = function (oses, userAgent) {\n      return detect$1(oses, userAgent).map(function (os) {\n        var version = Version.detect(os.versionRegexes, userAgent);\n        return {\n          current: os.name,\n          version: version\n        };\n      });\n    };\n    var UaString = {\n      detectBrowser: detectBrowser,\n      detectOs: detectOs\n    };\n\n    var contains = function (str, substr) {\n      return str.indexOf(substr) !== -1;\n    };\n\n    var normalVersionRegex = /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/;\n    var checkContains = function (target) {\n      return function (uastring) {\n        return contains(uastring, target);\n      };\n    };\n    var browsers = [\n      {\n        name: 'Edge',\n        versionRegexes: [/.*?edge\\/ ?([0-9]+)\\.([0-9]+)$/],\n        search: function (uastring) {\n          var monstrosity = contains(uastring, 'edge/') && contains(uastring, 'chrome') && contains(uastring, 'safari') && contains(uastring, 'applewebkit');\n          return monstrosity;\n        }\n      },\n      {\n        name: 'Chrome',\n        versionRegexes: [\n          /.*?chrome\\/([0-9]+)\\.([0-9]+).*/,\n          normalVersionRegex\n        ],\n        search: function (uastring) {\n          return contains(uastring, 'chrome') && !contains(uastring, 'chromeframe');\n        }\n      },\n      {\n        name: 'IE',\n        versionRegexes: [\n          /.*?msie\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*?rv:([0-9]+)\\.([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return contains(uastring, 'msie') || contains(uastring, 'trident');\n        }\n      },\n      {\n        name: 'Opera',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?opera\\/([0-9]+)\\.([0-9]+).*/\n        ],\n        search: checkContains('opera')\n      },\n      {\n        name: 'Firefox',\n        versionRegexes: [/.*?firefox\\/\\ ?([0-9]+)\\.([0-9]+).*/],\n        search: checkContains('firefox')\n      },\n      {\n        name: 'Safari',\n        versionRegexes: [\n          normalVersionRegex,\n          /.*?cpu os ([0-9]+)_([0-9]+).*/\n        ],\n        search: function (uastring) {\n          return (contains(uastring, 'safari') || contains(uastring, 'mobile/')) && contains(uastring, 'applewebkit');\n        }\n      }\n    ];\n    var oses = [\n      {\n        name: 'Windows',\n        search: checkContains('win'),\n        versionRegexes: [/.*?windows\\ nt\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'iOS',\n        search: function (uastring) {\n          return contains(uastring, 'iphone') || contains(uastring, 'ipad');\n        },\n        versionRegexes: [\n          /.*?version\\/\\ ?([0-9]+)\\.([0-9]+).*/,\n          /.*cpu os ([0-9]+)_([0-9]+).*/,\n          /.*cpu iphone os ([0-9]+)_([0-9]+).*/\n        ]\n      },\n      {\n        name: 'Android',\n        search: checkContains('android'),\n        versionRegexes: [/.*?android\\ ?([0-9]+)\\.([0-9]+).*/]\n      },\n      {\n        name: 'OSX',\n        search: checkContains('os x'),\n        versionRegexes: [/.*?os\\ x\\ ?([0-9]+)_([0-9]+).*/]\n      },\n      {\n        name: 'Linux',\n        search: checkContains('linux'),\n        versionRegexes: []\n      },\n      {\n        name: 'Solaris',\n        search: checkContains('sunos'),\n        versionRegexes: []\n      },\n      {\n        name: 'FreeBSD',\n        search: checkContains('freebsd'),\n        versionRegexes: []\n      }\n    ];\n    var PlatformInfo = {\n      browsers: constant(browsers),\n      oses: constant(oses)\n    };\n\n    var detect$2 = function (userAgent) {\n      var browsers = PlatformInfo.browsers();\n      var oses = PlatformInfo.oses();\n      var browser = UaString.detectBrowser(browsers, userAgent).fold(Browser.unknown, Browser.nu);\n      var os = UaString.detectOs(oses, userAgent).fold(OperatingSystem.unknown, OperatingSystem.nu);\n      var deviceType = DeviceType(os, browser, userAgent);\n      return {\n        browser: browser,\n        os: os,\n        deviceType: deviceType\n      };\n    };\n    var PlatformDetection = { detect: detect$2 };\n\n    var detect$3 = cached(function () {\n      var userAgent = domGlobals.navigator.userAgent;\n      return PlatformDetection.detect(userAgent);\n    });\n    var PlatformDetection$1 = { detect: detect$3 };\n\n    var regularContains = function (e1, e2) {\n      var d1 = e1.dom();\n      var d2 = e2.dom();\n      return d1 === d2 ? false : d1.contains(d2);\n    };\n    var ieContains = function (e1, e2) {\n      return Node.documentPositionContainedBy(e1.dom(), e2.dom());\n    };\n    var browser = PlatformDetection$1.detect().browser;\n    var contains$1 = browser.isIE() ? ieContains : regularContains;\n\n    var parent = function (element) {\n      var dom = element.dom();\n      return Option.from(dom.parentNode).map(Element.fromDom);\n    };\n    var spot = Immutable('element', 'offset');\n\n    var getRootElement = function (elm) {\n      return parent(elm).filter(function (parentElm) {\n        return name(parentElm) === 'figure';\n      }).getOr(elm);\n    };\n    var register$1 = function (editor) {\n      var makeContextMenuItem = function (node) {\n        return {\n          text: 'Image',\n          icon: 'image',\n          onAction: function () {\n            var rootElm = getRootElement(Element.fromDom(node));\n            editor.selection.select(rootElm.dom());\n            Dialog(editor).open();\n          }\n        };\n      };\n      editor.ui.registry.addToggleButton('image', {\n        icon: 'image',\n        tooltip: 'Insert/edit image',\n        onAction: Dialog(editor).open,\n        onSetup: function (buttonApi) {\n          return editor.selection.selectorChangedWithUnbind('img:not([data-mce-object],[data-mce-placeholder]),figure.image', buttonApi.setActive).unbind;\n        }\n      });\n      editor.ui.registry.addMenuItem('image', {\n        icon: 'image',\n        text: 'Image...',\n        onAction: Dialog(editor).open\n      });\n      editor.ui.registry.addContextMenu('image', {\n        update: function (element) {\n          return isFigure(element) || isImage(element) ? [makeContextMenuItem(element)] : [];\n        }\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('image', function (editor) {\n      FilterContent.setup(editor);\n      Buttons.register(editor);\n      Commands.register(editor);\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}(window));\n})();\n","// Exports the \"code\" plugin for usage with module loaders\n// Usage:\n//   CommonJS:\n//     require('tinymce/plugins/code')\n//   ES2015:\n//     import 'tinymce/plugins/code'\nrequire('./plugin.js');","/**\n * Copyright (c) Tiny Technologies, Inc. All rights reserved.\n * Licensed under the LGPL or a commercial license.\n * For LGPL see License.txt in the project root for license information.\n * For commercial licenses see https://www.tiny.cloud/\n *\n * Version: 5.0.2 (2019-03-05)\n */\n(function () {\nvar code = (function () {\n    'use strict';\n\n    var global = tinymce.util.Tools.resolve('tinymce.PluginManager');\n\n    var setContent = function (editor, html) {\n      editor.focus();\n      editor.undoManager.transact(function () {\n        editor.setContent(html);\n      });\n      editor.selection.setCursorLocation();\n      editor.nodeChanged();\n    };\n    var getContent = function (editor) {\n      return editor.getContent({ source_view: true });\n    };\n    var Content = {\n      setContent: setContent,\n      getContent: getContent\n    };\n\n    var open = function (editor) {\n      var editorContent = Content.getContent(editor);\n      editor.windowManager.open({\n        title: 'Source Code',\n        size: 'large',\n        body: {\n          type: 'panel',\n          items: [{\n              type: 'textarea',\n              name: 'code'\n            }]\n        },\n        buttons: [\n          {\n            type: 'cancel',\n            name: 'cancel',\n            text: 'Cancel'\n          },\n          {\n            type: 'submit',\n            name: 'save',\n            text: 'Save',\n            primary: true\n          }\n        ],\n        initialData: { code: editorContent },\n        onSubmit: function (api) {\n          Content.setContent(editor, api.getData().code);\n          api.close();\n        }\n      });\n    };\n    var Dialog = { open: open };\n\n    var register = function (editor) {\n      editor.addCommand('mceCodeEditor', function () {\n        Dialog.open(editor);\n      });\n    };\n    var Commands = { register: register };\n\n    var register$1 = function (editor) {\n      editor.ui.registry.addButton('code', {\n        icon: 'sourcecode',\n        tooltip: 'Source code',\n        onAction: function () {\n          return Dialog.open(editor);\n        }\n      });\n      editor.ui.registry.addMenuItem('code', {\n        icon: 'sourcecode',\n        text: 'Source code',\n        onAction: function () {\n          return Dialog.open(editor);\n        }\n      });\n    };\n    var Buttons = { register: register$1 };\n\n    global.add('code', function (editor) {\n      Commands.register(editor);\n      Buttons.register(editor);\n      return {};\n    });\n    function Plugin () {\n    }\n\n    return Plugin;\n\n}());\n})();\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as ScriptLoader from '../ScriptLoader';\nimport { getTinymce } from '../TinyMCE';\nimport { bindHandlers, isFunction, isTextarea, mergePlugins, uuid } from '../Utils';\nimport { EditorPropTypes } from './EditorPropTypes';\nvar scriptState = ScriptLoader.create();\nvar Editor = /** @class */ (function (_super) {\n    __extends(Editor, _super);\n    function Editor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.element = null;\n        _this.initialise = function () {\n            var finalInit = __assign({}, _this.props.init, { target: _this.element, readonly: _this.props.disabled, inline: _this.inline, plugins: mergePlugins(_this.props.init && _this.props.init.plugins, _this.props.plugins), toolbar: _this.props.toolbar || (_this.props.init && _this.props.init.toolbar), setup: function (editor) {\n                    _this.editor = editor;\n                    editor.on('init', function (e) {\n                        _this.initEditor(e, editor);\n                    });\n                    if (_this.props.init && typeof _this.props.init.setup === 'function') {\n                        _this.props.init.setup(editor);\n                    }\n                } });\n            if (isTextarea(_this.element)) {\n                _this.element.style.visibility = '';\n            }\n            getTinymce().init(finalInit);\n        };\n        return _this;\n    }\n    Editor.prototype.componentWillMount = function () {\n        this.id = this.id || this.props.id || uuid('tiny-react');\n        this.inline = this.props.inline ? this.props.inline : this.props.init && this.props.init.inline;\n    };\n    Editor.prototype.componentDidMount = function () {\n        if (getTinymce() !== null) {\n            this.initialise();\n        }\n        else if (this.element && this.element.ownerDocument) {\n            var doc = this.element.ownerDocument;\n            var channel = this.props.cloudChannel;\n            var apiKey = this.props.apiKey ? this.props.apiKey : '';\n            ScriptLoader.load(scriptState, doc, \"https://cloud.tinymce.com/\" + channel + \"/tinymce.min.js?apiKey=\" + apiKey, this.initialise);\n        }\n    };\n    Editor.prototype.componentWillUnmount = function () {\n        if (getTinymce() !== null) {\n            getTinymce().remove(this.editor);\n        }\n    };\n    Editor.prototype.componentWillReceiveProps = function (nextProps) {\n        if (this.editor && this.editor.initialized) {\n            this.currentContent = this.currentContent || this.editor.getContent();\n            if (typeof nextProps.value === 'string' && nextProps.value !== this.props.value && nextProps.value !== this.currentContent) {\n                this.editor.setContent(nextProps.value);\n            }\n            if (typeof nextProps.disabled === 'boolean' && nextProps.disabled !== this.props.disabled) {\n                this.editor.setMode(nextProps.disabled ? 'readonly' : 'design');\n            }\n        }\n    };\n    Editor.prototype.render = function () {\n        return this.inline ? this.renderInline() : this.renderIframe();\n    };\n    Editor.prototype.initEditor = function (initEvent, editor) {\n        var _this = this;\n        var value = typeof this.props.value === 'string' ? this.props.value : typeof this.props.initialValue === 'string' ? this.props.initialValue : '';\n        editor.setContent(value);\n        if (isFunction(this.props.onEditorChange)) {\n            editor.on('change keyup setcontent', function (e) {\n                _this.currentContent = editor.getContent();\n                if (isFunction(_this.props.onEditorChange)) {\n                    _this.props.onEditorChange(_this.currentContent);\n                }\n            });\n        }\n        bindHandlers(this.props, editor, initEvent);\n    };\n    Editor.prototype.renderInline = function () {\n        var _this = this;\n        var _a = this.props.tagName, tagName = _a === void 0 ? 'div' : _a;\n        return React.createElement(tagName, {\n            ref: function (elm) { return (_this.element = elm); },\n            id: this.id\n        });\n    };\n    Editor.prototype.renderIframe = function () {\n        var _this = this;\n        return React.createElement(\"textarea\", { ref: function (elm) { return (_this.element = elm); }, style: { visibility: 'hidden' }, id: this.id, name: this.props.textareaName });\n    };\n    Editor.propTypes = EditorPropTypes;\n    Editor.defaultProps = {\n        cloudChannel: '5'\n    };\n    return Editor;\n}(React.Component));\nexport { Editor };\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as PropTypes from 'prop-types';\nexport var eventPropTypes = {\n    onActivate: PropTypes.func,\n    onAddUndo: PropTypes.func,\n    onBeforeAddUndo: PropTypes.func,\n    onBeforeExecCommand: PropTypes.func,\n    onBeforeGetContent: PropTypes.func,\n    onBeforeRenderUI: PropTypes.func,\n    onBeforeSetContent: PropTypes.func,\n    onBeforePaste: PropTypes.func,\n    onBlur: PropTypes.func,\n    onChange: PropTypes.func,\n    onClearUndos: PropTypes.func,\n    onClick: PropTypes.func,\n    onContextMenu: PropTypes.func,\n    onCopy: PropTypes.func,\n    onCut: PropTypes.func,\n    onDblclick: PropTypes.func,\n    onDeactivate: PropTypes.func,\n    onDirty: PropTypes.func,\n    onDrag: PropTypes.func,\n    onDragDrop: PropTypes.func,\n    onDragEnd: PropTypes.func,\n    onDragGesture: PropTypes.func,\n    onDragOver: PropTypes.func,\n    onDrop: PropTypes.func,\n    onExecCommand: PropTypes.func,\n    onFocus: PropTypes.func,\n    onFocusIn: PropTypes.func,\n    onFocusOut: PropTypes.func,\n    onGetContent: PropTypes.func,\n    onHide: PropTypes.func,\n    onInit: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyPress: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    onLoadContent: PropTypes.func,\n    onMouseDown: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    onMouseMove: PropTypes.func,\n    onMouseOut: PropTypes.func,\n    onMouseOver: PropTypes.func,\n    onMouseUp: PropTypes.func,\n    onNodeChange: PropTypes.func,\n    onObjectResizeStart: PropTypes.func,\n    onObjectResized: PropTypes.func,\n    onObjectSelected: PropTypes.func,\n    onPaste: PropTypes.func,\n    onPostProcess: PropTypes.func,\n    onPostRender: PropTypes.func,\n    onPreProcess: PropTypes.func,\n    onProgressState: PropTypes.func,\n    onRedo: PropTypes.func,\n    onRemove: PropTypes.func,\n    onReset: PropTypes.func,\n    onSaveContent: PropTypes.func,\n    onSelectionChange: PropTypes.func,\n    onSetAttrib: PropTypes.func,\n    onSetContent: PropTypes.func,\n    onShow: PropTypes.func,\n    onSubmit: PropTypes.func,\n    onUndo: PropTypes.func,\n    onVisualAid: PropTypes.func\n};\nexport var EditorPropTypes = __assign({ apiKey: PropTypes.string, id: PropTypes.string, inline: PropTypes.bool, init: PropTypes.object, initialValue: PropTypes.string, onEditorChange: PropTypes.func, value: PropTypes.string, tagName: PropTypes.string, cloudChannel: PropTypes.string, plugins: PropTypes.oneOfType([PropTypes.string, PropTypes.array]), toolbar: PropTypes.oneOfType([PropTypes.string, PropTypes.array]), disabled: PropTypes.bool, textareaName: PropTypes.string }, eventPropTypes);\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { eventPropTypes } from './components/EditorPropTypes';\nvar isValidKey = function (keys) { return function (key) { return keys.indexOf(key) !== -1; }; };\n// tslint:disable-next-line:ban-types\nexport var isFunction = function (x) { return typeof x === 'function'; };\nexport var bindHandlers = function (props, editor, initEvent) {\n    Object.keys(props)\n        .filter(isValidKey(Object.keys(eventPropTypes)))\n        .forEach(function (key) {\n        var handler = props[key];\n        if (isFunction(handler)) {\n            if (key === 'onInit') {\n                handler(initEvent, editor);\n            }\n            else {\n                editor.on(key.substring(2), function (e) { return handler(e, editor); });\n            }\n        }\n    });\n};\nvar unique = 0;\nexport var uuid = function (prefix) {\n    var date = new Date();\n    var time = date.getTime();\n    var random = Math.floor(Math.random() * 1000000000);\n    unique++;\n    return prefix + '_' + random + unique + String(time);\n};\nexport var isTextarea = function (element) {\n    return element !== null && element.tagName.toLowerCase() === 'textarea';\n};\nvar normalizePluginArray = function (plugins) {\n    if (typeof plugins === 'undefined' || plugins === '') {\n        return [];\n    }\n    return Array.isArray(plugins) ? plugins : plugins.split(' ');\n};\nexport var mergePlugins = function (initPlugins, inputPlugins) {\n    return normalizePluginArray(initPlugins).concat(normalizePluginArray(inputPlugins));\n};\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { uuid } from './Utils';\nvar injectScriptTag = function (scriptId, doc, url, callback) {\n    var scriptTag = doc.createElement('script');\n    scriptTag.type = 'application/javascript';\n    scriptTag.id = scriptId;\n    scriptTag.addEventListener('load', callback);\n    scriptTag.src = url;\n    if (doc.head) {\n        doc.head.appendChild(scriptTag);\n    }\n};\nexport var create = function () {\n    return {\n        listeners: [],\n        scriptId: uuid('tiny-script'),\n        scriptLoaded: false\n    };\n};\nexport var load = function (state, doc, url, callback) {\n    if (state.scriptLoaded) {\n        callback();\n    }\n    else {\n        state.listeners.push(callback);\n        if (!doc.getElementById(state.scriptId)) {\n            injectScriptTag(state.scriptId, doc, url, function () {\n                state.listeners.forEach(function (fn) { return fn(); });\n                state.scriptLoaded = true;\n            });\n        }\n    }\n};\n","/**\n * Copyright (c) 2017-present, Ephox, Inc.\n *\n * This source code is licensed under the Apache 2 license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nimport { Editor } from './components/Editor';\nexport { Editor };\n"],"sourceRoot":""}