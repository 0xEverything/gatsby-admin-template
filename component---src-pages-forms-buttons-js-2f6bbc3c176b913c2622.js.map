{"version":3,"sources":["webpack:///./src/pages/forms/buttons.js","webpack:///./src/components/SEO.js"],"names":["__webpack_require__","r","__webpack_exports__","d","ButtonPage","oah_ui__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","_components_SEO__WEBPACK_IMPORTED_MODULE_3__","style","marginBottom","status","a","createElement","Fragment","title","keywords","xs","map","state","key","fullWidth","hero","outline","middle","size","shape","type","value","onClick","navigate","SEO","_ref","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-pages-forms-buttons-js-2f6bbc3c176b913c2622.js","sourcesContent":["import {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Button,\n  ButtonInput,\n  ButtonLink\n} from 'oah-ui';\nimport { navigate } from 'gatsby';\nimport React from 'react';\nimport SEO from '../../components/SEO';\n\nconst style = { marginBottom: '1.5rem' };\n\nexport default function ButtonPage() {\n  const status = [\n    'Info',\n    'Success',\n    'Danger',\n    'Primary',\n    'Warning',\n    'Secondary'\n  ];\n  return (\n    <>\n      <SEO title=\"Button\" keywords={['OAH', 'application', 'react']} />\n      <Row>\n        <Col xs={12}>\n          <Card>\n            <header>Button Hero</header>\n            <CardBody>\n              <Row>\n                {status.map(state => (\n                  <Col key={state} style={style} xs>\n                    <Button fullWidth hero status={state}>\n                      {state}\n                    </Button>\n                  </Col>\n                ))}\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col xs={12}>\n          <Card>\n            <header>Button Colors</header>\n            <CardBody>\n              <Row>\n                {status.map(state => (\n                  <Col key={state} style={style} xs>\n                    <Button fullWidth status={state}>\n                      {state}\n                    </Button>\n                  </Col>\n                ))}\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col xs={12}>\n          <Card>\n            <header>Button Outline</header>\n            <CardBody>\n              <Row>\n                {status.map(state => (\n                  <Col key={state} style={style} xs>\n                    <Button fullWidth outline status={state}>\n                      {state}\n                    </Button>\n                  </Col>\n                ))}\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col xs={12}>\n          <Card>\n            <header>Button Size</header>\n            <CardBody>\n              <Row middle=\"xs\">\n                {['XS', 'SM', 'MD', 'LG'].map(size => (\n                  <Col key={size} style={style} xs>\n                    <Button fullWidth size={size}>\n                      {size}\n                    </Button>\n                  </Col>\n                ))}\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col xs={12}>\n          <Card>\n            <header>Button Shape</header>\n            <CardBody>\n              <Row middle=\"xs\">\n                {['Rectangle', 'SemiRound', 'Round'].map(shape => (\n                  <Col key={shape} style={style} xs>\n                    <Button fullWidth shape={shape}>\n                      {shape}\n                    </Button>\n                  </Col>\n                ))}\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col xs={12}>\n          <Card>\n            <header>Button Elements</header>\n            <CardBody>\n              <Row middle=\"xs\">\n                <Col style={style} xs>\n                  <Button fullWidth shape=\"Rectangle\">\n                    Button\n                  </Button>\n                </Col>\n                <Col style={style} xs>\n                  <ButtonInput\n                    fullWidth\n                    shape=\"Rectangle\"\n                    type=\"button\"\n                    value=\"Input button\"\n                  />\n                </Col>\n                <Col style={style} xs>\n                  <ButtonInput\n                    fullWidth\n                    shape=\"Rectangle\"\n                    type=\"submit\"\n                    value=\"Input submit\"\n                  />\n                </Col>\n                <Col style={style} xs>\n                  <ButtonLink\n                    onClick={() => navigate('/')}\n                    fullWidth\n                    shape=\"Rectangle\"\n                  >\n                    Link\n                  </ButtonLink>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription\n              },\n              {\n                property: 'og:title',\n                content: title\n              },\n              {\n                property: 'og:description',\n                content: metaDescription\n              },\n              {\n                property: 'og:type',\n                content: 'website'\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary'\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: 'twitter:title',\n                content: title\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', ')\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}