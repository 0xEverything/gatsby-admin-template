{"version":3,"sources":["webpack:///./src/pages/extra-components/tabs.js","webpack:///./src/components/SEO.js"],"names":["__webpack_require__","r","__webpack_exports__","oah_ui__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","TabPage","a","createElement","Fragment","title","keywords","xs","activeIndex","fullWidth","icon","badge","status","position","responsive","SEO","_ref","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,KA2CeQ,UAvCC,WACd,OACEH,EAAAI,EAAAC,cAAAL,EAAAI,EAAAE,SAAA,KACEN,EAAAI,EAAAC,cAACH,EAAA,EAAD,CAAKK,MAAM,OAAOC,SAAU,CAAC,MAAO,cAAe,WACnDR,EAAAI,EAAAC,cAACP,EAAA,IAAD,KACEE,EAAAI,EAAAC,cAACP,EAAA,IAAD,CAAKW,GAAI,IACPT,EAAAI,EAAAC,cAACP,EAAA,KAAD,KACEE,EAAAI,EAAAC,cAACP,EAAA,KAAD,CAAMY,YAAa,EAAGC,WAAS,GAC7BX,EAAAI,EAAAC,cAACP,EAAA,IAAD,CACES,MAAM,QACNK,KAAK,oBACLC,MAAO,CAAEC,OAAQ,SAAUP,MAAO,KAAMQ,SAAU,YAClDC,YAAU,GAEVhB,EAAAI,EAAAC,cAAA,wBAEFL,EAAAI,EAAAC,cAACP,EAAA,IAAD,CACES,MAAM,QACNK,KAAK,4BACLC,MAAO,CAAEC,OAAQ,OAAQP,MAAO,KAAMQ,SAAU,aAChDC,YAAU,GAEVhB,EAAAI,EAAAC,cAAA,wBAEFL,EAAAI,EAAAC,cAACP,EAAA,IAAD,CACES,MAAM,QACNK,KAAK,sBACLC,MAAO,CAAEC,OAAQ,UAAWP,MAAO,KAAMQ,SAAU,YACnDC,YAAU,GAEVhB,EAAAI,EAAAC,cAAA,uIC7BhB,SAASY,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMb,EAAmBU,EAAnBV,SAAUD,EAASW,EAATX,MAChD,OACEP,EAAAI,EAAAC,cAACiB,EAAA,YAAD,CACEC,MAAOC,EACPC,OAAQ,SAAAC,GACN,IAAMC,EACJR,GAAeO,EAAKE,KAAKC,aAAaV,YACxC,OACEnB,EAAAI,EAAAC,cAACyB,EAAA1B,EAAD,CACE2B,eAAgB,CACdX,QAEFb,MAAOA,EACPyB,cAAa,QAAUN,EAAKE,KAAKC,aAAatB,MAC9Cc,KAAM,CACJ,CACEY,KAAM,cACNC,QAASP,GAEX,CACEQ,SAAU,WACVD,QAAS3B,GAEX,CACE4B,SAAU,iBACVD,QAASP,GAEX,CACEQ,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAM,gBACNC,QAAS3B,GAEX,CACE0B,KAAM,sBACNC,QAASP,IAGVU,OACC7B,EAAS8B,OAAS,EACd,CACAL,KAAM,WACNC,QAAS1B,EAAS+B,KAAK,OAEvB,IAELF,OAAOhB,MAtDlBK,KAAAc,IA8DJvB,EAAIwB,aAAe,CACjBrB,KAAM,KACNC,KAAM,GACNb,SAAU,IAGZS,EAAIyB,UAAY,CACdvB,YAAawB,IAAUC,OACvBxB,KAAMuB,IAAUC,OAChBvB,KAAMsB,IAAUE,MAChBrC,SAAUmC,IAAUG,QAAQH,IAAUC,QACtCrC,MAAOoC,IAAUC,OAAOG,YAGX9B,MAEf,IAAMO,EAAY","file":"component---src-pages-extra-components-tabs-js-dd3ffc2bfec8f500761c.js","sourcesContent":["import { Col, Row, Card, Tabs, Tab } from 'oah-ui';\nimport React from 'react';\nimport SEO from '../../components/SEO';\n\nconst TabPage = () => {\n  return (\n    <>\n      <SEO title=\"Tabs\" keywords={['OAH', 'application', 'react']} />\n      <Row>\n        <Col xs={12}>\n          <Card>\n            <Tabs activeIndex={0} fullWidth>\n              <Tab\n                title=\"Tab 1\"\n                icon=\"icon ion-ios-home\"\n                badge={{ status: 'Danger', title: '11', position: 'topStart' }}\n                responsive\n              >\n                <h1>Content 1</h1>\n              </Tab>\n              <Tab\n                title=\"Tab 2\"\n                icon=\"icon ion-ios-star-outline\"\n                badge={{ status: 'Info', title: '11', position: 'bottomEnd' }}\n                responsive\n              >\n                <h1>Content 2</h1>\n              </Tab>\n              <Tab\n                title=\"Tab 3\"\n                icon=\"icon ion-ios-switch\"\n                badge={{ status: 'Success', title: '11', position: 'topStart' }}\n                responsive\n              >\n                <h1>Content 3</h1>\n              </Tab>\n            </Tabs>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\nexport default TabPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription\n              },\n              {\n                property: 'og:title',\n                content: title\n              },\n              {\n                property: 'og:description',\n                content: metaDescription\n              },\n              {\n                property: 'og:type',\n                content: 'website'\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary'\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: 'twitter:title',\n                content: title\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', ')\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}