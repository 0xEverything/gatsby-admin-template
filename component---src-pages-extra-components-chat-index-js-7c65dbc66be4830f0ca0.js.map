{"version":3,"sources":["webpack:///./src/components/messages.js","webpack:///./src/pages/extra-components/Chat/index.js","webpack:///./src/components/SEO.js"],"names":["components_messages","message","reply","date","Date","toLocaleTimeString","sender","avatar","type","files","url","quote","icon","latitude","longitude","ChatPage","_useState","useState","defaultMessages","messages","setMessages","react_default","a","createElement","Fragment","SEO","title","keywords","oah_ui","xs","md","style","marginBottom","mapKey","onSend","v","map","file","src","newMessage","length","concat","onSendHandle","dropFiles","filesIcon","className","__webpack_require__","d","__webpack_exports__","_ref","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-pages-extra-components-chat-index-js-7c65dbc66be4830f0ca0.js","sourcesContent":["export default [\n  {\n    message:\n      'Hello, how are you? This should be a very long message so that we can test how it fit into the screen.',\n    reply: false,\n    date: new Date().toLocaleTimeString(),\n    sender: 'John Doe',\n    avatar: 'https://i.gifer.com/no.gif'\n  },\n  {\n    message:\n      'Hello, how are you? This should be a very long message so that we can test how it fit into the screen.',\n    reply: true,\n    date: new Date().toLocaleTimeString(),\n    sender: 'John Doe',\n    avatar: 'https://i.gifer.com/no.gif'\n  },\n  {\n    message: 'Hello, how are you?',\n    reply: false,\n    date: new Date().toLocaleTimeString(),\n    sender: 'John Doe',\n    avatar: ''\n  },\n  {\n    message: 'Hey looks at that pic I just found!',\n    reply: false,\n    date: new Date().toLocaleTimeString(),\n    type: 'file',\n    files: [\n      {\n        url: 'https://i.gifer.com/no.gif',\n        type: 'image/jpeg'\n      }\n    ],\n    sender: 'John Doe',\n    avatar: ''\n  },\n  {\n    message: 'What do you mean by that?',\n    reply: false,\n    date: new Date().toLocaleTimeString(),\n    type: 'quote',\n    quote:\n      'Hello, how are you? This should be a very long message so that we can test how it fit into the screen.',\n    sender: 'John Doe',\n    avatar: ''\n  },\n  {\n    message: 'Attached is an archive I mentioned',\n    reply: true,\n    date: new Date().toLocaleTimeString(),\n    type: 'file',\n    files: [\n      {\n        url: 'https://i.gifer.com/no.gif',\n        icon: 'icon ion-ios-document'\n      }\n    ],\n    sender: 'John Doe',\n    avatar: ''\n  },\n  {\n    message: 'Meet me there',\n    reply: false,\n    date: new Date().toLocaleTimeString(),\n    type: 'map',\n    latitude: 30.789901,\n    longitude: 30.999093,\n    sender: 'John Doe',\n    avatar: ''\n  }\n];\n","import { Row, Col, Card, Chat, ChatForm, ChatMessages } from 'oah-ui';\nimport React, { useState } from 'react';\nimport SEO from '../../../components/SEO';\nimport defaultMessages from '../../../components/messages';\n\nexport default function ChatPage() {\n  const [messages, setMessages] = useState(defaultMessages);\n\n  const onSendHandle = v => {\n    const files = !v.files\n      ? []\n      : v.files.map(file => {\n        return {\n          url: file.src,\n          type: file.type,\n          icon: 'icon ion-ios-document'\n        };\n      });\n    const newMessage = {\n      message: v.message,\n      date: new Date().toLocaleTimeString(),\n      reply: true,\n      type: files.length ? 'file' : 'text',\n      files,\n      sender: 'Jonh Doe',\n      avatar: 'https://i.gifer.com/no.gif'\n    };\n    setMessages([...messages, newMessage]);\n  };\n\n  return (\n    <>\n      <SEO title=\"Chat\" keywords={['OAH', 'application', 'react']} />\n      <Row>\n        <Col xs={12} md={6} style={{ marginBottom: '1rem' }}>\n          <Chat title=\"OAH Technology\">\n            <ChatMessages messages={messages} mapKey=\"API_KEY\" />\n            <ChatForm\n              onSend={v => onSendHandle(v)}\n              dropFiles\n              filesIcon=\"icon ion-ios-document\"\n            />\n          </Chat>\n        </Col>\n        <Col xs={12} md={6}>\n          <Card>\n            <header>Main features</header>\n            <div className=\"card-body\">\n              <ul>\n                <li>\n                  different message types support (text, image, file, file\n                  group, map, etc)\n                </li>\n                <li>drag &amp; drop for images and files with preview</li>\n                <li>different UI styles</li>\n              </ul>\n              <Row />\n            </div>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { StaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description;\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription\n              },\n              {\n                property: 'og:title',\n                content: title\n              },\n              {\n                property: 'og:description',\n                content: metaDescription\n              },\n              {\n                property: 'og:type',\n                content: 'website'\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary'\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author\n              },\n              {\n                name: 'twitter:title',\n                content: title\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription\n              }\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                    name: 'keywords',\n                    content: keywords.join(', ')\n                  }\n                  : []\n              )\n              .concat(meta)}\n          />\n        );\n      }}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: []\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired\n};\n\nexport default SEO;\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}