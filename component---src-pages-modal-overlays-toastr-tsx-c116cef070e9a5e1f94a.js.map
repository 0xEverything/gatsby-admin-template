{"version":3,"sources":["webpack:///./src/pages/modal-overlays/toastr.tsx"],"names":["SelectStyled","styled","Select","ToastrPage","useState","count","setCount","title","setTitle","message","setMessage","position","status","duration","hasIcon","destroyByClick","preventDuplicates","data","setData","toastrRef","useRef","onChangeHandle","name","value","newData","positionOptions","label","statusOption","breakPoint","xs","ref","md","fullWidth","placeholder","options","find","onChange","v","type","e","target","valueAsNumber","state","style","display","flexDirection","checked","onClick","current","add"],"mappings":"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","file":"component---src-pages-modal-overlays-toastr-tsx-c116cef070e9a5e1f94a.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Row, Col, InputGroup, Checkbox, Toastr, Button, Card, CardBody, ToastrRef, ToastrProps, Select } from 'oah-ui';\nimport styled from 'styled-components';\n\nconst SelectStyled = styled(Select)`\n  margin-bottom: 1rem;\n`;\n\nexport default function ToastrPage() {\n  const [count, setCount] = useState(1);\n  const [title, setTitle] = useState('HI there!');\n  const [message, setMessage] = useState('cool toaster');\n\n  const [data, setData] = useState<ToastrProps>({\n    position: 'topEnd',\n    status: 'Primary',\n    duration: 2000,\n    hasIcon: true,\n    destroyByClick: true,\n    preventDuplicates: false,\n  });\n\n  type Option = { value: any; label: any };\n\n  const toastrRef = useRef<ToastrRef>(null);\n\n  const showToastr = () => {\n    setCount(count + 1);\n    toastrRef.current?.add(message, title + count, { ...data });\n  };\n\n  const onChangeHandle = (name: keyof ToastrProps, value: any) => {\n    const newData = { ...data };\n    newData[name] = value;\n    setData(newData);\n  };\n\n  const positionOptions: Option[] = [\n    { value: 'topRight', label: 'Top-Right' },\n    { value: 'topLeft', label: 'Top-Left' },\n    { value: 'bottomRight', label: 'Bottom-Right' },\n    { value: 'bottomLeft', label: 'Bottom-Left' },\n    { value: 'topStart', label: 'Top-Start' },\n    { value: 'topEnd', label: 'Top-End' },\n    { value: 'bottomStart', label: 'Bottom-Start' },\n    { value: 'bottomEnd', label: 'Bottom-End' },\n  ];\n  const statusOption: Option[] = [\n    { value: 'Info', label: 'Info' },\n    { value: 'Success', label: 'Success' },\n    { value: 'Danger', label: 'Danger' },\n    { value: 'Primary', label: 'Primary' },\n    { value: 'Warning', label: 'Warning' },\n    { value: 'Default', label: 'Default' },\n  ];\n\n  return (\n    <Row>\n      <Col breakPoint={{ xs: 12 }}>\n        <Toastr ref={toastrRef} />\n        <Card>\n          <header>Toaster configuration</header>\n          <CardBody>\n            <Row>\n              <Col breakPoint={{ xs: 12, md: 6 }}>\n                <SelectStyled\n                  fullWidth\n                  placeholder=\"Place to show toast\"\n                  options={positionOptions}\n                  value={positionOptions.find(position => position.value === data.position)}\n                  onChange={(v: Option) => onChangeHandle('position', v.value)}\n                />\n                <InputGroup fullWidth>\n                  <input type=\"text\" placeholder=\"Title\" value={title} onChange={e => setTitle(e.target.value)} />\n                </InputGroup>\n                <InputGroup fullWidth>\n                  <input type=\"text\" placeholder=\"Message\" value={message} onChange={e => setMessage(e.target.value)} />\n                </InputGroup>\n                <InputGroup fullWidth>\n                  <input\n                    placeholder=\"Time to hide toast, ms. 0 to persistent toast\"\n                    type=\"number\"\n                    value={data.duration}\n                    onChange={e => onChangeHandle('duration', e.target.valueAsNumber)}\n                  />\n                </InputGroup>\n              </Col>\n              <Col breakPoint={{ xs: 12, md: 6 }}>\n                <SelectStyled\n                  fullWidth\n                  placeholder=\"Toast Status\"\n                  options={statusOption}\n                  value={statusOption.find(state => state.value === data.status)}\n                  onChange={(v: Option) => onChangeHandle('status', v.value)}\n                />\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox checked={data.destroyByClick} onChange={v => onChangeHandle('destroyByClick', v)}>\n                    Hide on click\n                  </Checkbox>\n                  <Checkbox checked={data.preventDuplicates} onChange={v => onChangeHandle('preventDuplicates', v)}>\n                    Prevent arising of duplicate toast\n                  </Checkbox>\n                  <Checkbox checked={data.hasIcon} onChange={v => onChangeHandle('hasIcon', v)}>\n                    Show toast with icon\n                  </Checkbox>\n                </div>\n              </Col>\n            </Row>\n          </CardBody>\n          <footer>\n            <Button onClick={showToastr}>Show Toastr</Button>\n          </footer>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n"],"sourceRoot":""}