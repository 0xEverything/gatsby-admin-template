{"version":3,"sources":["webpack:///./src/pages/modal-overlays/toastr.js"],"names":["ToastrPage","_useState","useState","count","setCount","_useState2","title","message","position","status","duration","hasIcon","destroyByClick","preventDuplicates","data","setData","toastrRef","useRef","onChangeHandle","name","value","newData","Object","assign","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","oah_ui_Grid__WEBPACK_IMPORTED_MODULE_2__","xs","oah_ui_Toastr__WEBPACK_IMPORTED_MODULE_5___default","ref","oah_ui_Card__WEBPACK_IMPORTED_MODULE_3__","className","md","oah_ui__WEBPACK_IMPORTED_MODULE_6__","fullWidth","label","options","onChange","v","type","e","target","valueAsNumber","style","display","flexDirection","checked","oah_ui_Button__WEBPACK_IMPORTED_MODULE_4__","onClick","current","add"],"mappings":"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","file":"component---src-pages-modal-overlays-toastr-js-24f5d7bb31b4bc969bec.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { Row, Col } from 'oah-ui/Grid';\nimport { Card } from 'oah-ui/Card';\nimport { Button } from 'oah-ui/Button';\nimport Toastr from 'oah-ui/Toastr';\nimport { InputGroup, Checkbox, Select } from 'oah-ui';\n\nexport default function ToastrPage() {\n  const [count, setCount] = useState(1);\n  const [data, setData] = useState({\n    title: 'HI there!',\n    message: 'cool toaster',\n    position: 'topEnd',\n    status: 'Primary',\n    duration: 2000,\n    hasIcon: true,\n    destroyByClick: true,\n    preventDuplicates: false\n  });\n\n  const toastrRef = useRef();\n\n  const showToastr = () => {\n    setCount(count + 1);\n    toastrRef.current.add(data.title + count, data.message, { ...data });\n  };\n\n  const onChangeHandle = (name, value) => {\n    const newData = { ...data };\n    newData[name] = value;\n    setData(newData);\n  };\n\n  const positionOptions = [\n    { value: 'topRight', label: 'Top-Right' },\n    { value: 'topLeft', label: 'Top-Left' },\n    { value: 'bottomRight', label: 'Bottom-Right' },\n    { value: 'bottomLeft', label: 'Bottom-Left' },\n    { value: 'topStart', label: 'Top-Start' },\n    { value: 'topEnd', label: 'Top-End' },\n    { value: 'bottomStart', label: 'Bottom-Start' },\n    { value: 'bottomEnd', label: 'Bottom-End' }\n  ];\n  const statusOption = [\n    { value: 'Info', label: 'Info' },\n    { value: 'Success', label: 'Success' },\n    { value: 'Danger', label: 'Danger' },\n    { value: 'Primary', label: 'Primary' },\n    { value: 'Warning', label: 'Warning' },\n    { value: 'Default', label: 'Default' }\n  ];\n\n  return (\n    <Row>\n      <Col xs={12}>\n        <Toastr ref={toastrRef} />\n        <Card>\n          <header>Toaster configuration</header>\n          <div className=\"card-body\">\n            <Row>\n              <Col xs={12} md={6}>\n                <Select\n                  fullWidth\n                  label=\"Place to show toast\"\n                  options={positionOptions}\n                  onChange={v => onChangeHandle('position', v.value)}\n                />\n                <InputGroup fullWidth label=\"Title\">\n                  <input\n                    type=\"text\"\n                    value={data.title}\n                    onChange={e => onChangeHandle('title', e.target.value)}\n                  />\n                </InputGroup>\n                <InputGroup fullWidth label=\"Message\">\n                  <input\n                    type=\"text\"\n                    value={data.message}\n                    onChange={e => onChangeHandle('message', e.target.value)}\n                  />\n                </InputGroup>\n                <InputGroup\n                  fullWidth\n                  label=\"Time to hide toast, ms. 0 to persistent toast\"\n                >\n                  <input\n                    type=\"number\"\n                    value={data.duration}\n                    onChange={e =>\n                      onChangeHandle('duration', e.target.valueAsNumber)\n                    }\n                  />\n                </InputGroup>\n              </Col>\n              <Col xs={12} md={6}>\n                <Select\n                  fullWidth\n                  label=\"Toast Status\"\n                  options={statusOption}\n                  onChange={v => onChangeHandle('status', v.value)}\n                />\n                <div style={{ display: 'flex', flexDirection: 'column' }}>\n                  <Checkbox\n                    checked={data.destroyByClick}\n                    onChange={v => onChangeHandle('destroyByClick', v)}\n                  >\n                    Hide on click\n                  </Checkbox>\n                  <Checkbox\n                    checked={data.preventDuplicates}\n                    onChange={v => onChangeHandle('preventDuplicates', v)}\n                  >\n                    Prevent arising of duplicate toast\n                  </Checkbox>\n                  <Checkbox\n                    checked={data.hasIcon}\n                    onChange={v => onChangeHandle('hasIcon', v)}\n                  >\n                    Show toast with icon\n                  </Checkbox>\n                </div>\n              </Col>\n            </Row>\n          </div>\n          <footer>\n            <Button onClick={showToastr}>Show Toastr</Button>\n          </footer>\n        </Card>\n      </Col>\n    </Row>\n  );\n}\n"],"sourceRoot":""}